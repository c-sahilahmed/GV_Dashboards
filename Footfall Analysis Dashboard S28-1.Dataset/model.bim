{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "PBI_QueryOrder",
        "value": "[\"ePavilion Wise Details\",\"Coordinates_wifi\",\"Gates Measures\",\"Footfall Measures\",\"Visitation Measures\",\"Demographics Measures\",\"Display Measures\",\"Pavilion Wise Details\",\"DwellByPavAndDate_alllocations\",\"GuestCounts\",\"GuestCounts (2)\",\"GuestCounts (3)\",\"Pav Sensor + Park Footfall 2\",\"Concerts\",\"S27_GuestCounts\",\"Forecast\",\"Slicer Design\",\"Pav Sensor Footfall by Hour\",\"Kaizen Modelling\",\"Sales Data all Seasons\",\"Dwell - Ground\",\"Visitation Length\",\"Movement - Wifi\",\"Gates Hourwise Entry\",\"Pav Sensor + Park Footfall 2 (2)\",\"Pav Sensor Footfall by Hour (2)\",\"S27_GuestCounts_2\",\"Sales Data all Seasons (2)\",\"S27_GuestCounts_3\"]"
      },
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "1"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.126.1261.0 (24.02)"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DaxQueryView_Desktop\",\"DevMode\"]"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "DynamicImprovement": "HighConfidence",
            "Entities": {
              "average_movement": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "average movement": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Average_movement": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "movement": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "average effort": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "effort": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "average drive": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "average crusade": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "average undertaking": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "average program": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "average measure": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "drive": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "crusade": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "undertaking": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "average_movement.count": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "count"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "count": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "average_movement.from_zone": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "fromZone"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "from zone": {
                      "State": "Generated"
                    }
                  },
                  {
                    "fromZone": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "from region": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "from precinct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "from district": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from sector": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from neighborhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from area": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "zone": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "average_movement.from_zone_latitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "fromZoneLatitude"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "from zone latitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "fromZoneLatitude": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "from region latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from zone leeway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from zone freedom": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from zone autonomy": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from zone liberty": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from precinct latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from zone opportunity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from district latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "from sector latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "from neighborhood latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "average_movement.from_zone_longtitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "fromZoneLongtitude"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "from zone longtitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "fromZoneLongtitude": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "from region longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from precinct longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "from district longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "from sector longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "from neighborhood longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "from area longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "average_movement.measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "Flow to Zone %"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "average_movement.percentage": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "Percentage%"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "percentage%": {
                      "State": "Generated"
                    }
                  },
                  {
                    "percentage percentage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "percentage pct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "average_movement.to_zone": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "toZone"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "to zone": {
                      "State": "Generated"
                    }
                  },
                  {
                    "toZone": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "to region": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "to precinct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "to district": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "to sector": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "to neighborhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "to area": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "zone": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "average_movement.to_zone_latitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "toZoneLatitude"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "to zone latitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "toZoneLatitude": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "to region latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to zone leeway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to zone freedom": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to zone autonomy": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to zone liberty": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to precinct latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to zone opportunity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to district latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "to sector latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "to neighborhood latitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "average_movement.to_zone_longtitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Average_movement",
                    "ConceptualProperty": "toZoneLongtitude"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "to zone longtitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "toZoneLongtitude": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "to region longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to precinct longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "to district longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "to sector longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "to neighborhood longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "to area longtitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "avg_vs_sum": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Avg vs Sum"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "avg vs sum": {
                      "State": "Generated"
                    }
                  },
                  {
                    "avg vs summation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "avg vs aggregation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "avg vs total": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "avg vs aggregate": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "avg vs amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "average vs sum": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "avg_vs_sum.value": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Avg vs Sum",
                    "ConceptualProperty": "Value"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "value": {
                      "State": "Generated"
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "worth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "price": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "cost": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "charge": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "rate": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "importance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "significance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "usefulness": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "consequence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  }
                ]
              },
              "compare_with": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Compare with"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "compare with": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "compare_with.compared_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Compare with",
                    "ConceptualProperty": "Compared_Label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "compared label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Compared_Label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "label": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "compared sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "compared tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "compared decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "compared name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.589
                    }
                  },
                  {
                    "name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.571
                    }
                  }
                ]
              },
              "compare_with.value": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Compare with",
                    "ConceptualProperty": "Value"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "value": {
                      "State": "Generated"
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "worth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "price": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "cost": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "charge": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "rate": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "importance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "significance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "usefulness": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "consequence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  }
                ]
              },
              "coordinates_wifi": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Coordinates_wifi"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "coordinates wifi": {
                      "State": "Generated"
                    }
                  },
                  {
                    "coordinate wifi": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "Coordinates_wifi": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "wifi": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "zone": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "coordinates_wifi.area": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Coordinates_wifi",
                    "ConceptualProperty": "Area(m2)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "area": {
                      "State": "Generated"
                    }
                  },
                  {
                    "area (m2)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Area(m2)": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "region": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "locale": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "neighbourhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "district": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "continent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "field": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "neighborhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "section": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "space": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ],
                "Units": [
                  "square meter",
                  "m2"
                ]
              },
              "coordinates_wifi.latitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Coordinates_wifi",
                    "ConceptualProperty": "LATITUDE"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "latitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "leeway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "freedom": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "autonomy": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "liberty": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "opportunity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "room": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "space": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "rope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "coordinates_wifi.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Coordinates_wifi",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "coordinates_wifi.longitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Coordinates_wifi",
                    "ConceptualProperty": "LONGITUDE"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "longitude": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "demographics_measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Demographics Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "demographics measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "demographics degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "demographics quantity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "demographics quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "demographics extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "demographics amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "demographics portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "demographics ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "demographics size": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "demographics_measure.adults_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Demographics Measures",
                    "ConceptualProperty": "Adults_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "adults compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Adults_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "adult compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "adult compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "adult compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "demographics_measure.adults_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Demographics Measures",
                    "ConceptualProperty": "Adults_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "adults selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Adults_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "adult selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "adult selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "adult selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "demographics_measure.kids_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Demographics Measures",
                    "ConceptualProperty": "Kids_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "kids compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Kids_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "kid compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "kid compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "kid compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "demographics_measure.kids_selectedseason": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Demographics Measures",
                    "ConceptualProperty": "Kids_selectedseason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "kids selectedseason": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Kids_selectedseason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "display_measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "display measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "display degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "display quantity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "display quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "display extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "display amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "display portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "display ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "display size": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "display_measure.data_refresh_details__availability": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Data Refresh Details & Availability"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "data refresh details & availability": {
                      "State": "Generated"
                    }
                  },
                  {
                    "information refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "fact refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "info refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "statistic refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "document refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "figure refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "record refresh detail & availability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "data refresh detail & obtainability": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.52
                    }
                  },
                  {
                    "data refresh detail & handiness": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.52
                    }
                  },
                  {
                    "data refresh detail & accessibility": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.52
                    }
                  }
                ]
              },
              "display_measure.event_M_easure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Event_Measure"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "event M easure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Event_MEasure": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "Event": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "event nickname": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "event title": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "event label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "event tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "occurrence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "affair": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "episode": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "occasion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "happening": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "incident": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "Event Name": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "display_measure.park_footfall_compared_season_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Park_Footfall_compared_season_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "park footfall compared season label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Park_Footfall_compared_season_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "park footfall compared season sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "park footfall compared season tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.757
                    }
                  },
                  {
                    "park footfall compared season decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.757
                    }
                  },
                  {
                    "park footfall compared season name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.629
                    }
                  }
                ]
              },
              "display_measure.park_footfall_selected_season_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Park_Footfall_selected_season_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "park footfall selected season label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Park_Footfall_selected_season_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "park footfall selected season sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "park footfall selected season tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.757
                    }
                  },
                  {
                    "park footfall selected season decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.757
                    }
                  },
                  {
                    "park footfall selected season name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.629
                    }
                  }
                ]
              },
              "display_measure.pav_footfall_compared_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Pav_footfall_compared_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav footfall compared label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pav_footfall_compared_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pav footfall compared sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "pav footfall compared tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav footfall compared decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav footfall compared name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  }
                ]
              },
              "display_measure.pav_footfall_selected_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Pav_footfall_selected_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav footfall selected label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pav_footfall_selected_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pav footfall selected sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "pav footfall selected tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav footfall selected decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav footfall selected name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  }
                ]
              },
              "display_measure.pav_sensors_last_refresh_msg": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Pav_Sensors_Last_Refresh_Msg"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav sensors last refresh msg": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pav_Sensors_Last_Refresh_Msg": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "msg": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "refresh msg": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "last refresh msg": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "sensors last refresh msg": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "pav sensor end refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor final refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor closing refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor concluding refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor finishing refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor former refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor latest refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor latter refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor past refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "pav sensor remaining refresh msg": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ]
              },
              "display_measure.pav_visitation_compared_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Pav_Visitation_compared_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav visitation compared label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pav_Visitation_compared_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pav visitation compared sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "pav visitation compared tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav visitation compared decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav visitation compared name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  }
                ]
              },
              "display_measure.pav_visitation_selected_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Pav_Visitation_selected_label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav visitation selected label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pav_Visitation_selected_label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pav visitation selected sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "pav visitation selected tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav visitation selected decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pav visitation selected name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  }
                ]
              },
              "display_measure.prev_season_msg": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Prev Season Msg"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "prev season msg": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "display_measure.selected_label": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Display Measures",
                    "ConceptualProperty": "Selected_Label"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "selected label": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Selected_Label": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "label": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "selected sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "sticker": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "selected tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "selected decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "decal": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "selected name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.589
                    }
                  },
                  {
                    "name tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.571
                    }
                  }
                ]
              },
              "distinct": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct_Movement_Wifi"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "distinct movement wifi": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Distinct_Movement_Wifi": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "wifi": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "movement wifi": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "distinct.from_zone": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct_Movement_Wifi",
                    "ConceptualProperty": "fromZone"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "from zone": {
                      "State": "Generated"
                    }
                  },
                  {
                    "fromZone": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "from region": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "from precinct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "from district": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from sector": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from neighborhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "from area": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "zone": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "distinct.wifi_location_type": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct_Movement_Wifi",
                    "ConceptualProperty": "Wifi_Location_Type"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "wifi location type": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Wifi_Location_Type": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "type": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "wifi location category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "wifi location genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "wifi location manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "wifi location variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "wifi location brand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "wifi location class": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "wifi location kind": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "wifi location style": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "wifi location form": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "wifi location grouping": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  }
                ]
              },
              "distinct_2": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct Pav Sensor + Park Footfall"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "distinct pav sensor + park footfall": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "distinct_2.column": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct Pav Sensor + Park Footfall",
                    "ConceptualProperty": "Column"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "column": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pilaster": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "pier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "pillar": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "post": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "support": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "stake": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "pole": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "buttress": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "underpinning": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "contribution": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  }
                ]
              },
              "distinct_2.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct Pav Sensor + Park Footfall",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "distinct_DwellByPavAndDate_alllocation": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct DwellByPavAndDate_alllocations"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "distinct DwellByPavAndDate_alllocation": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "distinct_DwellByPavAndDate_alllocation.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Distinct DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "dwell by pav and date alllocations": {
                      "State": "Generated"
                    }
                  },
                  {
                    "dwell by pav and date alllocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "DwellByPavAndDate_alllocations": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "dwell by pav": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "dwell by pav date alllocations": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "dwell by pav date alllocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.7566
                    }
                  },
                  {
                    "date alllocations": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "date alllocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.7566
                    }
                  },
                  {
                    "dwell by pav moment alllocation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "dwell by pav period alllocation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "moment alllocation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period alllocation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.InSelectedComparedSeason": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "InSelected&ComparedSeasons"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "InSelected&ComparedSeason": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.avg_dwelltime_compared_season_2": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Avg_Dwelltime_compared_season2"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "avg dwelltime compared season 2": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Avg_Dwelltime_compared_season2": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "average dwelltime compared season 2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.avg_dwelltime_selectedseason_2": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Avg_Dwelltime_selectedseason2"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "avg dwelltime selectedseason 2": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Avg_Dwelltime_selectedseason2": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "average dwelltime selectedseason 2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "ComparedSeason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "ComparedSeason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.continued_location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "ContinuedLocation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "continued location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "ContinuedLocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "continued locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "continued placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "continued scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "continued venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "continued address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "continued place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "continued position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "continued setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "continued site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "continued spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.day_num_tag": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "day_num_tag"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "day num tag": {
                      "State": "Generated"
                    }
                  },
                  {
                    "day_num_tag": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "day number tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "day num identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num tab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num docket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num code": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num chip": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num mark": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.dwell": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "dwell(Minutes)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "dwell": {
                      "State": "Generated"
                    }
                  },
                  {
                    "dwell (Minutes)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "dwell (Minute)": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "dwell(Minutes)": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ],
                "Units": [
                  "minute"
                ]
              },
              "dwell_by_pav_and_date_alllocations.footfall": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "footfall"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "footfall": {
                      "State": "Generated"
                    }
                  },
                  {
                    "footstep": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "step": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "tread": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "pace": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "sound": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.location_type": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "location_type"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location type": {
                      "State": "Generated"
                    }
                  },
                  {
                    "location_type": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "type": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "location category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "location brand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "location class": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.new_location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "NewLocation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewLocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "new locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation date": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Operation_Date": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "date": {
                      "State": "Generated",
                      "Weight": 0.7
                    }
                  },
                  {
                    "operation moment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "operation period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "Hierarchy": "Date Hierarchy",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation date hierarchy": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date hierarchy": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Day",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation moment day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.month": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Month",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "operation mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "operation moment month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.quarter": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Quarter",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.846
                    }
                  },
                  {
                    "operation qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.833
                    }
                  },
                  {
                    "qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.818
                    }
                  },
                  {
                    "operation moment quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.year": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Year",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "operation yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "operation moment year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.season_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Season_ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season_ID": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "season identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.seasonlocation_ID2": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Season+Location ID2"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season+location ID2": {
                      "State": "Generated"
                    }
                  },
                  {
                    "season+ locality id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ placement id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ scene id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ venue id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ address id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ place id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ position id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ setting id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ site id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ spot id2": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "SelectedSeason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "SelectedSeason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.total_park_attendence": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "Total_Park_Attendence"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "total park attendence": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Total_Park_Attendence": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "aggregate park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "overall park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "dwell_by_pav_and_date_alllocations.week_num": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate_alllocations",
                    "ConceptualProperty": "week_num"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "week num": {
                      "State": "Generated"
                    }
                  },
                  {
                    "week_num": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "week number": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "dwellbypavanddate.avg_dwelltime_raw_data": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "DwellByPavAndDate",
                    "ConceptualProperty": "Avg_Dwelltime_Raw_Data"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Avg Dwell Time(mins)": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "footfall measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "footfall degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "footfall quantity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "footfall quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "footfall extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "footfall amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "footfall portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "footfall ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "footfall size": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "footfall_measure.Pavilion_Footfall_Change_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Pavilion_Footfall_Change_%"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pavilion_Footfall_Change_%": {
                      "State": "Generated"
                    }
                  },
                  {
                    "footfall change_ percentage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "pavilion_footfall_change_ percentage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "footfall change_ pct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "pavilion_footfall_change_ pct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "Footfall change_%": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.Pavilion_Footfall_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Pavilion_Footfall_selected season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pavilion_Footfall_selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion footfall selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "pavilion footfall selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "pavilion footfall selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion_footfall_selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "pavilion_footfall_selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "pavilion_footfall_selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "Pavilion footfall selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Footfall selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.Pavilion_Footfall_selected_season_map": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Pavilion_Footfall_selected season_map"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pavilion_Footfall_selected season_map": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "footfall_measure.Plotting_Park_Footfall_compared_season_guestcounts_average": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_compared_season_guestcounts Average"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Plotting_Park_Footfall_compared_season_guestcounts average": {
                      "State": "Generated"
                    }
                  },
                  {
                    "plotting_park_footfall_compared_season_guestcount mode": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "plotting_park_footfall_compared_season_guestcount norm": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "plotting_park_footfall_compared_season_guestcount mean": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "plotting_park_footfall_compared_season_guestcount median": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  }
                ]
              },
              "footfall_measure.footfall_per_m_2_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Footfall_per_m2_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "footfall per m 2 compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Footfall_per_m2_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "footstep per m2 compared season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.52
                    }
                  },
                  {
                    "step per m2 compared season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "tread per m2 compared season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pace per m2 compared season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "sound per m2 compared season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "Footfall per m2 compared season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.footfall_per_m_2_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Footfall_per_m2_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "footfall per m 2 selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Footfall_per_m2_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "footstep per m2 selected season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.52
                    }
                  },
                  {
                    "step per m2 selected season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "tread per m2 selected season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pace per m2 selected season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "sound per m2 selected season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "Footfall per m2 selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.pavilion_footfall_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Pavilion_Footfall_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion footfall compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pavilion_Footfall_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pavilion footfall compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "pavilion footfall compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "pavilion footfall compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "Footfall compared season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.per_m_2_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "per_m2_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "per m 2 selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "per_m2_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "per m 2 selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "per m 2 selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "per m 2 selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  }
                ]
              },
              "footfall_measure.plotting_park_footfall_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "plotting park footfall compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Plotting_Park_Footfall_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "plotting park footfall compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "plotting park footfall compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "plotting park footfall compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  }
                ]
              },
              "footfall_measure.plotting_park_footfall_compared_season_guestcounts": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_compared_season_guestcounts"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "plotting park footfall compared season guestcounts": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Plotting_Park_Footfall_compared_season_guestcounts": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "compare season": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "Footfall compare season": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "park footfall compare period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall compare term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall compare spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall compare period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall compare term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "footfall compare spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "compare period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "compare term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "compare spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "Park Footfall compare season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.plotting_park_footfall_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "plotting park footfall selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Plotting_Park_Footfall_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "plotting park footfall selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "plotting park footfall selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "plotting park footfall selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  }
                ]
              },
              "footfall_measure.plotting_park_footfall_selected_season_guest_counts": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_selected_season_guest_counts"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "plotting park footfall selected season guest counts": {
                      "State": "Generated"
                    }
                  },
                  {
                    "park footfall selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Park Footfall selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "footfall_measure.plotting_park_footfall_selected_season_guest_counts_average": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Footfall Measures",
                    "ConceptualProperty": "Plotting_Park_Footfall_selected_season_guest_counts average"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "plotting park footfall selected season guest counts average": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "from_coordinate": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "from_coordinates"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "from coordinate": {
                      "State": "Generated"
                    }
                  },
                  {
                    "from_coordinates": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "from_coordinate.area": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "from_coordinates",
                    "ConceptualProperty": "Area(m2)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "area": {
                      "State": "Generated"
                    }
                  },
                  {
                    "area (m2)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Area(m2)": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "region": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "locale": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "neighbourhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "district": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "continent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "field": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "neighborhood": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "section": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "space": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ],
                "Units": [
                  "square meter",
                  "m2"
                ]
              },
              "from_coordinate.latitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "from_coordinates",
                    "ConceptualProperty": "LATITUDE"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "latitude": {
                      "State": "Generated"
                    }
                  },
                  {
                    "leeway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "freedom": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "autonomy": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "liberty": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "opportunity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "room": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "space": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "rope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "from_coordinate.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "from_coordinates",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "from_coordinate.longitude": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "from_coordinates",
                    "ConceptualProperty": "LONGITUDE"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "longitude": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "gates_measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "gates measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "gate measure": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "gate degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "gate quantity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "gate quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "gate extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "gate amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "gate portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "gate ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "gate size": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "gates_measure.CG__compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "CG_%_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "CG_%_compared_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "cg_ percentage _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "cg_ pct _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "gates_measure.CG__selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "CG_%_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "CG_%_selected_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Gate": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "cg_ percentage _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "cg_ pct _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "cultural entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "Cultural Gate": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "gates_measure.CG_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "CG_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "CG compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "CG_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "cg compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "cg compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "cg compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "gates_measure.CG_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "CG_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "CG selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "CG_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "cg selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "cg selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "cg selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "gates_measure.GOW__compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "GOW_%_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "GOW_%_compared_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "gow_ percentage _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "gow_ pct _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "gates_measure.GOW__selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "GOW_%_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "GOW_%_selected_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "gow_ percentage _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "gow_ pct _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "entry of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "door of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "gateway of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "doorway of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "entrance of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "opening of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "postern of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "access of the world": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Gate of the World": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "gates_measure.GOW_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "GOW_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "GOW compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "GOW_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "gow compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "gow compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "gow compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "gates_measure.GOW_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "GOW_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "GOW selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "GOW_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "gow selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "gow selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "gow selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "gates_measure.HappinessGate__27": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "HappinessGate_%_27"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "HappinessGate_%_27": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Gate": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "happinessgate_ percentage _27": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "happinessgate_ pct _27": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "happiness entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "Happiness Gate": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "gates_measure.happiness_gate_S27": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Gates Measures",
                    "ConceptualProperty": "HappinessGate_S27"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "happiness gate S27": {
                      "State": "Generated"
                    }
                  },
                  {
                    "HappinessGate_S27": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "S27": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "gate S27": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "HG S27": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "guest_count": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "guest count": {
                      "State": "Generated"
                    }
                  },
                  {
                    "GuestCounts": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "guest amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "guest_count.HG_self_vending_kiosk": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "HG self vending kiosks"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "HG self vending kiosk": {
                      "State": "Generated"
                    }
                  },
                  {
                    "kiosk": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "vending kiosk": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "self vending kiosk": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "hg self vending booth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "hg self vending cubicle": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "self vending booth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "self vending cubicle": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "vending booth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "vending cubicle": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "hg self vending stall": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "hg self vending cabin": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "hg self vending stand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "hg self vending hut": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  }
                ]
              },
              "guest_count.cultural_gate": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Cultural_Gate"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cultural gate": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Cultural_Gate": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "gate": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "cultural entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "cultural doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "cultural entrance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "cultural opening": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "guest_count.date": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "date": {
                      "State": "Generated"
                    }
                  },
                  {
                    "moment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  }
                ]
              },
              "guest_count.date.variation.date_hierarchy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "Hierarchy": "Date Hierarchy",
                    "VariationSet": "Variation",
                    "VariationSource": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "date hierarchy": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "guest_count.date.variation.date_hierarchy.day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Day",
                    "VariationSet": "Variation",
                    "VariationSource": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "moment day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "guest_count.date.variation.date_hierarchy.month": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Month",
                    "VariationSet": "Variation",
                    "VariationSource": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "moment month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "guest_count.date.variation.date_hierarchy.quarter": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Quarter",
                    "VariationSet": "Variation",
                    "VariationSource": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.833
                    }
                  },
                  {
                    "qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.818
                    }
                  },
                  {
                    "moment quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "guest_count.date.variation.date_hierarchy.year": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Year",
                    "VariationSet": "Variation",
                    "VariationSource": "Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "moment year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "guest_count.day_num_tag": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "day_num_tag"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "day num tag": {
                      "State": "Generated"
                    }
                  },
                  {
                    "day_num_tag": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "day number tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "day num identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num tab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num docket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num code": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num chip": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num mark": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "guest_count.gate_of_the_word": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Gate_Of_The_Word"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "gate of the word": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Gate_Of_The_Word": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "entry of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "door of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "gateway of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "doorway of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "entrance of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "opening of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "postern of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "access of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "attendance of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.489
                    }
                  },
                  {
                    "turnout of the word": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.489
                    }
                  }
                ]
              },
              "guest_count.happiness_gate": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Happiness Gate"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "happiness gate": {
                      "State": "Generated"
                    }
                  },
                  {
                    "gate": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "happiness entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "happiness doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "entry": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "door": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "gateway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "doorway": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "happiness entrance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "happiness opening": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "guest_count.season_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Season_ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season_ID": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "season identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "guest_count.total_park_attendence": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "Total_Park_Attendence"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "total park attendence": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Total_Park_Attendence": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "aggregate park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "overall park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "guest_count.week_num": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "GuestCounts",
                    "ConceptualProperty": "week_num"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "week num": {
                      "State": "Generated"
                    }
                  },
                  {
                    "week_num": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "week number": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "like_to_like": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Like to Like"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "like to like": {
                      "State": "Generated"
                    }
                  },
                  {
                    "like": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "like_to_like.value": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Like to Like",
                    "ConceptualProperty": "Value"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "value": {
                      "State": "Generated"
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "worth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "price": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "cost": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "charge": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "rate": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "importance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "significance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "usefulness": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "consequence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  }
                ]
              },
              "location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "location.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Location"
                  }
                },
                "NameType": "Name",
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "location name": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "location.new_season_23_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "NewSeason23_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new season 23 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewSeason23_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.new_season_24_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "NewSeason24_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new season 24 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewSeason24_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.new_season_25_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "NewSeason25_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new season 25 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewSeason25_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.new_season_26_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "NewSeason26_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new season 26 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewSeason26_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.new_season_27_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "NewSeason27_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new season 27 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewSeason27_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_22_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season22_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 22 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season22_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_23_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season23_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 23 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season23_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_24_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season24_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 24 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season24_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_25_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season25_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 25 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season25_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_26_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season26_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 26 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season26_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "location.season_27_loc": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Locations",
                    "ConceptualProperty": "Season27_locs"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season 27 loc": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season27_locs": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "parkfootfallbydate.pav_sensor__park_footfall_season_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ParkFootfallByDate",
                    "ConceptualProperty": "Pav Sensor + Park Footfall_Season_id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Season ID": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall.footfall_per_m2_raw_data": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall",
                    "ConceptualProperty": "Footfall_per_m2_Raw_data"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Footfall per m2": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall.season_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall",
                    "ConceptualProperty": "Season_id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Season ID": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall.total_pavilion_entries_raw_data": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall",
                    "ConceptualProperty": "Total_Pavilion_Entries_Raw_Data"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Total Pavilion Footfall": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pav sensor + park footfall 2": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.cg": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "CG"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cg": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.compared_period": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Compared period"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "compared period": {
                      "State": "Generated"
                    }
                  },
                  {
                    "period": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "compared era": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "compared epoch": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "era": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "epoch": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "compared age": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "compared stage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "compared phase": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "age": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "stage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "phase": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.day_num_tag": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "day_num_tag"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "day num tag": {
                      "State": "Generated"
                    }
                  },
                  {
                    "day_num_tag": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "day number tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "day num identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "day num label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num tab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num docket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num code": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num chip": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "day num mark": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.first_day_of_operation": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "First day of operation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "first day of operation": {
                      "State": "Generated"
                    }
                  },
                  {
                    "first day": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.gow": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "GOW"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "gow": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.gow__cg_tvm": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "GOW & CG TVM"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "gow & cg tvm": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.hg": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "HG"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "hg": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.hg_tvm": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "HG TVM"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "hg tvm": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.in_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "InComparedSeason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "in compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "InComparedSeason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "in compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "in compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "in compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.in_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "InSelectedSeason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "in selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "InSelectedSeason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "in selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "in selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "in selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.last_day_of_operation": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Last day of operation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "last day of operation": {
                      "State": "Generated"
                    }
                  },
                  {
                    "last day": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "end day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "final day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "closing day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "concluding day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "finishing day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "former day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "latest day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "latter day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "past day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "remaining day of operation": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "pav_sensor__park_footfall_2.location_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Location_id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location id": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Location_id": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.location_type": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Location_type"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location type": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Location_type": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "type": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "location category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "location brand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "location class": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.max_day_num_tag": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Max_day_num_tag"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "max day num tag": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Max_day_num_tag": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "maximum day num tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "max day number tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "max day num identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "max day num device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "max day num label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "max day num ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "max day num tab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "max day num docket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "max day num code": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "max day num chip": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.min_day_num_tag": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Min_day_num_tag"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "min day num tag": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Min_day_num_tag": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "minimum day num tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "min day number tag": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "min day num identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "min day num device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  },
                  {
                    "min day num label": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "min day num ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "min day num tab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "min day num docket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "min day num code": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "min day num chip": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.new_location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "NewLocation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "NewLocation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "new locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "new address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "new spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.new_pavilions": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "New_Pavilions"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "new pavilions": {
                      "State": "Generated"
                    }
                  },
                  {
                    "New_Pavilions": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "pavilions": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "pavilions footfall": {
                      "State": "Suggested",
                      "Weight": 0.873
                    }
                  },
                  {
                    "new pavilion footstep": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "pavilion footstep": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "new pavilion step": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "new pavilion tread": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "new pavilion pace": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "new pavilion sound": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion step": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "pavilion tread": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "pavilion pace": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "pavilion sound": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "New pavilions footfall": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation date": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Operation_Date": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "date": {
                      "State": "Generated",
                      "Weight": 0.7
                    }
                  },
                  {
                    "operation moment": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "operation period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "Hierarchy": "Date Hierarchy",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation date hierarchy": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date hierarchy": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Day",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation moment day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.month": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Month",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date month": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "operation mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "mth": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "operation moment month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period month": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.quarter": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Quarter",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date quarter": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.846
                    }
                  },
                  {
                    "operation qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.833
                    }
                  },
                  {
                    "qtr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.818
                    }
                  },
                  {
                    "operation moment quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period quarter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.year": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "Hierarchy": "Date Hierarchy",
                    "HierarchyLevel": "Year",
                    "VariationSet": "Variation",
                    "VariationSource": "Operation_Date"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "operation year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date year": {
                      "State": "Generated"
                    }
                  },
                  {
                    "operation date yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "operation yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "yr": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "operation moment year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "operation period year": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.pavilion_size": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Pavilion Size"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion size": {
                      "State": "Generated"
                    }
                  },
                  {
                    "size": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "pavilion extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "pavilion magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "pavilion scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "pavilion volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "pavilion dimension": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "pavilion mass": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.seasonlocation_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Season+Location ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season+location ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "season+location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "season+ locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "pav_sensor__park_footfall_2.sensor": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Sensor"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "sensor": {
                      "State": "Generated"
                    }
                  },
                  {
                    "device": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "radar": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "feeler": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "antenna": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "instrument": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "beam": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.total_entries": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Total_Entries"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "total entries": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Total_Entries": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "entries": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "aggregate entries": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "overall entries": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "total admission": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "total admittance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "admission": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "admittance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "total entrance": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "total access": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "total pass": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "total ticket": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.total_park_attendence": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Total_Park_Attendence"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "total park attendence": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Total_Park_Attendence": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "aggregate park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "overall park attendence": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.total_period_sensor_is_operational": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "Total_period_sensor_is_operational"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "total period sensor is operational": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Total_period_sensor_is_operational": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "aggregate period sensor is operational": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  },
                  {
                    "overall period sensor is operational": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ]
              },
              "pav_sensor__park_footfall_2.week_num": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pav Sensor + Park Footfall 2",
                    "ConceptualProperty": "week_num"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "week num": {
                      "State": "Generated"
                    }
                  },
                  {
                    "week_num": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "week number": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "pavilion_wise_detail": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion wise detail": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion wise aspect": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "pavilion wise element": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "pavilion wise fact": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.508
                    }
                  },
                  {
                    "pavilion wise part": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion wise feature": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion wise point": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion wise factor": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion wise facet": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.492
                    }
                  },
                  {
                    "pavilion wise unit": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.482
                    }
                  },
                  {
                    "pavilion wise taskforce": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.482
                    }
                  }
                ]
              },
              "pavilion_wise_detail.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "pavilion_wise_detail.location_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Location_id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location id": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Location_id": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "pavilion_wise_detail.location_type": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Location Types"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location type": {
                      "State": "Generated"
                    }
                  },
                  {
                    "type": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "location category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "category": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "genre": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "manner": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "variety": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "location brand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "location class": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "pavilion_wise_detail.pavilion_size": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Pavilion_Size"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion size": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pavilion_Size": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "size": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "pavilion extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "pavilion magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "pavilion scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "pavilion volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "pavilion dimension": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "pavilion mass": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "Pavilion_Size (m2)": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pavilion_wise_detail.season_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Season_ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season_ID": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "season identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "pavilion_wise_detail.seasonlocation_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Pavilion Wise Details",
                    "ConceptualProperty": "Season+Location ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season+location ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "season+location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "season+ locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "sensors_operation": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Sensors_Operation"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "sensors operation": {
                      "State": "Generated"
                    }
                  },
                  {
                    "sensor operation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "Sensors_Operation": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "operation": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "sensor procedure": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "sensor setup": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "procedure": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "setup": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "sensor process": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "sensor action": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "sensor act": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "sensor maneuver": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "sensor job": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "sensor task": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "sensors_operation.max_day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Sensors_Operation",
                    "ConceptualProperty": "Max_day"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "max day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Max_day": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "maximum day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "sensors_operation.min_day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Sensors_Operation",
                    "ConceptualProperty": "Min_day"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "min day": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Min_day": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "minimum day": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "sensors_operation.season_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Sensors_Operation",
                    "ConceptualProperty": "Season_ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season_ID": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "season identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "sensors_operation.seasonlocation_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Sensors_Operation",
                    "ConceptualProperty": "Season+Location ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season+location ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "season+location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "season+ locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "table": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "table": {
                      "State": "Generated"
                    }
                  },
                  {
                    "tabletop": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "bench": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "board": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "counter": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "stand": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "slab": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "desk": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "stall": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "table top": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spreadsheet": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  }
                ]
              },
              "table.location": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table",
                    "ConceptualProperty": "Location"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location": {
                      "State": "Generated"
                    }
                  },
                  {
                    "locality": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "placement": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "scene": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "venue": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "address": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "place": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "position": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "setting": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "site": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "spot": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ]
              },
              "table.location_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table",
                    "ConceptualProperty": "Location_id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "location id": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Location_id": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  }
                ]
              },
              "table.pavilion_size": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table",
                    "ConceptualProperty": "Pavilion_size"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion size": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Pavilion_size": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "size": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "pavilion extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "pavilion magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "magnitude": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "pavilion scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "scope": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "pavilion volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "volume": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "pavilion dimension": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "pavilion mass": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  }
                ]
              },
              "table.season_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table",
                    "ConceptualProperty": "Season_ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Season_ID": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "season": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "season identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "season credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "table.seasonlocation_id": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Table",
                    "ConceptualProperty": "Season+Location id"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "season+location id": {
                      "State": "Generated"
                    }
                  },
                  {
                    "season+location identification": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location identifier": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "season+location credential": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "season+ locality id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ placement id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ scene id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ venue id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.617
                    }
                  },
                  {
                    "season+ address id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "season+ place id": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "visitation_measure": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "visitation measure": {
                      "State": "Generated"
                    }
                  },
                  {
                    "visitation degree": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "visitation quantity": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "visitation quota": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "visitation extent": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "visitation amount": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "visitation portion": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "visitation ration": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "visitation size": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "visitation_measure.Pavilion_Visitation__compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Pavilion_Visitation_%_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pavilion_Visitation_%_compared_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion_visitation_ percentage _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "pavilion_visitation_ pct _compared_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "visitation_measure.Pavilion_Visitation__selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Pavilion_Visitation_%_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pavilion_Visitation_%_selected_season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion_visitation_ percentage _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.609
                    }
                  },
                  {
                    "pavilion_visitation_ pct _selected_season": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  }
                ]
              },
              "visitation_measure.avg_no_of_pav_visited_comparedseason": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Avg_No_Of_Pav_Visited_comparedseason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "avg no of pav visited comparedseason": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Avg_No_Of_Pav_Visited_comparedseason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "visitation_measure.avg_no_of_pav_visited_selectedseason": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Avg_No_Of_Pav_Visited_selectedseason"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "avg no of pav visited selectedseason": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Avg_No_Of_Pav_Visited_selectedseason": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "visitation_measure.footfall_penetration_change_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Footfall Penetration Change %"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "footfall penetration change %": {
                      "State": "Generated"
                    }
                  },
                  {
                    "footfall penetration change percentage": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "footfall penetration change pct": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  }
                ]
              },
              "visitation_measure.park_visitation_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Park_Visitation_compared_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "park visitation compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Park_Visitation_compared_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "park visitation compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park visitation compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park visitation compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Park footfall compared season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "visitation_measure.park_visitation_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Park_Visitation_selected_season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "park visitation selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Park_Visitation_selected_season": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "park visitation selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park visitation selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park visitation selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "park footfall selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Park footfall selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "visitation_measure.pavilion_footfall_penetration_compared_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Pavilion Footfall Penetration Compared Season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion footfall penetration compared season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion footfall penetration compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pavilion footfall penetration compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pavilion footfall penetration compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "footfall penetration compared period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall penetration compared term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall penetration compared spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Footfall penetration compared season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "visitation_measure.pavilion_footfall_penetration_selected_season": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Visitation Measures",
                    "ConceptualProperty": "Pavilion Footfall Penetration Selected Season"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pavilion footfall penetration selected season": {
                      "State": "Generated"
                    }
                  },
                  {
                    "pavilion footfall penetration selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pavilion footfall penetration selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "pavilion footfall penetration selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.504
                    }
                  },
                  {
                    "footfall penetration selected period": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall penetration selected term": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "footfall penetration selected spell": {
                      "Source": {
                        "Agent": "OfficeThesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.499
                    }
                  },
                  {
                    "Footfall penetration selected season": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              }
            },
            "Language": "en-US",
            "Relationships": {
              "average_movement_has_count": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.count"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.count": {
                    "Target": {
                      "Entity": "average_movement.count"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_from_zone": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.from_zone"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "average_movement.from_zone"
                      },
                      "Prepositions": [
                        {
                          "from": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.from_zone": {
                    "Target": {
                      "Entity": "average_movement.from_zone"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_from_zone_latitude": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.from_zone_latitude"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.from_zone_latitude": {
                    "Target": {
                      "Entity": "average_movement.from_zone_latitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_from_zone_longtitude": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.from_zone_longtitude"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.from_zone_longtitude": {
                    "Target": {
                      "Entity": "average_movement.from_zone_longtitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_measure": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.measure"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.measure": {
                    "Target": {
                      "Entity": "average_movement.measure"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_percentage": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.percentage"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.percentage": {
                    "Target": {
                      "Entity": "average_movement.percentage"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_to_zone": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.to_zone"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "average_movement.to_zone"
                      },
                      "Prepositions": [
                        {
                          "to": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.to_zone": {
                    "Target": {
                      "Entity": "average_movement.to_zone"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_to_zone_latitude": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.to_zone_latitude"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.to_zone_latitude": {
                    "Target": {
                      "Entity": "average_movement.to_zone_latitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "average_movement_has_to_zone_longtitude": {
                "Binding": {
                  "ConceptualEntity": "Average_movement"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "average_movement.to_zone_longtitude"
                      },
                      "Subject": {
                        "Role": "average_movement"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "average_movement": {
                    "Target": {
                      "Entity": "average_movement"
                    }
                  },
                  "average_movement.to_zone_longtitude": {
                    "Target": {
                      "Entity": "average_movement.to_zone_longtitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "avg_vs_sum_has_value": {
                "Binding": {
                  "ConceptualEntity": "Avg vs Sum"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "avg_vs_sum.value"
                      },
                      "Subject": {
                        "Role": "avg_vs_sum"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "avg_vs_sum": {
                    "Target": {
                      "Entity": "avg_vs_sum"
                    }
                  },
                  "avg_vs_sum.value": {
                    "Target": {
                      "Entity": "avg_vs_sum.value"
                    }
                  }
                },
                "State": "Generated"
              },
              "compare_with_has_compared_label": {
                "Binding": {
                  "ConceptualEntity": "Compare with"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "compare_with.compared_label"
                      },
                      "Subject": {
                        "Role": "compare_with"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "compare_with": {
                    "Target": {
                      "Entity": "compare_with"
                    }
                  },
                  "compare_with.compared_label": {
                    "Target": {
                      "Entity": "compare_with.compared_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "compare_with_has_value": {
                "Binding": {
                  "ConceptualEntity": "Compare with"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "compare_with.value"
                      },
                      "Subject": {
                        "Role": "compare_with"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "compare_with": {
                    "Target": {
                      "Entity": "compare_with"
                    }
                  },
                  "compare_with.value": {
                    "Target": {
                      "Entity": "compare_with.value"
                    }
                  }
                },
                "State": "Generated"
              },
              "coordinates_wifi_has_area": {
                "Binding": {
                  "ConceptualEntity": "Coordinates_wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "coordinates_wifi.area"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Adjective": {
                      "Adjectives": [
                        {
                          "large": {
                            "State": "Generated"
                          }
                        },
                        {
                          "big": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Antonyms": [
                        {
                          "small": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Measurement": {
                        "Role": "coordinates_wifi.area"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "coordinates_wifi.area": {
                    "Target": {
                      "Entity": "coordinates_wifi.area"
                    }
                  }
                },
                "State": "Generated"
              },
              "coordinates_wifi_has_latitude": {
                "Binding": {
                  "ConceptualEntity": "Coordinates_wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "coordinates_wifi.latitude"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "coordinates_wifi.latitude": {
                    "Target": {
                      "Entity": "coordinates_wifi.latitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "coordinates_wifi_has_location": {
                "Binding": {
                  "ConceptualEntity": "Coordinates_wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "coordinates_wifi.location"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "coordinates_wifi.location": {
                    "Target": {
                      "Entity": "coordinates_wifi.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "coordinates_wifi_has_longitude": {
                "Binding": {
                  "ConceptualEntity": "Coordinates_wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "coordinates_wifi.longitude"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "coordinates_wifi.longitude": {
                    "Target": {
                      "Entity": "coordinates_wifi.longitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "coordinates_wifi_in_location": {
                "Binding": {
                  "ConceptualEntity": "Coordinates_wifi"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "coordinates_wifi.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "coordinates_wifi.location": {
                    "Target": {
                      "Entity": "coordinates_wifi.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "coordinates_wifi.location"
                  }
                },
                "State": "Generated"
              },
              "demographics_measure_has_adults_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Demographics Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "demographics_measure.adults_compared_season"
                      },
                      "Subject": {
                        "Role": "demographics_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "demographics_measure": {
                    "Target": {
                      "Entity": "demographics_measure"
                    }
                  },
                  "demographics_measure.adults_compared_season": {
                    "Target": {
                      "Entity": "demographics_measure.adults_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "demographics_measure_has_adults_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Demographics Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "demographics_measure.adults_selected_season"
                      },
                      "Subject": {
                        "Role": "demographics_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "demographics_measure": {
                    "Target": {
                      "Entity": "demographics_measure"
                    }
                  },
                  "demographics_measure.adults_selected_season": {
                    "Target": {
                      "Entity": "demographics_measure.adults_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "demographics_measure_has_kids_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Demographics Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "demographics_measure.kids_compared_season"
                      },
                      "Subject": {
                        "Role": "demographics_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "demographics_measure": {
                    "Target": {
                      "Entity": "demographics_measure"
                    }
                  },
                  "demographics_measure.kids_compared_season": {
                    "Target": {
                      "Entity": "demographics_measure.kids_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "demographics_measure_has_kids_selectedseason": {
                "Binding": {
                  "ConceptualEntity": "Demographics Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "demographics_measure.kids_selectedseason"
                      },
                      "Subject": {
                        "Role": "demographics_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "demographics_measure": {
                    "Target": {
                      "Entity": "demographics_measure"
                    }
                  },
                  "demographics_measure.kids_selectedseason": {
                    "Target": {
                      "Entity": "demographics_measure.kids_selectedseason"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_data_refresh_details__availability": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.data_refresh_details__availability"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.data_refresh_details__availability": {
                    "Target": {
                      "Entity": "display_measure.data_refresh_details__availability"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_location_col_name": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.location_col_name"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.location_col_name": {
                    "Target": {
                      "Entity": "display_measure.location_col_name"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_park_footfall_compared_season_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.park_footfall_compared_season_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.park_footfall_compared_season_label": {
                    "Target": {
                      "Entity": "display_measure.park_footfall_compared_season_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_park_footfall_selected_season_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.park_footfall_selected_season_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.park_footfall_selected_season_label": {
                    "Target": {
                      "Entity": "display_measure.park_footfall_selected_season_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_pav_footfall_compared_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.pav_footfall_compared_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.pav_footfall_compared_label": {
                    "Target": {
                      "Entity": "display_measure.pav_footfall_compared_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_pav_footfall_selected_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.pav_footfall_selected_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.pav_footfall_selected_label": {
                    "Target": {
                      "Entity": "display_measure.pav_footfall_selected_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_pav_visitation_compared_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.pav_visitation_compared_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.pav_visitation_compared_label": {
                    "Target": {
                      "Entity": "display_measure.pav_visitation_compared_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_pav_visitation_selected_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.pav_visitation_selected_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.pav_visitation_selected_label": {
                    "Target": {
                      "Entity": "display_measure.pav_visitation_selected_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_prev_season_msg": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.prev_season_msg"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.prev_season_msg": {
                    "Target": {
                      "Entity": "display_measure.prev_season_msg"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_has_selected_label": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.selected_label"
                      },
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.selected_label": {
                    "Target": {
                      "Entity": "display_measure.selected_label"
                    }
                  }
                },
                "State": "Generated"
              },
              "display_measure_in_location_col_name": {
                "Binding": {
                  "ConceptualEntity": "Display Measures"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "display_measure.location_col_name"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "display_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure": {
                    "Target": {
                      "Entity": "display_measure"
                    }
                  },
                  "display_measure.location_col_name": {
                    "Target": {
                      "Entity": "display_measure.location_col_name"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "display_measure.location_col_name"
                  }
                },
                "State": "Generated"
              },
              "distinct_2_has_column": {
                "Binding": {
                  "ConceptualEntity": "Distinct Pav Sensor + Park Footfall"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct_2.column"
                      },
                      "Subject": {
                        "Role": "distinct_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct_2": {
                    "Target": {
                      "Entity": "distinct_2"
                    }
                  },
                  "distinct_2.column": {
                    "Target": {
                      "Entity": "distinct_2.column"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_2_has_location": {
                "Binding": {
                  "ConceptualEntity": "Distinct Pav Sensor + Park Footfall"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct_2.location"
                      },
                      "Subject": {
                        "Role": "distinct_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct_2": {
                    "Target": {
                      "Entity": "distinct_2"
                    }
                  },
                  "distinct_2.location": {
                    "Target": {
                      "Entity": "distinct_2.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_2_in_location": {
                "Binding": {
                  "ConceptualEntity": "Distinct Pav Sensor + Park Footfall"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "distinct_2.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "distinct_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct_2": {
                    "Target": {
                      "Entity": "distinct_2"
                    }
                  },
                  "distinct_2.location": {
                    "Target": {
                      "Entity": "distinct_2.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "distinct_2.location"
                  }
                },
                "State": "Generated"
              },
              "distinct_DwellByPavAndDate_alllocation_has_location": {
                "Binding": {
                  "ConceptualEntity": "Distinct DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct_DwellByPavAndDate_alllocation.location"
                      },
                      "Subject": {
                        "Role": "distinct_DwellByPavAndDate_alllocation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct_DwellByPavAndDate_alllocation": {
                    "Target": {
                      "Entity": "distinct_DwellByPavAndDate_alllocation"
                    }
                  },
                  "distinct_DwellByPavAndDate_alllocation.location": {
                    "Target": {
                      "Entity": "distinct_DwellByPavAndDate_alllocation.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_DwellByPavAndDate_alllocation_in_location": {
                "Binding": {
                  "ConceptualEntity": "Distinct DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "distinct_DwellByPavAndDate_alllocation.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "distinct_DwellByPavAndDate_alllocation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct_DwellByPavAndDate_alllocation": {
                    "Target": {
                      "Entity": "distinct_DwellByPavAndDate_alllocation"
                    }
                  },
                  "distinct_DwellByPavAndDate_alllocation.location": {
                    "Target": {
                      "Entity": "distinct_DwellByPavAndDate_alllocation.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "distinct_DwellByPavAndDate_alllocation.location"
                  }
                },
                "State": "Generated"
              },
              "distinct_has_from_zone": {
                "Binding": {
                  "ConceptualEntity": "Distinct_Movement_Wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct.from_zone"
                      },
                      "Subject": {
                        "Role": "distinct"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "distinct.from_zone"
                      },
                      "Prepositions": [
                        {
                          "from": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "distinct"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct": {
                    "Target": {
                      "Entity": "distinct"
                    }
                  },
                  "distinct.from_zone": {
                    "Target": {
                      "Entity": "distinct.from_zone"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_has_measure_3": {
                "Binding": {
                  "ConceptualEntity": "Distinct_Movement_Wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct.measure_3"
                      },
                      "Subject": {
                        "Role": "distinct"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct": {
                    "Target": {
                      "Entity": "distinct"
                    }
                  },
                  "distinct.measure_3": {
                    "Target": {
                      "Entity": "distinct.measure_3"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_has_wifi_location_type": {
                "Binding": {
                  "ConceptualEntity": "Distinct_Movement_Wifi"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "distinct.wifi_location_type"
                      },
                      "Subject": {
                        "Role": "distinct"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct": {
                    "Target": {
                      "Entity": "distinct"
                    }
                  },
                  "distinct.wifi_location_type": {
                    "Target": {
                      "Entity": "distinct.wifi_location_type"
                    }
                  }
                },
                "State": "Generated"
              },
              "distinct_in_wifi_location_type": {
                "Binding": {
                  "ConceptualEntity": "Distinct_Movement_Wifi"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "distinct.wifi_location_type"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "distinct"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "distinct": {
                    "Target": {
                      "Entity": "distinct"
                    }
                  },
                  "distinct.wifi_location_type": {
                    "Target": {
                      "Entity": "distinct.wifi_location_type"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "distinct.wifi_location_type"
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_InSelectedComparedSeason": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.InSelectedComparedSeason"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.InSelectedComparedSeason": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.InSelectedComparedSeason"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_avg_dwelltime_compared_season_2": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.avg_dwelltime_compared_season_2"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.avg_dwelltime_compared_season_2": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.avg_dwelltime_compared_season_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_avg_dwelltime_selectedseason_2": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.avg_dwelltime_selectedseason_2"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.avg_dwelltime_selectedseason_2": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.avg_dwelltime_selectedseason_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_compared_season": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.compared_season"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.compared_season": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_continued_location": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.continued_location"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.continued_location": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.continued_location"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_coordinates_wifi": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "coordinates_wifi"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      },
                      "Subject": {
                        "Role": "coordinates_wifi"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "coordinates_wifi": {
                    "Nouns": [
                      {
                        "location": {
                          "State": "Generated"
                        }
                      }
                    ],
                    "Target": {
                      "Entity": "coordinates_wifi"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_day_num_tag": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.day_num_tag"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.day_num_tag": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.day_num_tag"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_dwell": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.dwell"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.dwell": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.dwell"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_footfall": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.footfall"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.footfall": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.footfall"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_location_type": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.location_type"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.location_type": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.location_type"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_new_location": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.new_location"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.new_location": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.new_location"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_operation_date": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_pavilion_wise_detail": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_season_ID": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.season_ID"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.season_ID": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.season_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_seasonlocation_ID2": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.seasonlocation_ID2"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.seasonlocation_ID2": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.seasonlocation_ID2"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_selected_season": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.selected_season"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.selected_season": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_total_park_attendence": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.total_park_attendence"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.total_park_attendence": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.total_park_attendence"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_has_week_num": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.week_num"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.week_num": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.week_num"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_in_location_type": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.location_type"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.location_type": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.location_type"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "dwell_by_pav_and_date_alllocations.location_type"
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_in_seasonlocation_ID2": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.seasonlocation_ID2"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.seasonlocation_ID2": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.seasonlocation_ID2"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "dwell_by_pav_and_date_alllocations.seasonlocation_ID2"
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_operation_date_has_variation_date_hierarchy": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations.operation_date": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_operation_date_variation_date_hierarchy_has_day": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.day"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.day": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.day"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_operation_date_variation_date_hierarchy_has_month": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.month"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.month": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.month"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_operation_date_variation_date_hierarchy_has_quarter": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.quarter"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.quarter": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.quarter"
                    }
                  }
                },
                "State": "Generated"
              },
              "dwell_by_pav_and_date_alllocations_operation_date_variation_date_hierarchy_has_year": {
                "Binding": {
                  "ConceptualEntity": "DwellByPavAndDate_alllocations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.year"
                      },
                      "Subject": {
                        "Role": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy"
                    }
                  },
                  "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.year": {
                    "Target": {
                      "Entity": "dwell_by_pav_and_date_alllocations.operation_date.variation.date_hierarchy.year"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_Pavilion_Footfall_Change_": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.Pavilion_Footfall_Change_"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.Pavilion_Footfall_Change_": {
                    "Target": {
                      "Entity": "footfall_measure.Pavilion_Footfall_Change_"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_Pavilion_Footfall_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.Pavilion_Footfall_selected_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.Pavilion_Footfall_selected_season": {
                    "Target": {
                      "Entity": "footfall_measure.Pavilion_Footfall_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_Plotting_Park_Footfall_compared_season_guestcounts_average": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.Plotting_Park_Footfall_compared_season_guestcounts_average"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.Plotting_Park_Footfall_compared_season_guestcounts_average": {
                    "Target": {
                      "Entity": "footfall_measure.Plotting_Park_Footfall_compared_season_guestcounts_average"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_footfall_per_m_2_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.footfall_per_m_2_compared_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.footfall_per_m_2_compared_season": {
                    "Target": {
                      "Entity": "footfall_measure.footfall_per_m_2_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_footfall_per_m_2_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.footfall_per_m_2_selected_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.footfall_per_m_2_selected_season": {
                    "Target": {
                      "Entity": "footfall_measure.footfall_per_m_2_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_measure_4": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.measure_4"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.measure_4": {
                    "Target": {
                      "Entity": "footfall_measure.measure_4"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_pavilion_footfall_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.pavilion_footfall_compared_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.pavilion_footfall_compared_season": {
                    "Target": {
                      "Entity": "footfall_measure.pavilion_footfall_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_plotting_park_footfall_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.plotting_park_footfall_compared_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.plotting_park_footfall_compared_season": {
                    "Target": {
                      "Entity": "footfall_measure.plotting_park_footfall_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_plotting_park_footfall_compared_season_guestcounts": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.plotting_park_footfall_compared_season_guestcounts"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.plotting_park_footfall_compared_season_guestcounts": {
                    "Target": {
                      "Entity": "footfall_measure.plotting_park_footfall_compared_season_guestcounts"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_plotting_park_footfall_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.plotting_park_footfall_selected_season"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.plotting_park_footfall_selected_season": {
                    "Target": {
                      "Entity": "footfall_measure.plotting_park_footfall_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_plotting_park_footfall_selected_season_guest_counts": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.plotting_park_footfall_selected_season_guest_counts"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.plotting_park_footfall_selected_season_guest_counts": {
                    "Target": {
                      "Entity": "footfall_measure.plotting_park_footfall_selected_season_guest_counts"
                    }
                  }
                },
                "State": "Generated"
              },
              "footfall_measure_has_plotting_park_footfall_selected_season_guest_counts_average": {
                "Binding": {
                  "ConceptualEntity": "Footfall Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.plotting_park_footfall_selected_season_guest_counts_average"
                      },
                      "Subject": {
                        "Role": "footfall_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure": {
                    "Target": {
                      "Entity": "footfall_measure"
                    }
                  },
                  "footfall_measure.plotting_park_footfall_selected_season_guest_counts_average": {
                    "Target": {
                      "Entity": "footfall_measure.plotting_park_footfall_selected_season_guest_counts_average"
                    }
                  }
                },
                "State": "Generated"
              },
              "from_coordinate_has_area": {
                "Binding": {
                  "ConceptualEntity": "from_coordinates"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "from_coordinate.area"
                      },
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Adjective": {
                      "Adjectives": [
                        {
                          "large": {
                            "State": "Generated"
                          }
                        },
                        {
                          "big": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Antonyms": [
                        {
                          "small": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Measurement": {
                        "Role": "from_coordinate.area"
                      },
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "from_coordinate": {
                    "Target": {
                      "Entity": "from_coordinate"
                    }
                  },
                  "from_coordinate.area": {
                    "Target": {
                      "Entity": "from_coordinate.area"
                    }
                  }
                },
                "State": "Generated"
              },
              "from_coordinate_has_latitude": {
                "Binding": {
                  "ConceptualEntity": "from_coordinates"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "from_coordinate.latitude"
                      },
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "from_coordinate": {
                    "Target": {
                      "Entity": "from_coordinate"
                    }
                  },
                  "from_coordinate.latitude": {
                    "Target": {
                      "Entity": "from_coordinate.latitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "from_coordinate_has_location": {
                "Binding": {
                  "ConceptualEntity": "from_coordinates"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "from_coordinate.location"
                      },
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "from_coordinate": {
                    "Target": {
                      "Entity": "from_coordinate"
                    }
                  },
                  "from_coordinate.location": {
                    "Target": {
                      "Entity": "from_coordinate.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "from_coordinate_has_longitude": {
                "Binding": {
                  "ConceptualEntity": "from_coordinates"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "from_coordinate.longitude"
                      },
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "from_coordinate": {
                    "Target": {
                      "Entity": "from_coordinate"
                    }
                  },
                  "from_coordinate.longitude": {
                    "Target": {
                      "Entity": "from_coordinate.longitude"
                    }
                  }
                },
                "State": "Generated"
              },
              "from_coordinate_in_location": {
                "Binding": {
                  "ConceptualEntity": "from_coordinates"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "from_coordinate.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "from_coordinate"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "from_coordinate": {
                    "Target": {
                      "Entity": "from_coordinate"
                    }
                  },
                  "from_coordinate.location": {
                    "Target": {
                      "Entity": "from_coordinate.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "from_coordinate.location"
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_CG__compared_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.CG__compared_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.CG__compared_season": {
                    "Target": {
                      "Entity": "gates_measure.CG__compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_CG__selected_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.CG__selected_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.CG__selected_season": {
                    "Target": {
                      "Entity": "gates_measure.CG__selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_CG_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.CG_compared_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.CG_compared_season": {
                    "Target": {
                      "Entity": "gates_measure.CG_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_CG_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.CG_selected_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.CG_selected_season": {
                    "Target": {
                      "Entity": "gates_measure.CG_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_GOW__compared_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.GOW__compared_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.GOW__compared_season": {
                    "Target": {
                      "Entity": "gates_measure.GOW__compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_GOW__selected_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.GOW__selected_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.GOW__selected_season": {
                    "Target": {
                      "Entity": "gates_measure.GOW__selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_GOW_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.GOW_compared_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.GOW_compared_season": {
                    "Target": {
                      "Entity": "gates_measure.GOW_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_GOW_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.GOW_selected_season"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.GOW_selected_season": {
                    "Target": {
                      "Entity": "gates_measure.GOW_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_HappinessGate__27": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.HappinessGate__27"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.HappinessGate__27": {
                    "Target": {
                      "Entity": "gates_measure.HappinessGate__27"
                    }
                  }
                },
                "State": "Generated"
              },
              "gates_measure_has_happiness_gate_S27": {
                "Binding": {
                  "ConceptualEntity": "Gates Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "gates_measure.happiness_gate_S27"
                      },
                      "Subject": {
                        "Role": "gates_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "gates_measure": {
                    "Target": {
                      "Entity": "gates_measure"
                    }
                  },
                  "gates_measure.happiness_gate_S27": {
                    "Target": {
                      "Entity": "gates_measure.happiness_gate_S27"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_date_has_variation_date_hierarchy": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date.variation.date_hierarchy"
                      },
                      "Subject": {
                        "Role": "guest_count.date"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count.date": {
                    "Target": {
                      "Entity": "guest_count.date"
                    }
                  },
                  "guest_count.date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_date_variation_date_hierarchy_has_day": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date.variation.date_hierarchy.day"
                      },
                      "Subject": {
                        "Role": "guest_count.date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count.date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy"
                    }
                  },
                  "guest_count.date.variation.date_hierarchy.day": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy.day"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_date_variation_date_hierarchy_has_month": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date.variation.date_hierarchy.month"
                      },
                      "Subject": {
                        "Role": "guest_count.date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count.date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy"
                    }
                  },
                  "guest_count.date.variation.date_hierarchy.month": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy.month"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_date_variation_date_hierarchy_has_quarter": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date.variation.date_hierarchy.quarter"
                      },
                      "Subject": {
                        "Role": "guest_count.date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count.date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy"
                    }
                  },
                  "guest_count.date.variation.date_hierarchy.quarter": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy.quarter"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_date_variation_date_hierarchy_has_year": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date.variation.date_hierarchy.year"
                      },
                      "Subject": {
                        "Role": "guest_count.date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count.date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy"
                    }
                  },
                  "guest_count.date.variation.date_hierarchy.year": {
                    "Target": {
                      "Entity": "guest_count.date.variation.date_hierarchy.year"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_GOTW__CG_self_vending_kiosk": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.GOTW__CG_self_vending_kiosk"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.GOTW__CG_self_vending_kiosk": {
                    "Target": {
                      "Entity": "guest_count.GOTW__CG_self_vending_kiosk"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_HG_self_vending_kiosk": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.HG_self_vending_kiosk"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.HG_self_vending_kiosk": {
                    "Target": {
                      "Entity": "guest_count.HG_self_vending_kiosk"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_cultural_gate": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.cultural_gate"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.cultural_gate": {
                    "Target": {
                      "Entity": "guest_count.cultural_gate"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_date": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.date"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.date": {
                    "Target": {
                      "Entity": "guest_count.date"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_display_measure_pav_sensors_last_refresh_msg": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.pav_sensors_last_refresh_msg"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure.pav_sensors_last_refresh_msg": {
                    "Target": {
                      "Entity": "display_measure.pav_sensors_last_refresh_msg"
                    }
                  },
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_gate_of_the_word": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.gate_of_the_word"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.gate_of_the_word": {
                    "Target": {
                      "Entity": "guest_count.gate_of_the_word"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_happiness_gate": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.happiness_gate"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.happiness_gate": {
                    "Target": {
                      "Entity": "guest_count.happiness_gate"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_pav_sensor__park_footfall_2": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_season_ID": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.season_ID"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.season_ID": {
                    "Target": {
                      "Entity": "guest_count.season_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_total_park_attendence": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.total_park_attendence"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.total_park_attendence": {
                    "Target": {
                      "Entity": "guest_count.total_park_attendence"
                    }
                  }
                },
                "State": "Generated"
              },
              "guest_count_has_week_num": {
                "Binding": {
                  "ConceptualEntity": "GuestCounts"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "guest_count.week_num"
                      },
                      "Subject": {
                        "Role": "guest_count"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "guest_count": {
                    "Target": {
                      "Entity": "guest_count"
                    }
                  },
                  "guest_count.week_num": {
                    "Target": {
                      "Entity": "guest_count.week_num"
                    }
                  }
                },
                "State": "Generated"
              },
              "like_to_like_has_value": {
                "Binding": {
                  "ConceptualEntity": "Like to Like"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "like_to_like.value"
                      },
                      "Subject": {
                        "Role": "like_to_like"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "like_to_like": {
                    "Target": {
                      "Entity": "like_to_like"
                    }
                  },
                  "like_to_like.value": {
                    "Target": {
                      "Entity": "like_to_like.value"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_location": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.location"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Name": {
                      "Name": {
                        "Role": "location.location"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.location": {
                    "Target": {
                      "Entity": "location.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_new_season_23_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.new_season_23_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.new_season_23_loc": {
                    "Target": {
                      "Entity": "location.new_season_23_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_new_season_24_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.new_season_24_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.new_season_24_loc": {
                    "Target": {
                      "Entity": "location.new_season_24_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_new_season_25_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.new_season_25_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.new_season_25_loc": {
                    "Target": {
                      "Entity": "location.new_season_25_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_new_season_26_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.new_season_26_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.new_season_26_loc": {
                    "Target": {
                      "Entity": "location.new_season_26_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_new_season_27_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.new_season_27_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.new_season_27_loc": {
                    "Target": {
                      "Entity": "location.new_season_27_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_22_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_22_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_22_loc": {
                    "Target": {
                      "Entity": "location.season_22_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_23_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_23_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_23_loc": {
                    "Target": {
                      "Entity": "location.season_23_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_24_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_24_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_24_loc": {
                    "Target": {
                      "Entity": "location.season_24_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_25_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_25_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_25_loc": {
                    "Target": {
                      "Entity": "location.season_25_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_26_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_26_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_26_loc": {
                    "Target": {
                      "Entity": "location.season_26_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "location_has_season_27_loc": {
                "Binding": {
                  "ConceptualEntity": "Locations"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location.season_27_loc"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "location.season_27_loc": {
                    "Target": {
                      "Entity": "location.season_27_loc"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_cg": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.cg"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.cg": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.cg"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_compared_period": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.compared_period"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.compared_period": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.compared_period"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_day_num_tag": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.day_num_tag"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.day_num_tag": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.day_num_tag"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_display_measure_event_M_easure": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "display_measure.event_M_easure"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "display_measure.event_M_easure": {
                    "Target": {
                      "Entity": "display_measure.event_M_easure"
                    }
                  },
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_first_day_of_operation": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.first_day_of_operation"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.first_day_of_operation": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.first_day_of_operation"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_footfall_measure_Pavilion_Footfall_selected_season_map": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.Pavilion_Footfall_selected_season_map"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure.Pavilion_Footfall_selected_season_map": {
                    "Target": {
                      "Entity": "footfall_measure.Pavilion_Footfall_selected_season_map"
                    }
                  },
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_gow": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.gow"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.gow": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.gow"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_gow__cg_tvm": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.gow__cg_tvm"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.gow__cg_tvm": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.gow__cg_tvm"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_hg": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.hg"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.hg": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.hg"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_hg_tvm": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.hg_tvm"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.hg_tvm": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.hg_tvm"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_in_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.in_compared_season"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.in_compared_season": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.in_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_in_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.in_selected_season"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.in_selected_season": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.in_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_last_day_of_operation": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.last_day_of_operation"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.last_day_of_operation": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.last_day_of_operation"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_location": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "location"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2"
                      },
                      "Subject": {
                        "Role": "location"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_location_id": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.location_id"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.location_id": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.location_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_location_type": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.location_type"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.location_type": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.location_type"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_max_day_num_tag": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.max_day_num_tag"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.max_day_num_tag": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.max_day_num_tag"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_min_day_num_tag": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.min_day_num_tag"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.min_day_num_tag": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.min_day_num_tag"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_new_location": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.new_location"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.new_location": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.new_location"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_new_pavilions": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.new_pavilions"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.new_pavilions": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.new_pavilions"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_operation_date": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_pavilion_size": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.pavilion_size"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.pavilion_size": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.pavilion_size"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_pavilion_wise_detail": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_season_ID": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.season_ID"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.season_ID": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.season_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_sensor": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.sensor"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.sensor": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.sensor"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_sensors_operation": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "sensors_operation"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2"
                      },
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_total_entries": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.total_entries"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.total_entries": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.total_entries"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_total_park_attendence": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.total_park_attendence"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.total_park_attendence": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.total_park_attendence"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_total_period_sensor_is_operational": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.total_period_sensor_is_operational"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.total_period_sensor_is_operational": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.total_period_sensor_is_operational"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_has_week_num": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.week_num"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.week_num": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.week_num"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_in_location": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "location": {
                    "Target": {
                      "Entity": "location"
                    }
                  },
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "location"
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_in_location_type": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.location_type"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2"
                    }
                  },
                  "pav_sensor__park_footfall_2.location_type": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.location_type"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "pav_sensor__park_footfall_2.location_type"
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_operation_date_has_variation_date_hierarchy": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2.operation_date"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2.operation_date": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_operation_date_variation_date_hierarchy_has_day": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.day"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.day": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.day"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_operation_date_variation_date_hierarchy_has_month": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.month"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.month": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.month"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_operation_date_variation_date_hierarchy_has_quarter": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.quarter"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.quarter": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.quarter"
                    }
                  }
                },
                "State": "Generated"
              },
              "pav_sensor__park_footfall_2_operation_date_variation_date_hierarchy_has_year": {
                "Binding": {
                  "ConceptualEntity": "Pav Sensor + Park Footfall 2"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.year"
                      },
                      "Subject": {
                        "Role": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy"
                    }
                  },
                  "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.year": {
                    "Target": {
                      "Entity": "pav_sensor__park_footfall_2.operation_date.variation.date_hierarchy.year"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_footfall_measure_per_m_2_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "footfall_measure.per_m_2_selected_season"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "footfall_measure.per_m_2_selected_season": {
                    "Target": {
                      "Entity": "footfall_measure.per_m_2_selected_season"
                    }
                  },
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_location": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_location_id": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location_id"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location_id": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_location_type": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location_type"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location_type": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location_type"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_pavilion_size": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.pavilion_size"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.pavilion_size": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.pavilion_size"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_season_id": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.season_id"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.season_id": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.season_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_has_seasonlocation_ID": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pavilion_wise_detail.seasonlocation_ID"
                      },
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.seasonlocation_ID": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.seasonlocation_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_in_location": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "pavilion_wise_detail.location"
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_in_location_id": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location_id"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location_id": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location_id"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "pavilion_wise_detail.location_id"
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_in_location_type": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "pavilion_wise_detail.location_type"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.location_type": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.location_type"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "pavilion_wise_detail.location_type"
                  }
                },
                "State": "Generated"
              },
              "pavilion_wise_detail_in_seasonlocation_ID": {
                "Binding": {
                  "ConceptualEntity": "Pavilion Wise Details"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "pavilion_wise_detail.seasonlocation_ID"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "pavilion_wise_detail"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pavilion_wise_detail": {
                    "Target": {
                      "Entity": "pavilion_wise_detail"
                    }
                  },
                  "pavilion_wise_detail.seasonlocation_ID": {
                    "Target": {
                      "Entity": "pavilion_wise_detail.seasonlocation_ID"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "pavilion_wise_detail.seasonlocation_ID"
                  }
                },
                "State": "Generated"
              },
              "sensors_operation_has_max_day": {
                "Binding": {
                  "ConceptualEntity": "Sensors_Operation"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "sensors_operation.max_day"
                      },
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  },
                  "sensors_operation.max_day": {
                    "Target": {
                      "Entity": "sensors_operation.max_day"
                    }
                  }
                },
                "State": "Generated"
              },
              "sensors_operation_has_min_day": {
                "Binding": {
                  "ConceptualEntity": "Sensors_Operation"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "sensors_operation.min_day"
                      },
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  },
                  "sensors_operation.min_day": {
                    "Target": {
                      "Entity": "sensors_operation.min_day"
                    }
                  }
                },
                "State": "Generated"
              },
              "sensors_operation_has_season_ID": {
                "Binding": {
                  "ConceptualEntity": "Sensors_Operation"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "sensors_operation.season_ID"
                      },
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  },
                  "sensors_operation.season_ID": {
                    "Target": {
                      "Entity": "sensors_operation.season_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "sensors_operation_has_seasonlocation_ID": {
                "Binding": {
                  "ConceptualEntity": "Sensors_Operation"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "sensors_operation.seasonlocation_ID"
                      },
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  },
                  "sensors_operation.seasonlocation_ID": {
                    "Target": {
                      "Entity": "sensors_operation.seasonlocation_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "sensors_operation_in_seasonlocation_ID": {
                "Binding": {
                  "ConceptualEntity": "Sensors_Operation"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "sensors_operation.seasonlocation_ID"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "sensors_operation"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "sensors_operation": {
                    "Target": {
                      "Entity": "sensors_operation"
                    }
                  },
                  "sensors_operation.seasonlocation_ID": {
                    "Target": {
                      "Entity": "sensors_operation.seasonlocation_ID"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "sensors_operation.seasonlocation_ID"
                  }
                },
                "State": "Generated"
              },
              "table_has_location": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "table.location"
                      },
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.location": {
                    "Target": {
                      "Entity": "table.location"
                    }
                  }
                },
                "State": "Generated"
              },
              "table_has_location_id": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "table.location_id"
                      },
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.location_id": {
                    "Target": {
                      "Entity": "table.location_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "table_has_pavilion_size": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "table.pavilion_size"
                      },
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.pavilion_size": {
                    "Target": {
                      "Entity": "table.pavilion_size"
                    }
                  }
                },
                "State": "Generated"
              },
              "table_has_season_ID": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "table.season_ID"
                      },
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.season_ID": {
                    "Target": {
                      "Entity": "table.season_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "table_has_seasonlocation_id": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "table.seasonlocation_id"
                      },
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.seasonlocation_id": {
                    "Target": {
                      "Entity": "table.seasonlocation_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "table_in_location": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "table.location"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.location": {
                    "Target": {
                      "Entity": "table.location"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "table.location"
                  }
                },
                "State": "Generated"
              },
              "table_in_seasonlocation_id": {
                "Binding": {
                  "ConceptualEntity": "Table"
                },
                "Phrasings": [
                  {
                    "Preposition": {
                      "Object": {
                        "Role": "table.seasonlocation_id"
                      },
                      "Prepositions": [
                        {
                          "in": {
                            "State": "Generated"
                          }
                        }
                      ],
                      "Subject": {
                        "Role": "table"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "table": {
                    "Target": {
                      "Entity": "table"
                    }
                  },
                  "table.seasonlocation_id": {
                    "Target": {
                      "Entity": "table.seasonlocation_id"
                    }
                  }
                },
                "SemanticSlots": {
                  "Where": {
                    "Role": "table.seasonlocation_id"
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_Pavilion_Visitation__compared_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.Pavilion_Visitation__compared_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.Pavilion_Visitation__compared_season": {
                    "Target": {
                      "Entity": "visitation_measure.Pavilion_Visitation__compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_Pavilion_Visitation__selected_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.Pavilion_Visitation__selected_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.Pavilion_Visitation__selected_season": {
                    "Target": {
                      "Entity": "visitation_measure.Pavilion_Visitation__selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_avg_no_of_pav_visited_comparedseason": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.avg_no_of_pav_visited_comparedseason"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.avg_no_of_pav_visited_comparedseason": {
                    "Target": {
                      "Entity": "visitation_measure.avg_no_of_pav_visited_comparedseason"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_avg_no_of_pav_visited_selectedseason": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.avg_no_of_pav_visited_selectedseason"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.avg_no_of_pav_visited_selectedseason": {
                    "Target": {
                      "Entity": "visitation_measure.avg_no_of_pav_visited_selectedseason"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_footfall_penetration_change_": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.footfall_penetration_change_"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.footfall_penetration_change_": {
                    "Target": {
                      "Entity": "visitation_measure.footfall_penetration_change_"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_park_visitation_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.park_visitation_compared_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.park_visitation_compared_season": {
                    "Target": {
                      "Entity": "visitation_measure.park_visitation_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_park_visitation_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.park_visitation_selected_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.park_visitation_selected_season": {
                    "Target": {
                      "Entity": "visitation_measure.park_visitation_selected_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_pavilion_footfall_penetration_compared_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.pavilion_footfall_penetration_compared_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.pavilion_footfall_penetration_compared_season": {
                    "Target": {
                      "Entity": "visitation_measure.pavilion_footfall_penetration_compared_season"
                    }
                  }
                },
                "State": "Generated"
              },
              "visitation_measure_has_pavilion_footfall_penetration_selected_season": {
                "Binding": {
                  "ConceptualEntity": "Visitation Measures"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "visitation_measure.pavilion_footfall_penetration_selected_season"
                      },
                      "Subject": {
                        "Role": "visitation_measure"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "visitation_measure": {
                    "Target": {
                      "Entity": "visitation_measure"
                    }
                  },
                  "visitation_measure.pavilion_footfall_penetration_selected_season": {
                    "Target": {
                      "Entity": "visitation_measure.pavilion_footfall_penetration_selected_season"
                    }
                  }
                },
                "State": "Generated"
              }
            },
            "Version": "3.1.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "fastCombine": true,
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "Slicer Design",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WciwpKUpMLsnMz1OK1YlWCkgsy8wBc2IB\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Location Type\" = _t]),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Location Type\", type text}}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Location Type\"})",
          "in",
          "    #\"Removed Columns\""
        ],
        "kind": "m",
        "lineageTag": "5bf35092-ad96-4208-bc01-11766c933bc7"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "description": "Errors in queries that were loaded on 10/31/2022 9:46:04 AM.",
        "folder": "Query Errors - 10/31/2022 9:46:04 AM"
      }
    ],
    "relationships": [
      {
        "name": "06616d3c-a328-47f6-a92a-71eb4898cedd",
        "fromColumn": "Location",
        "fromTable": "Pavilion Wise Details",
        "isActive": false,
        "toColumn": "Location",
        "toTable": "Coordinates_wifi"
      },
      {
        "name": "d1bd6578-ae1b-428f-9ef8-897960384be2",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "Location",
        "toTable": "Coordinates_wifi"
      },
      {
        "name": "b80a5435-be37-4aa0-8ec2-89cfbcea01c6",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Season+Location ID",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "toColumn": "Season+Location ID",
        "toTable": "Pavilion Wise Details"
      },
      {
        "name": "65c15341-1874-407c-98d1-e470be216795",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Location",
        "toTable": "Pavilion Wise Details"
      },
      {
        "name": "a7476d8b-3dcb-4404-af9a-9c454770f526",
        "fromColumn": "Season+Location ID",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "toColumn": "Season+Location ID",
        "toTable": "Sensors_Operation"
      },
      {
        "name": "b8c13787-4037-476f-9218-a68fab279255",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "toColumn": "Location",
        "toTable": "Locations"
      },
      {
        "name": "5a41ec26-1d1e-42ab-81b6-05418d5c6650",
        "fromColumn": "Date",
        "fromTable": "Concerts",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_29c565f6-d63f-427d-8357-b9a6e4387011"
      },
      {
        "name": "a3355d06-c28d-426c-b921-3354c75f2b9a",
        "fromColumn": "Date",
        "fromTable": "Kaizen Modelling",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_af639e54-4966-46b3-b631-9b7e871976c6"
      },
      {
        "name": "11032bb8-c86a-4b4b-b71e-76c927d8429e",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "GuestCounts",
        "toColumn": "Date",
        "toTable": "Kaizen Modelling"
      },
      {
        "name": "2ce27d6d-4c8d-470f-b6e6-55b162a10671",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "GuestCounts",
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Pav Sensor + Park Footfall 2"
      },
      {
        "name": "e9dca0ac-0acb-4b4f-845a-41c555641d85",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "DATE",
        "toTable": "Forecast"
      },
      {
        "name": "668e54b2-5645-4566-a6c6-6ab39fc503b7",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "DATE",
        "fromTable": "Forecast",
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "325fc0db-875e-44de-a9b4-07106bec691c",
        "fromColumn": "Date",
        "fromTable": "S27_GuestCounts",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_0ef2eee0-790e-40ed-ab30-8955fe1beebb"
      },
      {
        "name": "d1e28f6a-14f4-4af7-83b7-8de39452c586",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "b80c55d0-f723-4d4a-8c50-120c77136289",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor Footfall by Hour",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "287091b8-a918-4cf3-930e-79b488f50a09",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_Shifted",
        "fromTable": "Sales Data all Seasons",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Pav Sensor + Park Footfall 2"
      },
      {
        "name": "cb632818-b75f-46f1-b81d-078cb96cefa5",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "Kaizen Modelling",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "GuestCounts"
      },
      {
        "name": "0421dc77-74f4-464c-8909-1800c8becd62",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "Kaizen Modelling"
      },
      {
        "name": "11222928-9858-4ffb-b335-d1ff710f35e8",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "day",
        "fromTable": "Dwell - Ground",
        "toColumn": "day",
        "toTable": "Visitation Length"
      },
      {
        "name": "7128888c-89a3-4c8f-a32e-e9584bf5a175",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "Forecast",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "GuestCounts"
      },
      {
        "name": "52abd2a0-b994-404a-8591-cb117b03c659",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Operation_Date",
        "toTable": "Pav Sensor Footfall by Hour"
      },
      {
        "name": "227f842f-5f55-4ca0-9e26-179aaea61415",
        "fromColumn": "day_num_tag",
        "fromTable": "DwellByPavAndDate_alllocations",
        "isActive": false,
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "81f1cfe7-95c6-492d-98f3-82730ba6ff37",
        "fromColumn": "day_num_tag",
        "fromTable": "GuestCounts",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "8558a1c2-d59a-4c8d-a166-0fe0efd667cc",
        "fromColumn": "day_num_tag",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "90b2a1ad-6f24-474a-8a6d-838963a3c4b6",
        "fromColumn": "day_num_tag",
        "fromTable": "Forecast",
        "isActive": false,
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "6c215ad5-c6d3-4c92-8530-fca3b121ae20",
        "fromColumn": "day_num_tag",
        "fromTable": "Pav Sensor Footfall by Hour",
        "isActive": false,
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "91c62bfc-a77f-4755-a557-dbb3a295ece9",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "fromZone",
        "fromTable": "Movement - Wifi",
        "toCardinality": "many",
        "toColumn": "fromZone",
        "toTable": "Average_movement"
      },
      {
        "name": "a7f4d19b-51c2-4ba4-a4a6-2573b0f52f04",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "DwellByPavAndDate_alllocations",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "GuestCounts"
      },
      {
        "name": "e7ae7271-daa1-404b-a84b-851eb20bd749",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "DwellByPavAndDate_alllocations",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Pav Sensor + Park Footfall 2"
      },
      {
        "name": "3a391de2-be7a-4c34-b278-c9b94d0c35ff",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Pav Sensor Footfall by Hour"
      },
      {
        "name": "2fe1bd03-5acb-407a-af2d-b4e06d0527be",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor Footfall by Hour",
        "toCardinality": "many",
        "toColumn": "Location",
        "toTable": "Pav Sensor + Park Footfall 2"
      },
      {
        "name": "b1885d6d-ecc6-4f96-81a4-7bec91e4c389",
        "fromColumn": "WeekdayNum",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "WeekdayNum",
        "toTable": "GuestCounts"
      },
      {
        "name": "a5a5a7d4-1205-42ad-ab0d-58ad1c5863a3",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "GuestCounts",
        "toColumn": "day",
        "toTable": "Dwell - Ground"
      },
      {
        "name": "6ae5e400-ddbf-412d-a7be-40b297f26930",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Dwell - Ground"
      },
      {
        "name": "a63b13e2-fa27-4472-9475-a7723078a5f9",
        "fromColumn": "Operation_Date",
        "fromTable": "DwellByPavAndDate_alllocations",
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "2c0f91d7-f8ad-4323-ad37-39e909a4c25d",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "WeekdayNum",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "WeekdayNum",
        "toTable": "DwellByPavAndDate_alllocations"
      },
      {
        "name": "b55daad1-0e2f-446b-8c5f-4b0ccb3d6b19",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "new_week_num",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "new_week_num",
        "toTable": "DwellByPavAndDate_alllocations"
      },
      {
        "name": "dbca4220-6451-446e-879d-a96f6ee01b1b",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Month",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Month",
        "toTable": "DwellByPavAndDate_alllocations"
      },
      {
        "name": "4c912883-347a-4d50-bcb8-7ed548f17361",
        "fromColumn": "Date",
        "fromTable": "Movement - Wifi",
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "2aa0927f-f73e-488a-8d52-96bc1e16b3b7",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "new_week_num",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "new_week_num",
        "toTable": "Movement - Wifi"
      },
      {
        "name": "5ce9d7b0-2829-417f-8d53-a4ada37895d2",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "WeekdayNum",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "WeekdayNum",
        "toTable": "Movement - Wifi"
      },
      {
        "name": "cc322c32-2f8e-4a65-9d4e-7252cb9859d6",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Month",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Month",
        "toTable": "Movement - Wifi"
      },
      {
        "name": "427b8cab-8382-449d-8189-dcb7c01b4b8b",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "new_week_num",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "new_week_num",
        "toTable": "Pav Sensor Footfall by Hour"
      },
      {
        "name": "57d2a48c-8d4a-449a-b19e-0c8e1a1ed490",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "WeekdayNum",
        "fromTable": "GuestCounts",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "WeekdayNum",
        "toTable": "Pav Sensor Footfall by Hour"
      },
      {
        "name": "eec6cfaf-1b14-4c47-a274-f9d2325274cb",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "GuestCounts",
        "toColumn": "Date",
        "toTable": "Concerts"
      },
      {
        "name": "8b5dc386-72f6-4cbc-a5a2-299e6e471841",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "new_week_num",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "new_week_num",
        "toTable": "GuestCounts"
      },
      {
        "name": "52ef89a5-ee21-4bd0-9622-0afc55522e96",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "Visitation Length",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "GuestCounts"
      },
      {
        "name": "5a8f6985-ab5d-4f4c-a43f-11a081e0bf8a",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "day_num_tag_shifted",
        "fromTable": "Visitation Length",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "day_num_tag_shifted",
        "toTable": "Pav Sensor + Park Footfall 2"
      },
      {
        "name": "299a21ad-7dd9-4515-95e5-911952173e3e",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "day",
        "fromTable": "Visitation Length",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "GuestCounts"
      },
      {
        "name": "5d97e29b-3b3c-40a2-9cd0-496b295554da",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2",
        "isActive": false,
        "toColumn": "day",
        "toTable": "Visitation Length"
      },
      {
        "name": "4151383b-2b82-4b65-bc70-ada075291430",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor Footfall by hour events",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_554eb9d5-de76-4aaf-b832-1dbbcc33b2c4"
      },
      {
        "name": "6bf157df-a9f5-4180-bc83-1f3b9565386c",
        "fromColumn": "day",
        "fromTable": "Dwell - Ground events",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_3b0b21c9-4253-4162-8bc9-05320f3b9811"
      },
      {
        "name": "c864e10c-01a0-4258-b2fd-d42622ab672e",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "GuestCounts_events",
        "toColumn": "day",
        "toTable": "Dwell - Ground events"
      },
      {
        "name": "53136082-4f97-46be-85ee-75cbec88be40",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall events",
        "toColumn": "Date",
        "toTable": "GuestCounts_events"
      },
      {
        "name": "dfd4ad78-3aaa-47c0-8f83-9a63ec31a495",
        "fromColumn": "Date",
        "fromTable": "Movement - Wifi events",
        "toColumn": "Date",
        "toTable": "GuestCounts_events"
      },
      {
        "name": "853b6b82-8415-4be9-bb6f-0f47dbe51f40",
        "fromColumn": "Operation_Date",
        "fromTable": "DwellByPavAndDate_alllocations events",
        "toColumn": "Date",
        "toTable": "GuestCounts_events"
      },
      {
        "name": "f97dcfe5-799c-469b-95dd-c16ca0140484",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Event Type",
        "fromTable": "GuestCounts_events",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Event Type",
        "toTable": "Movement - Wifi events"
      },
      {
        "name": "776eb1ba-cbf7-4589-8716-1872d894a8ef",
        "fromColumn": "Event And Season",
        "fromTable": "Movement - Wifi events",
        "isActive": false,
        "toColumn": "Event And Season",
        "toTable": "GuestCounts_events"
      },
      {
        "name": "c47a812d-621d-43cd-9823-fe1d844bd720",
        "fromColumn": "Event And Season",
        "fromTable": "Pav Sensor Footfall by hour events",
        "toColumn": "Event And Season",
        "toTable": "GuestCounts_events"
      },
      {
        "name": "27f9a5cf-ecf3-4a66-88ba-5cd2811dc98f",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Concert type",
        "fromTable": "GuestCounts_events",
        "isActive": false,
        "toCardinality": "many",
        "toColumn": "Concert type",
        "toTable": "Movement - Wifi events"
      },
      {
        "name": "18ad161e-0dd3-4f5e-9e59-bf561ce305d4",
        "fromColumn": "Entry_Date",
        "fromTable": "Gates Hourwise Entry",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_1cfec12f-28ed-43dc-9fd6-16a5dc60e76b"
      },
      {
        "name": "d4ba7638-c391-43bb-a348-de9866b57aa9",
        "fromColumn": "day_num_tag",
        "fromTable": "Gates Hourwise Entry",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "fe21a0f8-091c-4d36-a4f1-17ed079a02ad",
        "fromColumn": "Date",
        "fromTable": "Sales Data all Seasons",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_c7c4d261-be9f-4768-b288-545de5fe5221"
      },
      {
        "name": "2fc2b242-b0c0-4a44-8173-6862fd562655",
        "fromColumn": "Location",
        "fromTable": "DwellByPavAndDate_alllocations",
        "toColumn": "Location",
        "toTable": "Coordinates_wifi"
      },
      {
        "name": "d9c23b0d-b2ea-4aa3-8af8-f02a5cdc1fae",
        "fromColumn": "Date",
        "fromTable": "GuestCounts (2)",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_5ad591bb-daba-44c9-b0e6-88099fdaaaeb"
      },
      {
        "name": "35b69010-cb91-47bd-a055-9aadb095c46d",
        "fromColumn": "day_num_tag",
        "fromTable": "GuestCounts (2)",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "a7f98b78-c817-4898-89f9-27bebabd02ae",
        "fromColumn": "Date",
        "fromTable": "GuestCounts (3)",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_3867993e-887a-4975-b63d-bc647f1e0c90"
      },
      {
        "name": "fbe4ebb5-ff14-4942-a721-0f0b736712ae",
        "fromColumn": "day_num_tag",
        "fromTable": "GuestCounts (3)",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "29798ccf-5732-4fee-9995-b8ba328e38f1",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor + Park Footfall 2 (2)",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_d46aa641-184a-47aa-b53d-e70f423e2c27"
      },
      {
        "name": "78faac29-88c5-4008-ab84-45d28ad58242",
        "fromColumn": "Operation_Date",
        "fromTable": "Pav Sensor Footfall by Hour (2)",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_c6b3be0f-2b2c-4a1c-9f42-416831735a37"
      },
      {
        "name": "6d74822c-87de-45aa-924c-c7250c1920e9",
        "fromColumn": "Date",
        "fromTable": "S27_GuestCounts_2",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_5c1cdbb3-6770-4400-9b16-989b283421d7"
      },
      {
        "name": "242bc832-62bc-461f-8784-0d429252e3cf",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor + Park Footfall 2 (2)",
        "toColumn": "Location",
        "toTable": "Coordinates_wifi"
      },
      {
        "name": "b16cbb9a-00a1-46b8-8dc1-1ab98710d359",
        "fromColumn": "Location",
        "fromTable": "Pav Sensor Footfall by Hour (2)",
        "toColumn": "Location",
        "toTable": "Coordinates_wifi"
      },
      {
        "name": "01e68bf5-cd55-429b-87cb-e0aed2caaa45",
        "fromColumn": "day_num_tag",
        "fromTable": "Pav Sensor + Park Footfall 2 (2)",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "fd314345-ec53-4714-b35c-af2dbac09f16",
        "fromColumn": "day_num_tag",
        "fromTable": "Pav Sensor Footfall by Hour (2)",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "8f7ec459-2484-4a7c-ac7a-702079445879",
        "fromColumn": "day_num_tag",
        "fromTable": "S27_GuestCounts_2",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "836b9e66-c778-45f7-a452-548f29d761e1",
        "fromColumn": "day_num_tag",
        "fromTable": "Sales Data all Seasons (2)",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      },
      {
        "name": "0fae6f8e-6a9d-40a6-8982-7d6b36878e91",
        "fromColumn": "Date",
        "fromTable": "Sales Data all Seasons (2)",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_59e8f417-c748-435c-9fbb-2ce850437c8c"
      },
      {
        "name": "4bd520cb-0569-4b90-94b4-36f254538a0d",
        "fromColumn": "Date",
        "fromTable": "S27_GuestCounts_3",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_2137d3e5-07f3-42f4-b94e-cb20af52a0f6"
      },
      {
        "name": "69b09f6a-c2f2-42a3-8390-c0c8e2a30fce",
        "fromColumn": "day_num_tag",
        "fromTable": "S27_GuestCounts_3",
        "toColumn": "day_num_tag",
        "toTable": "S27_GuestCounts"
      }
    ],
    "sourceQueryCulture": "en-GB",
    "tables": [
      {
        "name": "DateTableTemplate_e416b678-d882-4b63-806c-6cb9db5d6591",
        "annotations": [
          {
            "name": "__PBI_TemplateDateTable",
            "value": "true"
          },
          {
            "name": "DefaultItem",
            "value": "DateHierarchy"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "4d4592db-06b5-4f3a-98f1-7c8f95923b83",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "58dac65d-61aa-4f1e-99b3-c28d80aefddb",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "940b5290-d1ce-4c12-8205-66e2f6f2cde7",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "7c8c8a71-cb2e-4a69-83ef-77d859f64927",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "30f570e7-b5aa-439b-81c7-e98d24df43f3",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "8e61c87f-cd3e-4823-8c92-c3d616d98bd8",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "0283b1b6-4383-40e4-9e3f-cb740cdf6dba",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "441404ab-397b-40c6-871b-d7ddda473510",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "a59e1def-3383-4b2b-88b0-532e1f4d4a20",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "02c22e56-bd46-47af-8fe3-053c3da7babc",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "c225767b-1991-4f23-90c5-7a107e30f97d",
                "ordinal": 3
              }
            ],
            "lineageTag": "26d4f4b5-d1c8-4a3a-bf14-434f1f5bcd4e"
          }
        ],
        "isHidden": true,
        "isPrivate": true,
        "lineageTag": "50372065-3cea-4066-8347-dc59c7ee6d9b",
        "partitions": [
          {
            "name": "DateTableTemplate_e416b678-d882-4b63-806c-6cb9db5d6591-a0c576ce-9c66-400b-8db5-de3dd8d14fbb",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(2015,1,1), Date(2015,1,1))",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Locations",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "b0ecebec78804425950bce94771d2c71"
          }
        ],
        "columns": [
          {
            "name": "Season27_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 27)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "a47bcd4d-cc57-42a2-b60e-948735b58853",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season26_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 26)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "043e7e59-3916-496a-a2d4-be8c747cd491",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season25_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 25)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "81ca8db3-c1af-4273-a671-d37486d0abd3",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season24_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 24)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "300c426b-75b4-4a7a-a533-1fd767a68622",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season23_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 23)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "0f2a8b8b-7f4d-4cba-95a6-71e144a5e62c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season22_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Location] in CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_id] = 22)),1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ad12fc9b-5677-44d4-bbe5-c6f9c4986ee2",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewSeason26_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Season26_locs]=1 && Locations[Season25_locs]=0 ,1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "d8d844fb-b84e-4008-9921-8b11ea020d12",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewSeason27_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Season27_locs]=1 && Locations[Season26_locs]=0 ,1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "8d97491a-52ce-464c-bf55-1ab164f63fc5",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewSeason25_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Season25_locs]=1 && Locations[Season24_locs]=0 ,1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "95344180-4fb6-49f3-af09-399b87738014",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewSeason24_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Season24_locs]=1 && Locations[Season23_locs]=0 ,1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "96176185-0ceb-47f7-b283-7c880c2f394d",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewSeason23_locs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(Locations[Season23_locs]=1 && Locations[Season22_locs]=0 ,1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e6876eea-5e1d-409b-9b8a-bbc415b64676",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "409cc65e-1037-4e20-b4fd-e7f0cf9a335a",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "20b2d6b9-d843-440f-b872-f4ec354a5dd3",
        "partitions": [
          {
            "name": "Locations-5a5a3c71-be08-43da-ba8b-42efedb6c5ae",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]))",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Avg vs Sum",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "6bb0d9c124d04250a2d3f21db7a939b1"
          }
        ],
        "columns": [
          {
            "name": "Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "61d6b0c1-3582-4487-853b-90a1cfe2ad55",
            "sourceColumn": "[Value]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "d4cc4ac4-3912-4910-adc0-c130fa088e9d",
        "partitions": [
          {
            "name": "Avg vs Sum-8d266b93-ecde-431d-992d-6d63686779f4",
            "mode": "import",
            "source": {
              "expression": "{\"AVG\",\"SUM\"}",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Coordinates_wifi",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c64f182f-20f6-4173-8582-594d2a1cf29b",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "LATITUDE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ce3d6231-66f6-4a92-9583-25d5b06a5da9",
            "sourceColumn": "LATITUDE",
            "summarizeBy": "sum"
          },
          {
            "name": "LONGITUDE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fff90f21-bf04-4ea2-b9af-b87b03418228",
            "sourceColumn": "LONGITUDE",
            "summarizeBy": "sum"
          },
          {
            "name": "Area(m2)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1cfcb307-fe20-41ec-85af-6219ee05cc24",
            "sourceColumn": "Area(m2)",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "d055d83f-c846-49e0-bcf1-87443cd22c5c",
        "partitions": [
          {
            "name": "Coordinates_wifi-5191b735-d159-4cf1-a6f4-1f6ea67f84a7",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"PARK ATTRACTIONS COORDINATES.xlsx\")),",
                "    #\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/\" = #\"Filtered Rows\"{[Name=\"PARK ATTRACTIONS COORDINATES.xlsx\",#\"Folder Path\"=\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00. Dashbaords/\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/\"),",
                "    Cleaned_Sheet = #\"Imported Excel Workbook\"{[Item=\"Cleaned\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Cleaned_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Area1\", type text}, {\"Area2\", type text}, {\"LATITUDE\", type number}, {\"LONGITUDE\", type number}, {\"Area(m2)\", type number}, {\"Column6\", type any}, {\"Column7\", type any}, {\"Column8\", type any}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Area2\", \"toZone\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"Column8\", \"Column7\", \"Column6\", \"Area1\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"toZone\", \"Location\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns1\",\"TOILET01\",\"TOILET 01\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"TOILET02\",\"TOILET 02\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"TOILET03\",\"TOILET 03\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"TOILET04\",\"TOILET 04\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"TOILET05\",\"TOILET 05\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"TOILET06\",\"TOILET 06\",Replacer.ReplaceText,{\"Location\"}),",
                "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"STUNT AREA\",\"STUNT ARENA\",Replacer.ReplaceText,{\"Location\"})",
                "in",
                "    #\"Replaced Value6\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "from_coordinates",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "729ce45a30204f5db28859843fb70859"
          }
        ],
        "columns": [
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "01f0454c-2565-4385-9529-9d67e7827e8f",
            "sourceColumn": "Coordinates_wifi[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "LATITUDE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7b467f9b-463c-43b2-a6f5-8d7fe8c65115",
            "sourceColumn": "Coordinates_wifi[LATITUDE]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "LONGITUDE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e8544b16-ec31-4ba7-beaa-2cd2ec48cfda",
            "sourceColumn": "Coordinates_wifi[LONGITUDE]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Area(m2)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "80367a95-1497-4316-9ea6-c05f0cb4b64c",
            "sourceColumn": "Coordinates_wifi[Area(m2)]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "fb470c23-ffb4-4af1-b34a-91478be3efc6",
        "partitions": [
          {
            "name": "from_coordinates-279fbf8f-afea-4bcc-9813-e93d7901bc73",
            "mode": "import",
            "source": {
              "expression": "FILTER(Coordinates_wifi,Coordinates_wifi[Location]=\"GATE OF THE WORLD\" || Coordinates_wifi[Location]=\"Cultural Gate\"|| Coordinates_wifi[Location]=\"Happiness Gate\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Average_movement",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "8793af70f0f24b0cacbd620a90c9fd42"
          }
        ],
        "columns": [
          {
            "name": "fromZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "47212aea-765f-43cd-9bc6-83fea05c2df2",
            "sourceColumn": "[fromZone]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "toZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1c451a69-1ed4-418b-b984-68c9a79ecf38",
            "sourceColumn": "[toZone]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ba6618e7-cb5d-4524-8804-765ff03efab6",
            "sourceColumn": "[count]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "fromZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(coordinates_Wifi[LATITUDE],coordinates_Wifi[Location],Average_movement[fromZone])",
            "isDataTypeInferred": true,
            "lineageTag": "eb42dbcb-7caa-4979-abfb-a390dd6b5364",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "toZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(Coordinates_wifi[LONGITUDE],coordinates_Wifi[Location],Average_movement[toZone])",
            "isDataTypeInferred": true,
            "lineageTag": "712d81d8-ed75-4be3-9ef9-615a3b295613",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "toZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(coordinates_Wifi[LATITUDE],coordinates_Wifi[Location],Average_movement[toZone])",
            "isDataTypeInferred": true,
            "lineageTag": "82df77ff-821d-4b05-b233-572d04cd1754",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "fromZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(Coordinates_wifi[LONGITUDE],coordinates_Wifi[Location],Average_movement[fromZone])",
            "isDataTypeInferred": true,
            "lineageTag": "3a9ee358-ec1a-43d4-abe7-37301802d848",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Percentage%",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "dataType": "double",
            "expression": "Divide('Average_movement'[count],(sum('Average_movement'[count])))",
            "formatString": "0.00%;-0.00%;0.00%",
            "isDataTypeInferred": true,
            "lineageTag": "6ff9f6e1-6ce9-4eaa-afc6-bd854a3431d4",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "34939dfc-dd96-4d03-8a51-fdd0daca5178",
            "sourceColumn": "[SeasonID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "S27_location_direction_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Average_movement'[toZone] in {",
              "    \"TURKEY\",",
              "    \"PAKISTAN\",",
              "    \"AL SANA\",",
              "    \"UAE\",",
              "    \"KHALIFA FOUNDATION\",",
              "    \"FLOATING MARKET\",",
              "    \"CELEBRATION WALK\",",
              "    \"PREMIUM KIOSK STREET\",",
              "    \"GATE OF THE WORLD\",\"KUWAIT TO INDIA COMMON AREA\",\"Kids Theatre\",\"TOILET 6\",\"FAZZA ENTRANCE\"},\"LEFT\",",
              "IF('Average_movement'[toZone] in {\"Syria\",\"Stunt Arena\",\"Stage Area\",\"Humyum to Syria\",\"Ripley\\'s\",\"Stunt Area\",\"Cultural Hub\",\"CARNAVAL\",\"THAILAND\",\"RUSSIA\",\"EUROPE\",\"AMERICA\",\"AFRICA\",\"QATAR\",\"INDIA\",\"THAILAND AVENUE\",\"R17 TO R19\",\"RESTAURANT STREET\",\"TOILET 3\"},\"STRAIGHT\",\"OTHER\")",
              ")",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "d97af386-8469-42b1-8e3b-256241a06181",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S27_location_direction_GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Average_movement'[toZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE\",\"KHALIFA FOUNDATION\",\"Cultural GATE\",\"HUMYUM TO SYRIA\",\"SYRIA\"},\"RIGHT\",",
              "IF('Average_movement'[toZone] in {\"KUWAIT TO INDIA COMMON AREA\",\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\",\"QATAR\",\"LEBANON\",\"PALESTINE\",\"RAILWAY MARKET\",\"HAPPINESS GATE\",\"CHINA TO JAPAN COMMON AREA\",\"JAPAN TO CHINA WALKWAY\",\"JAPAN\",\"EGYPT TO AFRICA COMMON AREA\",\"OMAN\",\"MOROCCO\",\"AFGHANISTAN\",\"HAPPINESS STREET\",\"CHINA\",\"RESTAURANT STREET\",\"INDIA\"},\"LEFT\",",
              "IF('Average_movement'[toZone] in {\"KIDS THEATRE TO CELEBRATION WALK COMMON AREA\",\"FLOATING MARKET\",\"Celebration Walk\",\"Premium Kiosk Street\",\"Kids Theatre\",\"Cultural Hub\",\"KOREA\",\"THAILAND\",\"CARNAVAL\",\"THAILAND AVENUE\",\"TOILET 3\",\"R17 to R19\",\"AMERICA\",\"EUROPE\",\"RUSSIA\",\"AFRICA\"},\"STRAIGHT\",",
              "\"OTHER\")",
              "))",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "56496cec-698e-4aae-961d-756a8dcecf0a",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S27_location_direction_HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Average_movement'[toZone] in {\"RESTAURANT STREET\",\"INDIA\",\"QATAR\",\"LEBANON\",\"CARNAVAL\",\"PALESTINE\",\"CHINA\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\",\"Japan to China Walkway\",\"THAILAND AVENUE\",\"RAILWAY MARKET\"},\"LEFT\",",
              "IF('Average_movement'[toZone] in {\"EGYPT TO AFRICA COMMON AREA\",\"R17 to R19\",\"GATE OF THE WORLD\",\"MOROCCO\",\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\",\"Kuwait to India Common Area\",\"PREMIUM KIOSK STREET\"},\"RIGHT\",",
              "IF('Average_movement'[toZone] in {\"HAPPINESS STREET\",\"AFRICA\",\"TOILET 3\",\"CULTURAL HUB\",\"RUSSIA\"},\"STRAIGHT\",",
              "\"OTHER\")",
              ")",
              ")",
              "// IF('Average_movement'[toZone] in {\"RESTAURANT STREET\",\"INDIA\",\"QATAR\",\"LEBANON\",\"CARNAVAL\",\"PALESTINE\",\"CHINA\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\",\"Japan to China Walkway\",\"THAILAND AVENUE\",\"RAILWAY MARKET\"},\"Left\",",
              "// IF('Average_movement'[toZone] in {\"EGYPT TO AFRICA COMMON AREA\",\"R17 to R19\",\"GATE OF THE WORLD\",\"MOROCCO\",\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\",\"Kuwait to India Common Area\",\"PREMIUM KIOSK STREET\"},\"Right\",",
              "// IF('Average_movement'[toZone] in {\"HAPPINESS STREET\",\"AFRICA\",\"TOILET 3\",\"CULTURAL HUB\",\"RUSSIA\"},\"Straight\",",
              "// \"Other\")",
              "// )",
              "// )",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "89ac4a49-12cb-4d9e-a160-c8d5b23fc1b2",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "88d718c2-32cb-41a0-9148-0d921e166842",
        "measures": [
          {
            "name": "Flow to Zone %",
            "expression": [
              "",
              "Var toZone=SELECTEDVALUE('Movement - Wifi'[fromZone])",
              "//,'Average_movement'[toZone]=toZone",
              "Return CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),ALL('Average_movement'[fromZone]))//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "30ea662d-422d-4aaf-a692-841adf509b52"
          },
          {
            "name": "Flow Percentage",
            "expression": [
              "CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),ALLSELECTED())//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "85a52287-d760-4269-a99c-8ccd127e5d39"
          },
          {
            "name": "Flow Percentage from HG",
            "expression": [
              "CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),'Average_movement'[fromZone]=\"Happiness Gate\",ALL())//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "04b79db7-856d-4181-8914-f3247d2eecb6"
          },
          {
            "name": "Flow Percentage from GOW",
            "expression": [
              "CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),'Average_movement'[fromZone]=\"Gate of The World\",ALL())//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "4b19f58d-f288-4e15-8596-788224d4eac7"
          },
          {
            "name": "Flow Percentage from CG",
            "expression": [
              "CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),'Average_movement'[fromZone]=\"CULTURAL GATE\",ALL())//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "aa96b75c-eb57-4f81-b547-df294c0a07c3"
          },
          {
            "name": "Flow Percentage from HG to location",
            "expression": [
              "",
              "VAR Selected_loc=SELECTEDVALUE('Movement - Wifi'[fromZone])",
              "Return CALCULATE(Sum('Average_movement'[count]),'Average_movement'[fromZone]=\"Happiness Gate\",'Average_movement'[toZone]=Selected_loc,ALL())",
              "/CALCULATE(sum('Average_movement'[count]),'Average_movement'[toZone]=Selected_loc,ALL())",
              "",
              "//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%])))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "53410495-5d9e-4655-bf4f-43b99f871b7c"
          },
          {
            "name": "Flow Percentage from GOW to location",
            "expression": [
              "",
              "VAR Selected_loc=SELECTEDVALUE('Movement - Wifi'[fromZone])",
              "Return CALCULATE(Sum('Average_movement'[count]),'Average_movement'[fromZone]=\"Gate of The World\",'Average_movement'[toZone]=Selected_loc,ALL())",
              "/CALCULATE(sum('Average_movement'[count]),'Average_movement'[toZone]=Selected_loc,ALL())",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "516f6eb6-06d0-42b2-ae65-12e9e3d9dea3"
          },
          {
            "name": "Flow Percentage from CG to location",
            "expression": [
              "",
              "VAR Selected_loc=SELECTEDVALUE('Movement - Wifi'[fromZone])",
              "Return CALCULATE(Sum('Average_movement'[count]),'Average_movement'[fromZone]=\"CULTURAL GATE\",'Average_movement'[toZone]=Selected_loc,ALL())",
              "/CALCULATE(sum('Average_movement'[count]),'Average_movement'[toZone]=Selected_loc,ALL())",
              "",
              "//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%])))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "f53c516b-f0d4-4701-8f56-a2e5e29f85c7"
          },
          {
            "name": "Flow Percentage to location",
            "expression": [
              "",
              "VAR Selected_loc=SELECTEDVALUE('Movement - Wifi'[fromZone])",
              "",
              "VAR rankings = RANKX(",
              "    FILTER(ALL('Average_movement'),'Average_movement'[toZone]=Selected_loc),",
              "    Calculate(SUM([count]),'Average_movement'[toZone]=Selected_loc)",
              "    ,,DESC,Skip)",
              "",
              "",
              "Return CALCULATE(Sum('Average_movement'[count]),FILTER('Average_movement',rankings<=100),ALL())",
              "/CALCULATE(sum('Average_movement'[count]),'Average_movement'[toZone]=Selected_loc,ALL())",
              "",
              "// SalaryTop10 = CALCULATE([Salary_m],FILTER(Ranking,[SalaryRank]<=10))",
              "",
              "",
              "//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%])))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "48f543e1-5227-4f28-a9a7-a709d02fa9a7"
          },
          {
            "name": "Flow from Zone %",
            "expression": [
              "CALCULATE(Sum('Average_movement'[count]))/CALCULATE(sum('Average_movement'[count]),ALL('Average_movement'[toZone]))//Average('Average_movement'[count])",
              "// SUM(FILTER(Average_movement,Average_movement[fromZone]=\"GATE OF THE WORLD\")[Percentage%]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "5d0c2124-2a37-436c-b4cc-a4e6ec76d3ab"
          }
        ],
        "partitions": [
          {
            "name": "Average_movement-dff56952-5c6b-45af-a49d-15add758f276",
            "mode": "import",
            "source": {
              "expression": [
                "",
                "// VAR filteredTable=Filter(Movement_S26,Movement_S26[fromZone]=\"GATE OF THE WORLD\")",
                "VAR grouped=GROUPBY('Movement - Wifi',[fromZone],[toZone],[SeasonID],\"count\",AVERAGEX(CURRENTGROUP(),[count]))",
                "Return grouped  "
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Compare with",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "58c9323d56d245bcafe0fa4a3bbee087"
          }
        ],
        "columns": [
          {
            "name": "Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": false,
            "lineageTag": "8168e185-d338-4142-ab72-f7091aa2775b",
            "sourceColumn": "[Value]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "f0c2000f-3879-4cf3-91f5-1ea2339e6d1d",
        "measures": [
          {
            "name": "Compared_Label",
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Compare with'[Value])",
              "var output = \"● \"  & selectedseason",
              "return output"
            ],
            "lineageTag": "f8b78435-25de-4a6e-8555-23afdada06c0"
          }
        ],
        "partitions": [
          {
            "name": "Compare with-a4e96c31-cabd-4b91-8b1a-39cee6cfd731",
            "mode": "import",
            "source": {
              "expression": [
                "{",
                "    CONVERT ( 22, INTEGER ),",
                "    CONVERT ( 23, INTEGER ),",
                "    CONVERT ( 24, INTEGER ),",
                "    CONVERT ( 25, INTEGER ),",
                "    CONVERT ( 26, INTEGER ),",
                "    CONVERT ( 27, INTEGER ),",
                "    CONVERT ( 28, INTEGER )",
                "}"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Like to Like",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "b55b3652af6d437193022b78b834c2e5"
          }
        ],
        "columns": [
          {
            "name": "Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "acbbf6ca-69cc-42e8-890d-f146fe9ced75",
            "sourceColumn": "[Value]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "9bf70832-b980-4e51-8479-f7aa28b147de",
        "partitions": [
          {
            "name": "Like to Like-8a520d05-2b3d-4e6c-87f5-163e3a1e847e",
            "mode": "import",
            "source": {
              "expression": "{\"Same # Of Days\",\"ETD\"}",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Distinct_Movement_Wifi",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "36730a8c363f4717afa566c22b78d384"
          }
        ],
        "columns": [
          {
            "name": "Wifi_Location_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              " IF(SEARCH(\"office\",'Distinct_Movement_Wifi'[fromZone],True,False)>0 ,\"OTHER\",",
              "  IF(SEARCH(\"centre\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "    IF(SEARCH(\"hub\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "",
              "  IF(SEARCH(\"center\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"security\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"workshop\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"point\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"OTHER\",",
              "",
              "  IF(SEARCH(\"toilet\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"TOILET\",",
              "  IF(SEARCH(\"parking\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PARKING\",",
              "  IF(SEARCH(\"common\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PATHWAY\",",
              "",
              "  IF(SEARCH(\"to\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PATHWAY\",",
              "  IF(SEARCH(\"repley\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PROGRAM\",",
              "  IF(SEARCH(\"ripley\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PROGRAM\",",
              "  IF(SEARCH(\"market\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PROGRAM\",",
              "",
              "  IF(SEARCH(\"street\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PROGRAM\",",
              "  IF(SEARCH(\"avenue\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"PATHWAY\",",
              "  IF(SEARCH(\"gate\",'Distinct_Movement_Wifi'[fromZone],1,0) ,\"MAIN GATES\",",
              "  IF ([fromZone] IN {\"CARNAVAL\",\"KIOSK-STREET-CANAL\",\"KIOSK-STREET-CULTURALHUB\",\"STUNT AREA\",\"RIPLEYS\",\"KIDS THEATRE\",\"RAIL MARKET\"},\"PROGRAM\" ,",
              "  \"PAVILION\"))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "4c812f7f-19e3-41fc-abf7-58fb4125c442",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "fromZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ff1ef6ee-d2ac-4f5b-9282-871e5cfb87b9",
            "sourceColumn": "Movement - Wifi[fromZone]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "S27_location_direction_GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE\",\"KHALIFA FOUNDATION\"},\"Right\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\",\"QATAR\",\"LEBANON\",\"PALESTINE\"},\"Left\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"FLOATING MARKET\",\"Celebration Walk\",\"Premium Kiosk Street\",\"Kids Theatre\",\"Cultural Hub\"},\"Straight\",",
              "\"other\")",
              "))",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "ed276641-0275-4ee1-bd2a-48d983e691bf",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S26_location_direction_GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE PAVILION\",\"KHALIFA FOUNDATION\"},\"Right\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\"},\"Left\",\"IDK\")",
              "",
              ")",
              "",
              "",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "6c78ad9c-2f24-4b56-a260-03a92e875141",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S27_location_direction_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE PAVILION\",\"KHALIFA FOUNDATION\",\"FLOATING MARKET\",\"Celebration Walk\"},\"Left\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"Syria\",\"Stunt Arena\",\"Stage Area\",\"Humyum to Syria\",\"Ripley\\'s\",\"Stunt Area\",\"Cultural Hub\",\"Kids Theatre\"},\"Straight\",\"Other\")",
              ")",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "4443231f-7ff0-4993-a320-fec130755f35",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S26_location_direction_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE PAVILION\",\"KHALIFA FOUNDATION\"},\"Right\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\"},\"Left\",\"IDK\")",
              ")//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "8d3048e0-5cc0-412e-bf1c-8a118fd86373",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S27_location_direction_HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"QATAR\",\"LEBANON\",\"CARNAVAL\",\"PALESTINE\",\"CHINA\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\",\"Japan to China Walkway\"},\"Left\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\",\"Kuwait to India Common Area\"},\"Right\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"HAPPINESS STREET\",\"AFRICA\",\"TOILET 3\",\"CULTURAL HUB\"},\"Straight\",",
              "\"Other\")",
              ")",
              ")",
              "//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\"",
              "// {\"Carnaval\",\"Thailand Avenue\",\"Humyum to Syria\",\"Cultural Hub\",\"Premium Kiosk Street\",\"Japan to China Walkway\",",
              "// \"Restaurant Street\",\"Kuwait to India Common Area\",\"Cultural Gate\",\"Happiness Gate\",\"India\",\"Kids Theatre\",\"Qatar\",",
              "// \"Happiness Street\",\"Egypt\",\"Celebration Walk\",\"R17 to R19\",",
              "// \"Railway Market\",\"UAE\",\"Syria\",\"Morocco\",\"Pakistan\",\"Khalifa Foundation\",\"Japan\",\"Lebanon\",\"Korea\",\"Kuwait\",\"China\",\"Iran\",\"Afghanistan\",\"Oman\",",
              "// \"Africa\",\"Yemen\",\"Guest Care Centre\",\"Turkey\",\"Fazza Entrance\",\"Gate Of The World\",\"Palestine\",",
              "// \"Stunt Area\",\"KSA\",\"Thailand\",\"Ripley\\'s\",\"Toilet 6\",\"Toilet 2\",\"Egypt to Africa Common Area\",\"Operation Call Centre\",\"America\",\"CG Gate\",\"Europe\",",
              "// \"Partner Happiness Center\",\"Tent Office\",\"Russia\",\"Al Sana\",\"Toilet 3\",\"Gate 1C Security Cabin\",\"Sales Office\",\"Carnaval Workshop\"})"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "cc9667c9-a7d4-4520-a79c-c8d4424713d6",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "S26_location_direction_HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"TURKEY\",\"PAKISTAN\",\"AL SANA\",\"UAE PAVILION\",\"KHALIFA FOUNDATION\"},\"Right\",",
              "IF('Distinct_Movement_Wifi'[fromZone] in {\"KUWAIT\",\"YEMEN\",\"BAHRAIN\",\"EGYPT\",\"MORROCO\",\"KSA\",\"IRAN\"},\"Left\",\"IDK\")",
              ")//,\"QATAR\",\"LEBANON\",\"PALESTINE\",\"CHINA\",\"CARNAVAL\",\"OMAN\",\"AFGHANISTAN\",\"JAPAN\""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "3bf347d2-ba68-4e37-b825-f6f56d2a4453",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "5ac9cc36-f2f7-4a5d-aa91-8c2d1c1b8b48",
        "partitions": [
          {
            "name": "Distinct_Movement_Wifi-1ca66cd5-d424-4058-aabe-5aa8d98922d4",
            "mode": "import",
            "source": {
              "expression": "DISTINCT('Movement - Wifi'[fromZone])",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Gates Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "e3955bab-56ba-4036-9ce0-6215adead548",
        "measures": [
          {
            "name": "CG_%_compared_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Cultural_Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Cultural_Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare)",
              "     ",
              ")",
              "",
              "     ",
              "",
              "// VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG TVM])+SUM('ParkFootfallByDate'[CG])),'ParkFootfallByDate'[Season_id]=compare,'ParkFootfallByDate'[day_num_tag]<=selected_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG TVM])+SUM('ParkFootfallByDate'[CG])),'ParkFootfallByDate'[Season_id]=compare)",
              "// )",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "558ab5e9-4d06-40eb-b178-a2bf9dc23068"
          },
          {
            "name": "CG_%_selected_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Cultural_Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Cultural_Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")",
              "// VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM])),'ParkFootfallByDate'[Season_id]=selectedseason,'ParkFootfallByDate'[day_num_tag]<=compare_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM])),'ParkFootfallByDate'[Season_id]=selectedseason)",
              "     ",
              "// )"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "1973c709-e855-4e55-a3bf-9513ad7fdf29"
          },
          {
            "name": "CG_compared_season",
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[Season_id]=compare)",
              ")",
              "",
              "// VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN ",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=compare,'ParkFootfallByDate'[day_num_tag]<=selected_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=compare)",
              "// )",
              ""
            ],
            "formatString": "0",
            "lineageTag": "89a28718-3afb-4297-8480-06a48c3d9ecf"
          },
          {
            "name": "CG_selected_season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              "",
              "// VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN ",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=selectedseason,'ParkFootfallByDate'[day_num_tag]<=compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=selectedseason)",
              "     ",
              "// )",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[CG])+SUM('ParkFootfallByDate'[CG TVM]),'ParkFootfallByDate'[Season_id]=selectedseason)",
              "     ",
              "// ))"
            ],
            "formatString": "0",
            "lineageTag": "36397d71-2d3d-4cc1-84d5-6016f2bc3914"
          },
          {
            "name": "GOW_%_compared_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Gate_Of_The_Word]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Gate_Of_The_Word]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare)",
              "     ",
              ")",
              "",
              "// VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG TVM])+SUM('ParkFootfallByDate'[CG])),'ParkFootfallByDate'[Season_id]=compare,'ParkFootfallByDate'[day_num_tag]<=selected_park_days),",
              "//     CALCULATE((SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]))/(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM])+SUM('ParkFootfallByDate'[CG TVM])+SUM('ParkFootfallByDate'[CG])),'ParkFootfallByDate'[Season_id]=compare)",
              "// )",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "lineageTag": "6bcfad35-d661-4615-92b9-68156ef4b40c"
          },
          {
            "name": "GOW_compared_season",
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[Season_id]=compare)",
              ")",
              "",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'ParkFootfallByDate'[Season_id]=compare,'ParkFootfallByDate'[day_num_tag]<=selected_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'ParkFootfallByDate'[Season_id]=compare)",
              "// )",
              ""
            ],
            "formatString": "0",
            "lineageTag": "fd347ff5-6e16-4300-b92a-2451d92b7b6b"
          },
          {
            "name": "GOW_%_selected_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Gate_Of_The_Word]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Gate_Of_The_Word]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "179773e0-edcb-40b3-9425-28b00003fa40"
          },
          {
            "name": "GOW_selected_season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_Date,'GuestCounts'[day_num_tag_shifted]>=min_Date),",
              "    CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              "",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'ParkFootfallByDate'[Season_id]=selectedseason,'ParkFootfallByDate'[day_num_tag]<=compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'ParkFootfallByDate'[Season_id]=selectedseason)",
              "     ",
              "// )",
              "/*",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN",
              "",
              "IF( ",
              "    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "    CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days),",
              "    IF(",
              "    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "     CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall')),",
              "     IF(",
              "        AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "        CALCULATE(SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "        IF(",
              "            AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "            CALCULATE((SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]))/2,'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "          IF(",
              "                AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "                CALCULATE((SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]))/2,'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall')),  ",
              "                 IF(",
              "                            AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "                            CALCULATE((SUM('ParkFootfallByDate'[GOW])+SUM('ParkFootfallByDate'[GOW TVM]))/2,'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "                             BLANK()",
              ")",
              ")))))",
              "*/"
            ],
            "formatString": "0",
            "lineageTag": "a2c1e808-ffdb-464e-84cb-4ec817235156"
          },
          {
            "name": "HappinessGate_%_27",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Happiness Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Happiness Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d325099a-4622-4a2e-b63c-5b098673bf8f"
          },
          {
            "name": "HappinessGate_S27",
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Happiness Gate]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Happiness Gate]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              "",
              "     "
            ],
            "formatString": "0",
            "lineageTag": "e077ac2f-7564-4963-b061-41e646164684"
          },
          {
            "name": "HappinessGate_S27_VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[VIP-HG]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[VIP-HG]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              "",
              "     "
            ],
            "lineageTag": "839d7f7e-bece-4e20-a878-e90ecee33876"
          },
          {
            "name": "HappinessGate_%_27_VIP",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[VIP-HG]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[VIP-HG]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d40d0ebc-7090-4003-9828-8292344d5a13"
          },
          {
            "name": "GOW_selected_season VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_Date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              ""
            ],
            "lineageTag": "1d3050af-aee9-458d-a0ce-15cda865d26b"
          },
          {
            "name": "GOW_compared_season VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[Season_id]=compare)",
              ")"
            ],
            "lineageTag": "73bdcda6-0497-4340-9dda-20c41ead563b"
          },
          {
            "name": "CG_compared_season VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[Season_id]=compare)",
              ")",
              "",
              ""
            ],
            "lineageTag": "82eed222-c43c-449e-8f46-353937b63734"
          },
          {
            "name": "CG_selected_season VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[Season_id]=selectedseason)",
              ")"
            ],
            "lineageTag": "1b218184-3df0-423e-aab5-eee96674c318"
          },
          {
            "name": "GOW_%_compared_season VIP",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[VIP-GOW]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[VIP-GOW]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=compare)",
              "     ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "b247f307-4bfc-48d1-b255-fe14ad08e85c"
          },
          {
            "name": "GOW_%_selected_season VIP",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[VIP-GOW]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[VIP-GOW]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "ad1d655f-2eba-4c83-a1ad-fc4717be4c00"
          },
          {
            "name": "CG_%_compared_season VIP",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[VIP-CG]))/(",
              "",
              "SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[VIP-CG]))/(",
              "",
              "SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=compare)",
              "     ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "8c5a550d-ff2c-47d8-9bca-9246cea32440"
          },
          {
            "name": "CG_%_selected_season VIP",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[VIP-CG]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_Date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[VIP-CG]))/(SUM('GuestCounts'[VIP-CG])+SUM('GuestCounts'[VIP-GOW])+SUM('GuestCounts'[VIP-HG])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "ae166ace-0c2f-4edf-973f-35426ce5c06f"
          },
          {
            "name": "Variance GOW",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=selectedseason) -",
              " CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=compare)"
            ],
            "lineageTag": "05a940f4-105b-4ea0-ae40-59f08cefd32c"
          },
          {
            "name": "Variance CG",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=selectedseason) -",
              " CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=compare)"
            ],
            "lineageTag": "098f3149-6df6-43b4-aa29-c05b724b8894"
          },
          {
            "name": "Variance GOW %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "Return ",
              " DIVIDE('Gates Measures'[Variance GOW],CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),",
              " 'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]<=min_date,'GuestCounts'[Season_ID]=selectedseason))",
              " "
            ],
            "lineageTag": "f1e88312-fb0a-4ad5-83fc-8fa5e62743ec"
          },
          {
            "name": "Variance CG %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "Return ",
              " DIVIDE('Gates Measures'[Variance CG],CALCULATE(SUM('GuestCounts'[Cultural_Gate]),",
              " 'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]<=min_date,'GuestCounts'[Season_ID]=selectedseason))",
              " "
            ],
            "lineageTag": "bda2feca-09f6-4274-ab7c-0545d8bcee4b"
          },
          {
            "name": "Variance CG VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=selectedseason) -",
              " CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=compare)"
            ],
            "lineageTag": "cdacad02-4c7c-4ce1-904e-cbfdb2d1f7e3"
          },
          {
            "name": "Variance GOW VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=selectedseason) -",
              " CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=compare)"
            ],
            "lineageTag": "3c623022-a810-4afc-a392-2175d298a12d"
          },
          {
            "name": "Variance CG VIP %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "Return ",
              " DIVIDE('Gates Measures'[Variance CG VIP],CALCULATE(SUM('GuestCounts'[VIP-CG]),",
              " 'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]<=min_date,'GuestCounts'[Season_ID]=selectedseason))",
              " "
            ],
            "lineageTag": "14342716-69de-46b1-8038-7348ff8931b8"
          },
          {
            "name": "Variance GOW VIP %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "Return ",
              " DIVIDE('Gates Measures'[Variance GOW VIP],CALCULATE(SUM('GuestCounts'[VIP-GOW]),",
              " 'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]<=min_date,'GuestCounts'[Season_ID]=selectedseason))",
              " "
            ],
            "lineageTag": "b31cbf40-f5a9-40ae-a615-a49f1c807e7e"
          },
          {
            "name": "Over Target GOW",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance GOW]>0,'Gates Measures'[Variance GOW],0)",
              ""
            ],
            "lineageTag": "c5149f13-6a17-4484-9c10-98e7ff80451a"
          },
          {
            "name": "Over Target CG",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance CG]>0,'Gates Measures'[Variance CG],0)",
              ""
            ],
            "lineageTag": "6f65b330-42f1-421a-b079-fbb8daf1f150"
          },
          {
            "name": "Over Target GOW VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance GOW VIP]>0,'Gates Measures'[Variance GOW VIP],0)",
              ""
            ],
            "lineageTag": "58008759-2886-4e57-a2d9-6bc02e2aab93"
          },
          {
            "name": "Over Target CG VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance CG VIP]>0,'Gates Measures'[Variance CG VIP],0)",
              ""
            ],
            "lineageTag": "912220af-5396-45dc-b146-5906c63c5441"
          },
          {
            "name": "Under Target GOW",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance GOW]<0,ABS('Gates Measures'[Variance GOW]))",
              ""
            ],
            "lineageTag": "95a0d82a-b647-4970-ae0f-3101af58fa6c"
          },
          {
            "name": "Under Target CG",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance CG]<0,ABS('Gates Measures'[Variance CG]))",
              ""
            ],
            "lineageTag": "fe2daee5-8cc4-402a-bde2-a702d7adaf59"
          },
          {
            "name": "Under Target GOW VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance GOW VIP]<0,ABS('Gates Measures'[Variance GOW VIP]))",
              ""
            ],
            "lineageTag": "c41cac32-5a32-4c5b-a037-9d7939c2d425"
          },
          {
            "name": "Under Target CG VIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Gates Measures'[Variance CG VIP]<0,ABS('Gates Measures'[Variance CG VIP]))",
              ""
            ],
            "lineageTag": "07a6b7fe-dd0f-4594-89ea-dade7e515270"
          },
          {
            "name": "GOW Actual Value vs Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Gate_Of_The_Word]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('Gates Measures'[Variance GOW]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Gates Measures'[Variance GOW]))",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "1da7dd8d-8149-4614-a071-fc0c99f607b5"
          },
          {
            "name": "CG Actual Value vs Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Cultural_Gate]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('Gates Measures'[Variance CG]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Gates Measures'[Variance CG]))",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "817fb96d-a720-4aca-abb8-b5b880ccd94c"
          },
          {
            "name": "GOW VIP Actual Value vs Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[VIP-GOW]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('Gates Measures'[Variance GOW VIP]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Gates Measures'[Variance GOW VIP]))",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "9e6a418e-faca-4a2b-933c-e4abf473a766"
          },
          {
            "name": "CG VIP Actual Value vs Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[VIP-CG]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('Gates Measures'[Variance CG VIP]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Gates Measures'[Variance CG VIP]))",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "2552a929-3b3e-4cbe-81e4-8acccddaa725"
          },
          {
            "name": "CarnavalGate_%_compared_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Carnaval Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Carnaval Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=compare)",
              "     ",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "b37f4203-50a2-4ca6-8a29-3d21905a1485"
          },
          {
            "name": "CarnavalGate_%_selected_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE((SUM('GuestCounts'[Carnaval Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE((SUM('GuestCounts'[Carnaval Gate]))/(SUM('GuestCounts'[Cultural_Gate])+SUM('GuestCounts'[Gate_Of_The_Word])+SUM('GuestCounts'[Happiness Gate])+SUM('GuestCounts'[Carnaval Gate])),'GuestCounts'[Season_id]=selectedseason)",
              "     ",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "8d854310-a34d-4f19-9bd5-6b43777aea8d"
          },
          {
            "name": "CarnavalGate_selected_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Carnaval Gate]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Carnaval Gate]),'GuestCounts'[Season_id]=selectedseason)",
              ")",
              ""
            ],
            "lineageTag": "2c0f4a9a-a811-44fa-865b-99c07f4731c3"
          },
          {
            "name": "Measure 2",
            "annotations": [
              {
                "name": "43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c",
                "value": "True"
              }
            ],
            "lineageTag": "595a23a3-4c95-4501-9a56-baa905e3a50c"
          },
          {
            "name": "CarnavalGate_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Carnaval Gate]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Carnaval Gate]),'GuestCounts'[Season_id]=compare)",
              ")",
              ""
            ],
            "lineageTag": "0813e27c-e4d2-46e1-8cb8-ac5241372a55"
          }
        ],
        "partitions": [
          {
            "name": "Gates Measures-24c4cd5a-92a2-49fd-b650-cf2af191ce7e",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Footfall Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "2588cf27-446e-4237-8097-d12da0624c96",
        "measures": [
          {
            "name": "Footfall_per_m2_selected_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "--VAR max_date=MIN(selected_park_days, compare_park_days)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    IFERROR(",
              "        (CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "        /CALCULATE(MIN('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=value(selectedseason)))",
              "        /CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),0),",
              "    ",
              "    IFERROR((CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "    /CALCULATE(MIN('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=value(selectedseason)))",
              "    /CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason),0)",
              " ",
              ")",
              ""
            ],
            "lineageTag": "eac7281e-abd8-475a-b4dd-09d9400e88e6"
          },
          {
            "name": "Footfall_per_m2_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "",
              "IF( ",
              "    like_to_like=\"Same # Of Days\",",
              "    IFERROR((",
              "        CALCULATE(",
              "            SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_id]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "        /",
              "        CALCULATE(",
              "            MIN('Pavilion Wise Details'[Pavilion_Size]),",
              "            'Pavilion Wise Details'[Season_ID]=compare,ALL('Pav Sensor + Park Footfall 2'[Season_id])))",
              "        /",
              "        CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,",
              "        'Pav Sensor + Park Footfall 2'[Season_id]=compare,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),0),",
              "    ",
              "    IFERROR((",
              "        CALCULATE(",
              "            SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "        /",
              "        CALCULATE(",
              "            MIN('Pavilion Wise Details'[Pavilion_Size]),",
              "            'Pavilion Wise Details'[Season_ID]=compare,ALL('Pav Sensor + Park Footfall 2'[Season_id])))",
              "        /",
              "        CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,",
              "        'Pav Sensor + Park Footfall 2'[Season_id]=compare),0)",
              ")"
            ],
            "lineageTag": "d389ee64-4da9-44b7-afac-6d98b5110a56"
          },
          {
            "name": "Pavilion_Footfall_Change_%",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Footfall Measures'[Pavilion_Footfall_selected season]-'Footfall Measures'[Pavilion_Footfall_compared_season])/'Footfall Measures'[Pavilion_Footfall_compared_season],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "7ddd4029-438b-4b9d-9296-44dfa78392f5"
          },
          {
            "name": "Pavilion_Footfall_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "IF( AND(like_to_like=\"Same # Of Days\",avg_sum=\"Sum\"),",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//",
              "//",
              "",
              "",
              " IF(AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare),",
              "    ",
              "    IF (AND(like_to_like=\"Same # Of Days\",avg_sum=\"Avg\"),",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//    ",
              "  IF(AND(like_to_like=\"ETD\",avg_sum=\"Avg\"), ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=compare)))))",
              "        ",
              "",
              "",
              "// IF( ",
              "//    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag]<=selected_park_days),",
              "//     IF(",
              "//     AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "//      CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag]<=selected_park_days),",
              "//      IF(",
              "//         AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "//         CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)/  CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=compare),",
              "//         IF(",
              "//         AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)/   CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=compare),",
              "//           IF(",
              "//                 AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "//                 CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag]<=selected_park_days)/   CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag]<=selected_park_days),  ",
              "//                  IF(",
              "//                             AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "//                             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)/   CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=compare),",
              "//                              BLANK()",
              "     ",
              "// )",
              "//           )",
              "//         )",
              "//      )",
              "//     )",
              "// )"
            ],
            "lineageTag": "dcfba695-f20e-4d1d-bd31-b9c1cd66e3f1"
          },
          {
            "name": "Pavilion_Footfall_selected season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR selected_park_days_all=CALCULATE(DISTINCT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR compare_park_days_all=CALCULATE(DISTINCT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( AND(like_to_like=\"Same # Of Days\",avg_sum=\"Sum\"),",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//",
              " IF(AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//",
              " IF(AND(like_to_like=\"Same # Of Days\",avg_sum=\"Avg\"),",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//    ",
              "  IF(AND(like_to_like=\"ETD\",avg_sum=\"Avg\"), ",
              " CALCULATE(",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason))))))",
              "        ",
              "",
              "",
              "",
              "",
              "// IF( ",
              "//     AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days),",
              "//     IF(",
              "//         AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "//      CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days),",
              "//      IF(",
              "//         AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "//         CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//         IF(",
              "//             AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason, 'Pav Sensor + Park Footfall 2'[Total_Entries]<>0)/ CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason, 'Pav Sensor + Park Footfall 2'[Total_Entries]<>0),",
              "//           IF(",
              "//                 AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "//                 CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days)/ CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days  ),",
              "//                  IF(AND(like_to_like=\"Same # Of Days\",avg_sum=\"Avg\"),  ",
              "//                             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)/ CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//                        BLANk()",
              "// )",
              "// ))))))))))"
            ],
            "lineageTag": "fe6f04a3-3bc7-4453-8f39-5c1550a02c3f"
          },
          {
            "name": "Plotting_Park_Footfall_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              " ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "RETURN",
              "IF( ",
              "    AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=selected_park_days),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare)   ",
              ")",
              "",
              " "
            ],
            "lineageTag": "25085d33-f244-4dac-aeb8-6c10949afbe5"
          },
          {
            "name": "Plotting_Park_Footfall_selected_season",
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason) ",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "RETURN",
              "",
              "IF( ",
              "  AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=compare_park_days),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason)   ",
              ")",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "082ec0eb-a245-4ee0-a230-4d421bac2164"
          },
          {
            "name": "per_m2_selected_season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "RETURN",
              "   CALCULATE(MIN('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=value(selectedseason))",
              "        "
            ],
            "formatString": "0",
            "lineageTag": "20eff17f-8215-4400-95e7-0213a330dbb7"
          },
          {
            "name": "Plotting_Park_Footfall_compared_season_guestcounts",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              " ",
              "RETURN ",
              "",
              "IF( ",
              "  (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare ,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare)   ",
              ")"
            ],
            "lineageTag": "9436c914-3f24-4a02-afab-0e8ca3c55fb7"
          },
          {
            "name": "Plotting_Park_Footfall_selected_season_guest_counts",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN",
              "",
              "IF( ",
              "  (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason ,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)   ",
              ")"
            ],
            "lineageTag": "39ea3181-0f80-473d-9cc7-7263b5f5c8bf"
          },
          {
            "name": "Pavilion_Footfall_selected season_map",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              ""
            ],
            "lineageTag": "099873f9-ec12-40f0-b182-03c60741059d"
          },
          {
            "name": "Plotting_Park_Footfall_compared_season_guestcounts Average",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              " ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare)   ",
              ")",
              "",
              " "
            ],
            "lineageTag": "b7403d5e-97cd-491b-936d-71906feefbdc"
          },
          {
            "name": "Plotting_Park_Footfall_selected_season_guest_counts average",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "",
              "IF( ",
              "  (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)   ",
              ")",
              ""
            ],
            "lineageTag": "7519c89f-9a9f-444d-aa27-28f910bec2a3"
          },
          {
            "name": "Footfall per m2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]))",
              "        /CALCULATE(MIN('Pavilion Wise Details'[Pavilion_Size]))",
              "        "
            ],
            "lineageTag": "599a6777-2246-42bc-abf6-de44d854f7f7"
          },
          {
            "name": "Best_footfall_27",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR Season=27",
              "Return ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=27)    /   ",
              "    CALCULATE(",
              "",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=27)",
              "",
              "",
              ""
            ],
            "lineageTag": "19fedbe1-99d9-4f37-a432-24799596f090"
          },
          {
            "name": "Best_penetration_27",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR Season=27",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=Season)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=Season)",
              "Return ",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=Season)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=Season,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag,ALL())",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "1a979bd2-2d54-425c-ab1e-3a4b3c5b6b7c"
          },
          {
            "name": "S26 park footfall",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)  ",
              "",
              ""
            ],
            "lineageTag": "75c127d8-d83a-42bd-9820-6ef035c1c33e"
          },
          {
            "name": "S26 park footfall max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=26)  ",
              "",
              ""
            ],
            "lineageTag": "9d9d87cd-7abb-43ca-9f0f-7125551b5f6a"
          },
          {
            "name": "S26 park tickets",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]),'Sales Data all Seasons'[Season_ID]=compare,'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)  ",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "8f443644-7674-4f9f-9933-1301bf1ce7d9"
          },
          {
            "name": "S26 park tickets sum",
            "expression": [
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]),'Sales Data all Seasons'[Season_ID]=26)  ",
              ""
            ],
            "formatString": "0",
            "lineageTag": "f1487af1-e8e6-4a66-afd7-f704146d73ae"
          },
          {
            "name": "S27 park footfall",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)  ",
              "",
              ""
            ],
            "lineageTag": "957b1806-0e1d-44fe-b638-b0719539583a"
          },
          {
            "name": "S27 park tickets",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]),'Sales Data all Seasons'[Season_ID]=selectedseason,'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)  ",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "2386db16-3710-48f5-b470-0abe9fb3e8f3"
          },
          {
            "name": "S27 vs S26 footfall",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('Footfall Measures'[S27 park footfall]-'Footfall Measures'[S26 park footfall])/'Footfall Measures'[S26 park footfall]",
            "lineageTag": "c7f05812-e713-4444-bc41-52b8da6df931"
          },
          {
            "name": "S27 vs S26 tickets",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('Footfall Measures'[S27 park tickets]-'Footfall Measures'[S26 park tickets])/'Footfall Measures'[S26 park tickets]",
            "lineageTag": "3a457370-ff3a-4b54-85e2-4f22743c98c8"
          },
          {
            "name": "S27 Vs S26 Pavilion_Footfall_Change_%",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Footfall Measures'[S27 Pavilion_Footfall_selected season]-'Footfall Measures'[S26 Pavilion_Footfall_compared_season])/'Footfall Measures'[S26 Pavilion_Footfall_compared_season],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "036b3dc7-3927-4106-9b34-ebb675acbb92"
          },
          {
            "name": "S26 Pavilion_Footfall_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)"
            ],
            "lineageTag": "df627a68-eaff-4fac-b3d2-783a52d0ce13"
          },
          {
            "name": "S27 Pavilion_Footfall_selected season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR selected_park_days_all=CALCULATE(DISTINCT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR compare_park_days_all=CALCULATE(DISTINCT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /   ",
              "    CALCULATE(",
              "        // Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              ""
            ],
            "lineageTag": "a22f3720-db55-47a3-aea1-1c7323cdb811"
          },
          {
            "name": "Pavilion_Footfall_per_m2_Change_%",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Footfall Measures'[Footfall_per_m2_selected_season]-'Footfall Measures'[Footfall_per_m2_compared_season])/'Footfall Measures'[Footfall_per_m2_compared_season],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "31ef0852-12f6-4d77-a2be-be48f5a33307"
          },
          {
            "name": "Days Target Missed vs Compared Season",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "// VAR count_below_Target=COUNTROWS(",
              "//     FILTER(",
              "//         GuestCounts,",
              "//          (VALUE('Footfall Measures'[S26 park footfall])",
              "//         >",
              "//         VALUE('Footfall Measures'[S27 park footfall] )) &&'GuestCounts'[day_num_tag_shifted]<=max_date &&'GuestCounts'[day_num_tag_shifted]>=min_date",
              "//     ))",
              "VAR count_below_Target=COUNTROWS(",
              "    FILTER(",
              "        GuestCounts,",
              "         (CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_ID]=compare&&'GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date) ) )",
              "        >",
              "        (CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_ID]=selectedseason&&'GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date))  )",
              "    ))",
              "",
              "Return IF(count_below_Target=BLANK(),0,count_below_Target)"
            ],
            "formatString": "0",
            "lineageTag": "ed41a5f6-a0d2-4876-8263-72ffca64cc80"
          },
          {
            "name": "Days Target Met vs Compared Season",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "",
              "VAR count_below_Target=COUNTROWS(",
              "    FILTER(",
              "        GuestCounts,",
              "        (VALUE('Footfall Measures'[S26 park footfall])",
              "        <",
              "        VALUE('Footfall Measures'[S27 park footfall]) ) &&'GuestCounts'[day_num_tag_shifted]<=max_date &&'GuestCounts'[day_num_tag_shifted]>=min_date",
              "    ))",
              "",
              "Return IF(count_below_Target=BLANK(),0,count_below_Target)"
            ],
            "formatString": "0",
            "lineageTag": "94d49211-8450-4512-8883-c4be876e0ed7"
          },
          {
            "name": "S27 park footfall all days to date",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              " ",
              "VAR selectedseason = 27 // SELECTEDVALUE('GuestCounts'[Season_id])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "",
              "VAR min_date=selected_park_days_min",
              "VAR max_date=selected_park_days",
              "",
              "RETURN ",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),FILTER('GuestCounts','GuestCounts'[Season_ID]=selectedseason &&'GuestCounts'[day_num_tag_shifted]<=max_date)",
              ")",
              ""
            ],
            "lineageTag": "5b11efd2-805f-4e67-965c-39038976504f"
          },
          {
            "name": "AVG footfall at any pav compare",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "    IF ((like_to_like=\"Same # Of Days\"),",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date",
              "",
              ")/CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//    ",
              "  IF((like_to_like=\"ETD\"), ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "        ",
              "        /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]))",
              "        ",
              "        ))",
              "        "
            ],
            "lineageTag": "6f6d1385-6ab0-4328-90e2-16b7db19616d"
          },
          {
            "name": "AVG footfall at any pav slected",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "",
              "    IF ((like_to_like=\"Same # Of Days\"),",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "        /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//    ",
              "  IF((like_to_like=\"ETD\"), ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "        ",
              "        /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]))",
              "        ",
              "        ))",
              "        "
            ],
            "lineageTag": "50bff279-8834-4a7f-a817-24f761a45c5e"
          },
          {
            "name": "Pavilion_Footfall_compared_season chosen location",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "",
              "",
              " IF((like_to_like=\"ETD\"),",
              "     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare)))",
              ""
            ],
            "lineageTag": "394975db-df69-41e8-b4f2-bad6c06adbb9"
          },
          {
            "name": "Pavilion_Footfall_selected_season chosen location",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "",
              "",
              " IF((like_to_like=\"ETD\"),",
              "     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)))",
              ""
            ],
            "lineageTag": "8d3c258b-7184-4fbc-abbb-39c83858f0be"
          },
          {
            "name": "MIN day_num_tag",
            "expression": "Calculate(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=27)-30",
            "formatString": "0",
            "lineageTag": "2bcb2606-e4db-4683-bc26-18206e7f185e"
          },
          {
            "name": "MIN week",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "Calculate(MAX('GuestCounts'[new_week_num]),'GuestCounts'[Season_ID]=27)-5",
            "lineageTag": "3af80a6f-03f3-4a1a-81f3-5f3768576b6a"
          },
          {
            "name": "AVG footfall at any pav",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "    IF ((like_to_like=\"Same # Of Days\"),",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "",
              "/CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "//    ",
              "  IF((like_to_like=\"ETD\"), ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "        ",
              "        /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]), 'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "        ",
              "        ))",
              "        ",
              "//     IF ((like_to_like=\"Same # Of Days\"),",
              "//  CALCULATE(",
              "//     SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation]))",
              "",
              "//     /   ",
              "//     CALCULATE(",
              "//         DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "//         'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation])",
              "",
              "// )/CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation])),",
              "// //    ",
              "//   IF((like_to_like=\"ETD\"), ",
              "//  CALCULATE(",
              "//     SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation]))",
              "//     /   ",
              "//     CALCULATE(",
              "//         DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "//         'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation]))",
              "        ",
              "//         /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]), 'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,REMOVEFILTERS('Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[NewLocation]))",
              "        ",
              "//         ))",
              "        "
            ],
            "lineageTag": "f33ae86b-52c6-4267-a968-5d192bceadf8"
          },
          {
            "name": "AVG Footfall_per_m2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "",
              "IF ((like_to_like=\"Same # Of Days\"),",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))",
              "",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID])",
              "",
              ")/CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))                /",
              "        CALCULATE(",
              "            MIN('Pavilion Wise Details'[Pavilion_Size]),",
              "            'Pavilion Wise Details'[Season_ID]=compare,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))",
              "            ,",
              "//    ",
              "  IF((like_to_like=\"ETD\"), ",
              " CALCULATE(",
              "    SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))",
              "    /   ",
              "    CALCULATE(",
              "        DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))",
              "        ",
              "        /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]), 'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))                /",
              "        CALCULATE(",
              "            MIN('Pavilion Wise Details'[Pavilion_Size]),",
              "            'Pavilion Wise Details'[Season_ID]=compare,ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID]))",
              "        ",
              "        ))"
            ],
            "lineageTag": "b0c03878-a3d5-4cda-a865-b40c2c817b1d"
          },
          {
            "name": "test",
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),Filter('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason))",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),Filter('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason))",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),Filter('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Season_ID]=compare))",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),Filter('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Season_ID]=compare))",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN \"selectedseason\"&selectedseason&\"compare\"&compare&\"selected_park_days\"&selected_park_days&\"compare_park_days\"&compare_park_days",
              "",
              "//     IF ((like_to_like=\"Same # Of Days\"),",
              "//  CALCULATE(",
              "//     SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "",
              "//     /   ",
              "//     CALCULATE(",
              "//         DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "//         'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date",
              "",
              "// )/CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=compare,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//     'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date),",
              "// //    ",
              "//   IF((like_to_like=\"ETD\"), ",
              "//  CALCULATE(",
              "//     SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "//     /   ",
              "//     CALCULATE(",
              "//         DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),",
              "//         'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "        ",
              "//         /CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]))",
              "        ",
              "//         ))",
              "        "
            ],
            "lineageTag": "58a1eb7a-62e6-44b1-9ac5-b54dfaeb9a10"
          },
          {
            "name": "S27 current vs s26 footfall vs goal %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR precentage= 'Footfall Measures'[S27 park footfall] /'Footfall Measures'[S26 park footfall]",
              "Return precentage-1",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "45ada396-f7be-4dc1-9a04-c257aa21d87e"
          },
          {
            "name": "S27 running vs S26 footfall vs goal %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "'Footfall Measures'[S27 park footfall] ",
              "/",
              "'Footfall Measures'[S26 park footfall max] ",
              "",
              ""
            ],
            "lineageTag": "c3a360ce-05d9-4415-8daf-f7d2687a7c1d"
          },
          {
            "name": "Plotting_Ticketssold_compared_season_guestcounts",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              " ",
              "RETURN ",
              "",
              "IF( ",
              "  (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('GuestCounts'[Daily ticket sales]),'GuestCounts'[Season_ID]=compare ,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('GuestCounts'[Daily ticket sales]),'GuestCounts'[Season_ID]=compare)   ",
              ")"
            ],
            "lineageTag": "db68b7a2-707d-48b0-a51d-9d27e8d1fd95"
          }
        ],
        "partitions": [
          {
            "name": "Footfall Measures-c13dbb1b-0396-41a8-ad07-8d97177a702d",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Visitation Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "966bc2b2-b50d-49d0-a35a-b22f459518d0",
        "measures": [
          {
            "name": "Park_Visitation_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "//Entire park footfall",
              "// VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag]),'GuestCounts'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag]),'GuestCounts'[Season_id]=compare)",
              "",
              "// RETURN",
              "",
              "// /*",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "//     CALCULATE(SUM('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=compare,'Pav Sensor + Park Footfall'[day_num_tag]<=selected_park_days,ALL()),",
              "//      CALCULATE(AVERAGE('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "// )",
              "// */",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "RETURN ",
              "",
              "IF (avg_sum = \"SUM\",",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag_compare,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag_compare,ALL())),",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALL())),",
              "",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag_compare,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag_compare,ALL())),",
              "CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALL()))",
              "",
              "",
              "",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "//     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag]<=selected_park_days,ALL()),",
              "//     IF(",
              "//     AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "//      CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag]<=selected_park_days,ALL()),",
              "//      IF(",
              "//         AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "//         CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,ALL()),",
              "//         IF(",
              "//         AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "//             CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,ALL()),",
              "//           IF(",
              "//                 AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "//                 CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag]<=selected_park_days,ALL()),  ",
              "//                  IF(",
              "//                             AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "//                             CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,ALL()),",
              "//                              BLANK()",
              "     ",
              "// )",
              "//           )",
              "//         )",
              "//      )",
              "//     )",
              "// )",
              ")"
            ],
            "lineageTag": "7170bb22-366c-4852-84df-a1aecbcbe2a4"
          },
          {
            "name": "Park_Visitation_selected_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "//Entire park footfall",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "VAR avg_sum=SELECTEDVALUE('Avg vs Sum'[Value])",
              "RETURN",
              "IF (avg_sum = \"SUM\",",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag,ALL())),",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALL())),",
              "",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag,ALL())),",
              "CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALL()))",
              "",
              "",
              "// VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "// VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag]),'GuestCounts'[Season_id]=selectedseason)",
              "",
              "// RETURN ",
              "// CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,ALL())",
              "",
              "",
              "// VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag]),'GuestCounts'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag]),'GuestCounts'[Season_id]=compare)",
              "",
              "// RETURN",
              "// VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "//     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag]<=compare_park_days,ALL()),",
              "//     IF(",
              "//     AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "//      CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag]<=compare_park_days,ALL()),",
              "//      IF(",
              "//         AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "//         CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,ALL()),",
              "//         IF(",
              "//         AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "//             CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,ALL()),",
              "//           IF(",
              "//                 AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "//                 CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag]<=compare_park_days,ALL()),  ",
              "//                  IF(",
              "//                             AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "//                             CALCULATE(AVERAGE('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,ALL()),",
              "//                              BLANK()",
              "     ",
              "// )",
              "//           )",
              "//         )",
              "//      )",
              "//     )",
              "// )",
              ")"
            ],
            "lineageTag": "e65fa9de-8a18-42bc-b8fc-bdf115de9b5c"
          },
          {
            "name": "Pavilion_Visitation_%_compared_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "RETURN",
              "/*",
              "IF( ",
              "    AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=VALUE(compare),'Pav Sensor + Park Footfall'[day_num_tag]<=selected_park_days)/CALCULATE(SUM('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=VALUE(compare),'Pav Sensor + Park Footfall'[day_num_tag]<=selected_park_days,ALL('Pav Sensor + Park Footfall')),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=compare)/CALCULATE(SUM('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=compare,ALL('Pav Sensor + Park Footfall'))",
              ") ",
              "*/",
              "// CALCULATE('Pav Sensor + Park Footfall'[Footfall_pav_compared_season]/'Pav Sensor + Park Footfall'[Park_Visitation_compared_season])",
              "CALCULATE('Footfall Measures'[Pavilion_Footfall_compared_season]/'Visitation Measures'[Park_Visitation_compared_season])"
            ],
            "lineageTag": "704c466d-16ae-440b-94a9-e9d504af6465"
          },
          {
            "name": "Avg_No_Of_Pav_Visited_comparedseason",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Return",
              "  ",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date )",
              "    / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "",
              "",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "    / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=compare_park_days ,'GuestCounts'[day_num_tag_shifted]>=compare_park_days_min)",
              ")",
              "",
              "",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days<=compare_park_days),",
              "",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "//     / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag]<=selected_park_days ),",
              "",
              "",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "//     / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare)",
              "// "
            ],
            "lineageTag": "e2223a12-c2db-4400-818e-bd178993b545"
          },
          {
            "name": "Avg_No_Of_Pav_Visited_selectedseason",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN   ",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date ),",
              "",
              "",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "    / CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=selected_park_days,'GuestCounts'[day_num_tag_shifted]>=selected_park_days_min)",
              ")",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries])/SUM('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days ),",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries])/SUM('ParkFootfallByDate'[Park Footfall]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason)   ",
              "// )",
              ""
            ],
            "lineageTag": "04676df4-c7ae-4c2f-869f-62c6bcb46307"
          },
          {
            "name": "Pavilion_Visitation_%_selected_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall'[day_num_tag]),'Pav Sensor + Park Footfall'[Season_id]=compare)",
              "",
              "RETURN",
              "CALCULATE('Footfall Measures'[Pavilion_Footfall_selected season_map]/'Visitation Measures'[Park_Visitation_selected_season])"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "f065a0c7-3a5d-4eb4-9b5a-85f8c9c5a387"
          },
          {
            "name": "Pavilion Footfall Penetration Selected Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "RETURN ",
              "",
              "",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag)),",
              "",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6f0ef07c-cb6c-4ee3-a690-dbb16f36e20b"
          },
          {
            "name": "Pavilion Footfall Penetration Compared Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])//  SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "RETURN ",
              "",
              "",
              "IF(like_to_like=\"ETD\",(",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_day_num_tag_compare,'GuestCounts'[day_num_tag_shifted]>=min_day_num_tag_compare)),",
              "",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date))",
              "",
              "",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "// VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "// RETURN ",
              "// // CALCULATE('Footfall Measures'[Pavilion_Footfall_selected season_map]/'Visitation Measures'[Park_Visitation_selected_season])",
              "// CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "// /",
              "// CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag]<=max_day_num_tag,'GuestCounts'[day_num_tag]>=min_day_num_tag,ALL()),ALL('Pav Sensor + Park Footfall 2'[Season_id]),ALL('Pav Sensor + Park Footfall 2'[Season_id]),ALLEXCEPT('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[day_num_tag_shifted],'Pav Sensor + Park Footfall 2'[Month],'Pav Sensor + Park Footfall 2'[new_week_num],'Pav Sensor + Park Footfall 2'[WeekdayNum],'Pav Sensor + Park Footfall 2'[Location_type],'Pav Sensor + Park Footfall 2'[Season_ID])"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "80a737f9-5ce2-42f8-b2b2-7d6d138d5bb0"
          },
          {
            "name": "Footfall Penetration Change %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Visitation Measures'[Pavilion Footfall Penetration Selected Season]-'Visitation Measures'[Pavilion Footfall Penetration Compared Season])/'Visitation Measures'[Pavilion Footfall Penetration Compared Season],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "a4045606-5140-4d61-9a70-36cb6a268049"
          },
          {
            "name": "S26 Pavilion Footfall Penetration Compared",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "RETURN ",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\")",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALL())",
              "",
              "/",
              "(CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare,     ",
              "    'Pav Sensor + Park Footfall 2'[LocationInS27]=1,'Pav Sensor + Park Footfall 2'[LocationInS26]=1,",
              "       'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "        )",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "3f05265a-41d2-4c70-ae0a-e286cfcaa633"
          },
          {
            "name": "S27 Pavilion Footfall Penetration Selected Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "// VAR min_date=MAX(min_day_num_tag,  IF(min_day_num_tag_compare=Blank(),0,min_day_num_tag))",
              "// VAR max_date=MIN(max_day_num_tag, IF(max_day_num_tag_compare=Blank(),0,max_day_num_tag_compare))",
              "",
              "",
              "Return ",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,      ",
              "  'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "        'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\")",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),",
              "'GuestCounts'[Season_id]=selectedseason,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date,ALL())",
              "/",
              "// (CALCULATE(",
              "//     DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "//     'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,     ",
              "//        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "// -",
              "//    CALCULATE( DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "//     'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",'Pav Sensor + Park Footfall 2'[NewLocation]=1,",
              "//     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,     ",
              "//        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "//         'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date))",
              "CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",",
              "    'Pav Sensor + Park Footfall 2'[LocationInS26]=1,",
              "        'Pav Sensor + Park Footfall 2'[LocationInS27]=1,",
              "",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,     ",
              "       'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "c072e063-a512-4b68-8fae-8951103071d5"
          },
          {
            "name": "S26 Avg_No_Of_Pav_Visited_comparedseason",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason=27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Return",
              "  ",
              "",
              "   ( CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date ))",
              "    /      ",
              "     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_id]=compare && 'GuestCounts'[day_num_tag_shifted]<=max_date && 'GuestCounts'[day_num_tag_shifted]>=min_date))",
              ""
            ],
            "lineageTag": "f6c3e89c-18d0-41a0-95ce-55b4a1347360"
          },
          {
            "name": "S27 Avg_No_Of_Pav_Visited_selectedseason",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN   ",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "    /     ",
              "     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_id]=selectedseason && 'GuestCounts'[day_num_tag_shifted]<=max_date && 'GuestCounts'[day_num_tag_shifted]>=min_date))",
              ""
            ],
            "lineageTag": "e78a1b05-19c7-4ef6-a4e3-857d2ff58aaa"
          },
          {
            "name": "S27 vs S26 Footfall Penetration Change %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Visitation Measures'[S27 Pavilion Footfall Penetration Selected Season]-'Visitation Measures'[S26 Pavilion Footfall Penetration Compared])/'Visitation Measures'[S26 Pavilion Footfall Penetration Compared],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6a8578bc-97f5-4118-9995-307bc106949e"
          },
          {
            "name": "Pavilion avg Footfall Penetration Compared",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "",
              "RETURN",
              "",
              "",
              "IF(like_to_like=\"ETD\",CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "Filter('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Season_ID]=compare&&'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\"))",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare)",
              "",
              "/",
              "(CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),Filter('Pav Sensor + Park Footfall 2',",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\"&&",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare))",
              "        )",
              ",",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "Filter('Pav Sensor + Park Footfall 2',",
              "'Pav Sensor + Park Footfall 2'[Season_ID]=compare&&        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date&&",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date&&'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\"))",
              "/",
              "// CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_id]=compare&&'GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date))",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "/",
              "(CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),Filter('Pav Sensor + Park Footfall 2',",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\"&&",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=compare&&",
              "       'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date&&",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date))",
              "        )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "bf151821-db96-4dc2-b29d-a2b654327110"
          },
          {
            "name": "Pavilion avg Footfall Penetration Selected",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_day_num_tag_compare=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR min_day_num_tag_compare=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "VAR max_date=Min(max_day_num_tag,max_day_num_tag_compare)",
              "VAR min_date=MAX(min_day_num_tag,min_day_num_tag_compare)",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "",
              "RETURN IF(like_to_like=\"ETD\",CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\")",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason)",
              "",
              "/",
              "(CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "        )",
              ",",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\")",
              "/",
              "//CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_id]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "/",
              "(CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "    'Pav Sensor + Park Footfall 2'[Location_type]=\"Pavilion\",",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "       'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "        )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "1f939e4f-f1eb-40ef-ab0d-6cf172dad415"
          },
          {
            "name": "S27 test",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN   ",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "     / ",
              "     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_id]=selectedseason && 'GuestCounts'[day_num_tag_shifted]<=max_date && 'GuestCounts'[day_num_tag_shifted]>=min_date))",
              ""
            ],
            "lineageTag": "d5e5486f-e18a-4150-8d0c-a39814ac136b"
          },
          {
            "name": "S27 vs S26 Footfall Penetration % diff",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('Visitation Measures'[S27 Pavilion Footfall Penetration Selected Season]-'Visitation Measures'[S26 Pavilion Footfall Penetration Compared]),0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "3ce370fa-1c5b-427a-820d-f1d8d380bba8"
          },
          {
            "name": "S27 location Penetration Selected Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "//Percentage of entire park footfall going into any of the pavilions ",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR max_day_num_tag=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR min_day_num_tag=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR max_date=max_day_num_tag",
              "VAR min_date=min_day_num_tag",
              "",
              "// VAR min_date=MAX(min_day_num_tag,  IF(min_day_num_tag_compare=Blank(),0,min_day_num_tag))",
              "// VAR max_date=MIN(max_day_num_tag, IF(max_day_num_tag_compare=Blank(),0,max_day_num_tag_compare))",
              "",
              "",
              "Return ",
              "CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,      ",
              "  'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)",
              "/",
              "CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),",
              "'GuestCounts'[Season_id]=selectedseason,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "/",
              "",
              "CALCULATE(",
              "    DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[Location]),",
              "        'Pav Sensor + Park Footfall 2'[LocationInS27]=1,",
              "    'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,     ",
              "       'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date)"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6bc8ce09-ea7a-4c39-9d89-e3be10222d09"
          }
        ],
        "partitions": [
          {
            "name": "Visitation Measures-c6360ca3-1b60-49c2-831e-e1c121f39fd9",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Demographics Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "18b57027-7425-4003-b716-8a0f0ea07606",
        "measures": [
          {
            "name": "Adults_compared_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    ",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=min_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=max_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")/(CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=min_date,'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=max_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")),",
              "",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")/(CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\"))",
              ")",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "38bc6c29-1c75-4637-acdc-1666b2adc48c"
          },
          {
            "name": "Adults_selected_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "",
              "    CALCULATE(",
              "        SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "        'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")/(",
              "            CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "            'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(",
              "                SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "                'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "      'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "                'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")),",
              "",
              "",
              "    CALCULATE(",
              "        SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")/(CALCULATE(",
              "            SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "            'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(",
              "                SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "                'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "                'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\"))",
              ")",
              "",
              "",
              "",
              "/*",
              "IF( ",
              "    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Sum\"),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "    IF(",
              "    AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Sum\"),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall')),",
              "     IF(",
              "        AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),  ",
              "        CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "        IF(",
              "            AND(AND(like_to_like=\"Same # Of Days\",selected_park_days<compare_park_days),avg_sum=\"Avg\"),  ",
              "            CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "            IF(",
              "                AND(AND(like_to_like=\"Same # Of Days\",selected_park_days>=compare_park_days),avg_sum=\"Avg\"),",
              "                CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,'Pav Sensor + Park Footfall'[day_num_tag]<=compare_park_days,ALL('Pav Sensor + Park Footfall')),",
              "                        IF(",
              "                            AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "                            CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall'),'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")/CALCULATE(AVERAGE('Pav Sensor + Park Footfall'[Total_Entries]),'Pav Sensor + Park Footfall'[Season_id]=selectedseason,ALL('Pav Sensor + Park Footfall')),",
              "                             BLANK()",
              ")",
              ")))))",
              "*/",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6fbcbe1d-62bf-4cd0-b1e2-3dce923b812e"
          },
          {
            "name": "Kids_compared_season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,      'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")/(CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,      'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")+CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")),",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")/(CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")+CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare,'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\"))",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "3f45650e-c0f6-4ae4-85d5-e33a287b59d4"
          },
          {
            "name": "Kids_selectedseason",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "",
              "    CALCULATE(",
              "        SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "",
              "      'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "        'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")/(",
              "            CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "",
              "      'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "            'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(",
              "                SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "                'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]<=max_date,",
              "        'Pav Sensor + Park Footfall 2'[day_num_tag_shifted]>=min_date,",
              "                'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")),",
              "",
              "",
              "    CALCULATE(",
              "        SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "        'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")/(CALCULATE(",
              "            SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "            'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "            'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")+CALCULATE(",
              "                SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "                'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "                'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\"))",
              ")",
              "",
              "// VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "// VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "// VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "// VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "// VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "// RETURN",
              "",
              "// IF( ",
              "//     AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//         CALCULATE(",
              "//             SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//             'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//             'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days,",
              "//             'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")",
              "//             /",
              "//             (",
              "//                 CALCULATE(",
              "//                     SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//                     'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//                     'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days,",
              "//                     'Pav Sensor + Park Footfall 2'[Sensor]=\"ADULT\")",
              "//                     +",
              "//                     CALCULATE(",
              "//                         SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//                         'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//                         'Pav Sensor + Park Footfall 2'[day_num_tag]<=compare_park_days,",
              "//                         'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")),",
              "//     CALCULATE(",
              "//         SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//         'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//         'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\")",
              "//         /(",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),",
              "//             'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//             'Pav Sensor + Park Footfall'[Sensor]=\"ADULT\")",
              "//             +",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall'[Total_Entries]),",
              "//             'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,",
              "//             'Pav Sensor + Park Footfall 2'[Sensor]=\"CHILD\"))",
              "// )"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "a819a9cf-d61e-4e68-b460-deb748cc3e8b"
          }
        ],
        "partitions": [
          {
            "name": "Demographics Measures-5ae77333-b816-4684-804b-61d4e6073038",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Display Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "6302671c-d4a2-4080-adf9-f4952ba7af80",
        "measures": [
          {
            "name": "Data Refresh Details & Availability",
            "expression": [
              "",
              "\tVAR PeopleCountRefresh =",
              " //FORMAT(Max('Pav Sensor + Park Footfall 2'[Operation_Date]),\"D-MMM-YY\")",
              "    FORMAT(CALCULATE(Max('Pav Sensor + Park Footfall 2'[Operation_Date]),FILTER('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Total_Entries]>0 && 'Pav Sensor + Park Footfall 2'[Operation_Date] <today()),ALL()),\"D-MMM-YY\") ",
              "\tVAR DwellTimeRefresh = FORMAT(CALCULATE(Max('DwellByPavAndDate_alllocations'[Operation_Date]),ALL()),\"D-MMM-YY\") ",
              "/*",
              "VAR AreaDistanceOfPavRefresh = FORMAT(CALCULATE(Max('Area]),FILTER('CC Arena','CC Arena'[Data Updated on]<today()),ALL('CC Arena')),\"D-MMM-YY\")  ",
              "VAR vMPN = FORMAT(CALCULATE(Max(MPN_DataRefresh[last_updated_date])),\"D-MMM-YY\") ",
              "VAR vCCA_dataavl = FORMAT(CALCULATE(Max('CC Arena'[Date]),ALL('CC Arena')),\"D-MMM-YY\")  ",
              "",
              "VAR vAIN = \"Not Available\"",
              "*/   ",
              "RETURN",
              "\"<table style='width:100%'>",
              "  <tr><th></th><th>Last Refresh Date</th><th>Data Source</th><th>Data Availability</th></tr>\" &",
              "  \"<tr><td>People Counting Sensors</td>\" & \"<td>\" & \"<b>\" & PeopleCountRefresh &  \"</b>\" & \"</td>\"& \"<td> Database (Daily Refresh) </td>\"& \"<td>\" & \"<b>\" & PeopleCountRefresh  &  \"</b>\" & \"</td>\"& \"</tr>\"  & ",
              " \"<tr><td>Wifi Dwell Time</td>\" & \"<td>\" & \"<b>\" & DwellTimeRefresh &  \"</b>\" & \"</td>\"& \"<td> Database (Daily Refresh)  </td>\"& \"<td>\" & \"<b>\" & DwellTimeRefresh &  \"</b>\" & \"</td>\"& \"</tr>\"  & ",
              "\"</table>\""
            ],
            "lineageTag": "00a8a408-5312-4a7d-8def-2e9d8dafa7dc"
          },
          {
            "name": "Event_Measure",
            "expression": [
              "",
              "SWITCH(",
              "MAX('Pav Sensor + Park Footfall 2'[Operation_Date]),",
              "DATE(2016,12,31),\"NYE's Eve\",",
              "DATE(2017,12,31),\"NYE's Eve\",",
              "DATE(2018,12,31),\"NYE's Eve\",",
              "DATE(2019,12,31),\"NYE's Eve\",",
              "DATE(2020,12,31),\"NYE's Eve\",",
              "DATE(2021,12,31),\"NYE's Eve\",",
              "DATE(2022,12,31),\"NYE's Eve\",",
              "DATE(2016,1,1),\"NYE\",",
              "DATE(2017,1,1),\"NYE\",",
              "DATE(2018,1,1),\"NYE\",",
              "DATE(2019,1,1),\"NYE\",",
              "DATE(2020,1,1),\"NYE\",",
              "DATE(2021,1,1),\"NYE\",",
              "DATE(2022,1,1),\"NYE\",",
              "DATE(2016,12,1),\"National Day\",",
              "DATE(2017,12,1),\"National Day\",",
              "DATE(2018,12,1),\"National Day\",",
              "DATE(2019,12,1),\"National Day\",",
              "DATE(2020,12,1),\"National Day\",",
              "DATE(2021,12,1),\"National Day\",",
              "DATE(2022,12,1),\"National Day\",",
              "DATE(2016,12,2),\"National Day\",",
              "DATE(2017,12,2),\"National Day\",",
              "DATE(2018,12,2),\"National Day\",",
              "DATE(2019,12,2),\"National Day\",",
              "DATE(2020,12,2),\"National Day\",",
              "DATE(2021,12,2),\"National Day\",",
              "DATE(2022,12,2),\"National Day\",",
              "DATE(2016,12,3),\"National Day\",",
              "DATE(2017,12,3),\"National Day\",",
              "DATE(2018,12,3),\"National Day\",",
              "DATE(2019,12,3),\"National Day\",",
              "DATE(2020,12,3),\"National Day\",",
              "DATE(2021,12,3),\"National Day\",",
              "DATE(2022,12,3),\"National Day\",",
              "DATE(2016,11,30),\"Martyr's Day\",",
              "DATE(2017,11,30),\"Martyr's Day\",",
              "DATE(2018,11,30),\"Martyr's Day\",",
              "DATE(2019,11,30),\"Martyr's Day\",",
              "DATE(2020,11,30),\"Martyr's Day\",",
              "DATE(2021,11,30),\"Martyr's Day\",",
              "DATE(2022,11,30),\"Martyr's Day\",",
              "BLANK())",
              "",
              "// SWITCH(",
              "// VALUE(MAX('Pav Sensor + Park Footfall 2'[Day_Type])),",
              "// \"Tuesday\",\"Family Day\",",
              "// BLANK()",
              "// ),"
            ],
            "lineageTag": "3dcda508-d434-429a-aea2-8385765a8925"
          },
          {
            "name": "Prev Season Msg",
            "expression": [
              "",
              "\tVAR maxSeason = SELECTEDVALUE('Compare with'[Value]) ",
              "\tRETURN",
              "\t\t\"S\" & maxSeason"
            ],
            "lineageTag": "c8e68c97-2fbb-4659-9611-ca4e6c9556bb"
          },
          {
            "name": "Selected_Label",
            "expression": [
              "",
              "VAR selectedseason =  SELECTEDVALUE('Selected Season'[SeasonID])",
              "var output = \"● \"  & selectedseason",
              "return output"
            ],
            "lineageTag": "a9fb47c3-c2b4-4bf3-b747-e818b5b1e14b"
          },
          {
            "name": "Park_Footfall_compared_season_label",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Compare with'[Value])",
              "RETURN",
              "\"S\"&selectedseason & (\" Park Footfall\")"
            ],
            "lineageTag": "e3b16f96-2c6e-4661-bc05-ed39a058b66e"
          },
          {
            "name": "Park_Footfall_selected_season_label",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Season_id])",
              "RETURN",
              "\"S\"&selectedseason & (\" Park Footfall\")"
            ],
            "lineageTag": "09b7befa-aa32-4252-afb9-ccdaf5b9769f"
          },
          {
            "name": "Pav_footfall_compared_label",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Compare with'[Value])",
              "RETURN",
              "\"S\"&selectedseason & \" Pavilion Footfall\""
            ],
            "lineageTag": "824b21d9-a5df-4b85-bee0-88928ed4c464"
          },
          {
            "name": "Pav_footfall_selected_label",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Season_id])",
              "RETURN",
              "\"S\"&selectedseason & \" Pavilion Footfall\""
            ],
            "lineageTag": "56e5225e-d0fd-4a82-8006-b2995a0dde85"
          },
          {
            "name": "Pav_Visitation_compared_label",
            "expression": [
              "",
              "VAR comparedlabel= SELECTEDVALUE('Compare with'[Value])",
              "RETURN",
              "\"S\"&comparedlabel & \" Pavilion Visitation %\""
            ],
            "lineageTag": "88560ab0-0c84-4e4b-9b13-61c574720cc5"
          },
          {
            "name": "Pav_Visitation_selected_label",
            "expression": [
              "",
              "VAR selectedlabel= SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Season_id])",
              "RETURN",
              "\"S\"&selectedlabel & \" Pavilion Visitation %\""
            ],
            "lineageTag": "1f5234f6-90cf-44c6-a85d-7e4af58552fe"
          },
          {
            "name": "Pav_Sensors_Last_Refresh_Msg",
            "expression": [
              "",
              "var selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "var comparedseason = SELECTEDVALUE('Compare with'[Value])",
              "RETURN",
              " \"Data available : \" & FORMAT(CALCULATE(Min('GuestCounts'[Date]),'GuestCounts'[Season_id]=VALUE(comparedseason)),\"D-MMM-YY\")  & \" till \" & FORMAT(CALCULATE(Max('GuestCounts'[Date]),'GuestCounts'[Season_id]=selectedseason),\"D-MMM-YY\")"
            ],
            "lineageTag": "49dcfe9c-168c-426b-bbb0-76073e90d20d"
          },
          {
            "name": "Last_Refresh_Msg",
            "expression": "\"Last Refresh: \" & FORMAT(CALCULATE(Max('Pav Sensor + Park Footfall 2'[Operation_Date])),\"D-MMM-YY\") &UNICHAR(10)& \"Season Day No: \"&CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=27)",
            "lineageTag": "a5985180-c1cb-4beb-96e2-d7a0bf09efdb"
          },
          {
            "name": "Selected Dates",
            "expression": [
              "",
              "VAR selectedseason =",
              "    SELECTEDVALUE ( 'Selected Season'[SeasonID] ) //SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare =",
              "    SELECTEDVALUE ( 'Compare with'[Value] )",
              "VAR like_to_like =",
              "    SELECTEDVALUE ( 'Like to Like'[Value] )",
              "VAR selected_park_days =",
              "    CALCULATE (",
              "        MAX ( 'Pav Sensor + Park Footfall 2'[day_num_tag_shifted] ),",
              "        'Pav Sensor + Park Footfall 2'[Season_id] = selectedseason",
              "    )",
              "VAR compare_park_days =",
              "    CALCULATE (",
              "        MAX ( 'Pav Sensor + Park Footfall 2'[day_num_tag_shifted] ),",
              "        'Pav Sensor + Park Footfall 2'[Season_id] = compare",
              "    )",
              "VAR selected_park_days_min =",
              "    CALCULATE (",
              "        MIN ( 'Pav Sensor + Park Footfall 2'[day_num_tag_shifted] ),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID] = selectedseason",
              "    )",
              "VAR compare_park_days_min =",
              "    CALCULATE (",
              "        MIN ( 'Pav Sensor + Park Footfall 2'[day_num_tag_shifted] ),",
              "        'Pav Sensor + Park Footfall 2'[Season_ID] = compare",
              "    )",
              "VAR min_date =",
              "    MAX ( selected_park_days_min, compare_park_days_min )",
              "VAR max_date =",
              "    IF (",
              "        compare_park_days <> BLANK (),",
              "        MIN ( selected_park_days, compare_park_days ),",
              "        selected_park_days",
              "    )",
              "RETURN",
              "    IF (",
              "        ( like_to_like = \"Same # Of Days\" ),",
              "        \"Compared Period Dates: \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MIN ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = VALUE ( compare ),",
              "                    'GuestCounts'[day_num_tag_shifted] <= max_date,",
              "                    'GuestCounts'[day_num_tag_shifted] >= min_date",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" till \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MAX ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = VALUE ( compare ),",
              "                    'GuestCounts'[day_num_tag_shifted] <= max_date,",
              "                    'GuestCounts'[day_num_tag_shifted] >= min_date",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" Selected Period Dates \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MIN ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = selectedseason,",
              "                    'GuestCounts'[day_num_tag_shifted] <= max_date,",
              "                    'GuestCounts'[day_num_tag_shifted] >= min_date",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" till \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MAX ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = selectedseason,",
              "                    'GuestCounts'[day_num_tag_shifted] <= max_date,",
              "                    'GuestCounts'[day_num_tag_shifted] >= min_date",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ),",
              "        \"Compared Period Dates: \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MIN ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = VALUE ( compare )",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" till \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MAX ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = VALUE ( compare )",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" Selected Period Dates \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MIN ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = selectedseason",
              "                ),",
              "                \"D-MMM-YY\"",
              "            ) & \" till \"",
              "            & FORMAT (",
              "                CALCULATE (",
              "                    MAX ( 'GuestCounts'[Date] ),",
              "                    'GuestCounts'[Season_id] = selectedseason",
              "                ),",
              "                \"D-MMM-YY\"",
              "            )",
              "    )"
            ],
            "lineageTag": "0da9dcb1-ff0f-44b5-b5c0-374a51c07f68"
          },
          {
            "name": "Selected season filter",
            "expression": [
              "",
              "Var selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])",
              "Var compare = SELECTEDVALUE('Compare with'[Value])",
              "Var season=Calculate(DISTINCT('Sales Data all Seasons'[Season_id]))",
              "Return IF(season in{selectedseason}, season )"
            ],
            "formatString": "0",
            "lineageTag": "966590d5-e2e6-4670-8263-0f68a0bf081a"
          },
          {
            "name": "S27 vs S26 MAX_DATE",
            "expression": [
              "",
              "VAR selectedseason=27",
              "VAR compare=26",
              " VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "return max_date",
              ""
            ],
            "formatString": "0",
            "lineageTag": "8e3b083c-ccfb-48eb-a2e4-4f1dfb07b460"
          },
          {
            "name": "Weekday defintion",
            "expression": [
              "",
              "// \"Weekday|  Day before  |  Day After \"& UNICHAR(10)&",
              "// \"  No.  | Weekend Shift| Weekend Shift\"& UNICHAR(10)&",
              "\"______ (No.) Before W/E Shift | After W/E Shift ______     (1) Monday|Tuesday (2)Tuesday|Wednesday (3)Wednesday|Thursday (3)Wednesday|Thursday (4)Thursday|Friday (5)Friday|Saturday (6)Saturday|Sunday (7)Sunday|Monday  \"",
              ""
            ],
            "lineageTag": "2f07020e-3be4-43dd-894b-e552db28333a"
          },
          {
            "name": "New_week",
            "expression": [
              "",
              "IF(Calculate(Min('GuestCounts'[WeekdayNum]),GuestCounts[Season_ID]=27)==1,1,Blank())",
              "//Calculate(Max('GuestCounts'[day_num_tag_shifted]))"
            ],
            "formatString": "0",
            "lineageTag": "c6e24188-baf7-4537-821a-601e4a92b28b"
          },
          {
            "name": "Event",
            "expression": [
              "",
              "IF(OR('Display Measures'[Event selected] <>Blank(), 'Display Measures'[Event compared season] <>Blank()),1,Blank())",
              "",
              "// IF('GuestCounts'[Event Name]<>Blank(),1000,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "3271e07a-24c3-4761-b53a-db6719493361"
          },
          {
            "name": "Special Weather S27",
            "expression": [
              "",
              "IF(Calculate(Min('GuestCounts'[Weather]),GuestCounts[Season_ID]=27)<>Blank(),10000,Blank())",
              "// IF('GuestCounts'[Event Name]<>Blank(),1000,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "2ced5988-a037-4176-9158-5349e7f26f48"
          },
          {
            "name": "Event S27",
            "expression": [
              "",
              "",
              "IF(Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=27)<>Blank()&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=27)<>\"Weekday\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=27)<>\"Weekend\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=27)<>\"Family Day\",1,Blank())",
              "// IF('GuestCounts'[Event Name]<>Blank(),1000,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "0f3bd6cf-9dd3-44c4-8658-9a4e72a7beb2"
          },
          {
            "name": "Event compared season",
            "expression": [
              "",
              "VAR selected=SELECTEDVALUE('Compare with'[Value])",
              "REturn IF(Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>Blank()&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Weekday\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Weekend\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Family Day\",1,Blank())",
              "// IF('GuestCounts'[Event Name]<>Blank(),1000,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "5537cb41-147a-4c38-97d4-98324679bfeb"
          },
          {
            "name": "Event selected",
            "expression": [
              "",
              "VAR selected=SELECTEDVALUE('Selected Season'[SeasonID])",
              "REturn IF(Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>Blank()&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Weekday\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Weekend\"&&Calculate(Min('GuestCounts'[Event]),GuestCounts[Season_ID]=selected)<>\"Family Day\",1,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "de4a3359-e44c-4a78-bd46-440aa8511bf8"
          },
          {
            "name": "Special Weather compared",
            "expression": [
              "",
              "VAR selected = SELECTEDVALUE('Compare with'[Value]  )",
              "Return IF(Calculate(Min('GuestCounts'[Weather]),GuestCounts[Season_ID]=selected)<>Blank(),1,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "8e6d1320-cf5e-4b79-89e5-2d883940c80d"
          },
          {
            "name": "Special Weather selected",
            "expression": [
              "",
              "VAR selected = SELECTEDVALUE('Selected Season'[SeasonID]  )",
              "Return IF(Calculate(Min('GuestCounts'[Weather]),GuestCounts[Season_ID]=selected)<>Blank(),1,Blank())"
            ],
            "formatString": "0",
            "lineageTag": "85336dda-f072-4122-85c3-fbdcaa8fc890"
          },
          {
            "name": "Special Weather",
            "expression": "IF(OR('Display Measures'[Special Weather compared],'Display Measures'[Special Weather selected]),10000,Blank())",
            "formatString": "0",
            "lineageTag": "848970a4-ff85-4e2e-a4c3-b55abb9a7769"
          },
          {
            "name": "Winter Break",
            "expression": "IF(AND(MAX('GuestCounts'[DATE])>DAte(2022,12,11) ,MAX('GuestCounts'[DATE])<DAte(2023,1,2)),20,Blank())//CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]))",
            "formatString": "0",
            "lineageTag": "fb86918c-c2d2-458b-982a-93b42e4b68d0"
          },
          {
            "name": "test2",
            "expression": "Max('Pav Sensor + Park Footfall 2'[Operation_Date])",
            "formatString": "General Date",
            "lineageTag": "fdd8334f-95c7-4677-bbe4-4118a6457e7d"
          }
        ],
        "partitions": [
          {
            "name": "Display Measures-083c5a40-d10b-48f2-843d-d6fa00aad129",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Pavilion Wise Details",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Pavilion_Size",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "62abb46b-5fde-45a1-b310-c5d134922cc2",
            "sourceColumn": "Pavilion_Size",
            "summarizeBy": "none"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8c614989-05e3-44d6-b7fe-0928b677eb75",
            "sourceColumn": "Season_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "53c240d8-ea36-4cbd-b1dc-f7e027e92a86",
            "sourceColumn": "Location_id",
            "summarizeBy": "none"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5e378d04-45c2-47ae-8865-4a4c524ff0a7",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Location Types",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3e4c31f0-85b8-4d9c-9e0d-ed1d055f8e2e",
            "sourceColumn": "Location Types",
            "summarizeBy": "none"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ac84113f-32ed-48a3-b7dc-6cab0d956c08",
            "sourceColumn": "Season+Location ID",
            "summarizeBy": "none"
          },
          {
            "name": "Prev_PavilionSize",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR seasonID= 'Pavilion Wise Details'[Season_ID]",
              "VAR prev_season=seasonID-1",
              "",
              "VAR location= CALCULATE(MAX('Pavilion Wise Details'[Location]),'Pavilion Wise Details'[Season_ID]=seasonID)",
              "VAR prev_season_loc=CALCULATE(MAX('Pavilion Wise Details'[Location]),'Pavilion Wise Details'[Season_ID]=prev_season)",
              "",
              "VAR season_locations=CALCULATETABLE(DISTINCT('Pavilion Wise Details'[Location]),FILTER('Pavilion Wise Details',[Season_ID] = seasonID))",
              "VAR prev_season_locations=CALCULATETABLE(DISTINCT('Pavilion Wise Details'[Location]),FILTER('Pavilion Wise Details',[Season_ID] = prev_season))",
              "",
              "VAR season_areas=CALCULATETABLE(DISTINCT('Pavilion Wise Details'[Pavilion_Size]),FILTER('Pavilion Wise Details',[Season_ID] = seasonID))",
              "VAR prev_season_areas=CALCULATETABLE(DISTINCT('Pavilion Wise Details'[Pavilion_Size]),FILTER('Pavilion Wise Details',[Season_ID] = prev_season))",
              "",
              "RETURN  LOOKUPVALUE('Pavilion Wise Details'[Pavilion_Size],[Location],[Location],[Season_ID],prev_season)",
              "",
              "//CALCULATE(MAX('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=EARLIER('Pavilion Wise Details'[Season_ID],1))",
              "",
              "",
              "// IF (CALCULATE(",
              "//     MIN('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=seasonID,'Pavilion Wise Details'[Location]=location)",
              "//      =",
              "//       CALCULATE(MIN('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]='Pavilion Wise Details'[Location]=prev_season_loc) ,",
              "//       0,1)))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "1cc25018-111b-459f-963f-4286ffa9c2b0",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewArea",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF('Pavilion Wise Details'[Pavilion_Size]<>[Prev_PavilionSize],1,0)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "669698d9-cb4b-4f2b-9fab-557e1f3ec3cc",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "No. of Employees",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f2da0f92-413c-483e-9c34-520abe812ae4",
            "sourceColumn": "No. of Employees",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "fc02e7d0-316d-4a49-8ec1-5033ef8e4668",
        "measures": [
          {
            "name": "Pavilion Size",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "RETURN ",
              " \"S\"&selectedseason &\" pavilion size: \"& CALCULATE(MAX('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=selectedseason) &UNICHAR(10)&\"S\"&compare &\" pavilion size: \"& CALCULATE(MAX('Pavilion Wise Details'[Pavilion_Size]),'Pavilion Wise Details'[Season_ID]=compare)",
              ""
            ],
            "lineageTag": "30c01e2c-af9d-4283-a2a4-3585cf0ef81c"
          },
          {
            "name": "NewArea measure",
            "expression": [
              "",
              "Var selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_ID])",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('Pavilion Wise Details'[Location]),'Pavilion Wise Details'[Season_ID] = selectedseason,'Pavilion Wise Details'[newArea]=1)",
              "RETURN IF(MAX('Pavilion Wise Details'[Location]) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "14532aee-972b-44c4-846a-963586aab662"
          }
        ],
        "partitions": [
          {
            "name": "Pavilion Wise Details-701ee36d-56fe-4901-822a-c05b8d38a09d",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"Pavilion Wise Details.xlsx\")),",
                "    #\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\" = #\"Filtered Rows\"{[Name=\"Pavilion Wise Details.xlsx\",#\"Folder Path\"=\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00. Dashbaords/S27 Dashboards/HOD S27/\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\"),",
                "    Sheet1_Sheet = #\"Imported Excel Workbook\"{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Pavilion_Size\", Int64.Type}, {\"Season_id\", Int64.Type}, {\"Location_id\", type any}, {\"Location\", type text}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Season_id\", \"Season_ID\"}, {\"Location\", \"Location\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Distinct Pav Sensor + Park Footfall",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "163ed073df764e029d4038835e7a1353"
          }
        ],
        "columns": [
          {
            "name": "Column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "IF('Distinct Pav Sensor + Park Footfall'[Location] IN {\"CG\",\"GOW\",\"FAZZA CG\",\"FAZZA GOW\"},\"MAIN GATES\",IF ('Distinct Pav Sensor + Park Footfall'[Location] IN {\"SIDEB-1-ENTRANCE1\"},\"OTHER ENTRANCES\", IF ('Distinct Pav Sensor + Park Footfall'[Location] IN {\"AMERICA-EUROPE(INTERCONNETION)\",\"CWALK-GOW\",\"CWALK-KIDS_THEATRE\"},\"PATHWAY\",IF ('Distinct Pav Sensor + Park Footfall'[Location] IN {\"FUN FAIR\",\"KIOSK-STREET-CANAL\",\"KIOSK-STREET-CULTURALHUB\",\"STUNT ARENA\",\"RIPLEYS\",\"KIDS THEATRE\",\"RAIL MARKET\"},\"PROGRAM\" ,IF('Distinct Pav Sensor + Park Footfall'[Location] IN{\"CAR COUNTING\",\"P1 OCCUPANCY\",\"P2 OCCUPANCY\",\"P3 OCCUPANCY\",\"P5 OCCUPANCY\",\"P6 OCCUPANCY\"},\"PARKING\", \"PAVILION\")))))",
            "isDataTypeInferred": true,
            "lineageTag": "4a8dbbbe-f89a-40fa-9d18-45ec157e72c8",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1b128ebf-8236-4df9-93de-e1b4a0435589",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "bdaba94c-6dab-4cae-841c-657e4ea8965a",
        "partitions": [
          {
            "name": "Distinct Pav Sensor + Park Footfall-7de99349-e393-4772-a522-2db7b8fc049d",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),'Pav Sensor + Park Footfall 2'[Season_id]=25)",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "DwellByPavAndDate_alllocations",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "dataType": "int64",
            "lineageTag": "49aba359-7c52-41e7-b913-e7a66468d675",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "ef7f16c8-ebe2-4579-9e08-4e35567b71a9",
            "sourceColumn": "Operation_Date",
            "summarizeBy": "none"
          },
          {
            "name": "footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "646c7f74-4264-4dad-848d-1255063d83ca",
            "sourceColumn": "footfall",
            "summarizeBy": "sum"
          },
          {
            "name": "dwell(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "451e7d09-fb65-4f6c-9689-eaa11192b185",
            "sourceColumn": "dwell(Minutes)",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "0be33cb1-283f-46f1-8cd9-4a806679a4bc",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7f695cd9-a25e-4bf3-8b48-20adf43cdca1",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "2a40c475-9437-4dbf-be6e-68c70b9d0f6b",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "sum"
          },
          {
            "name": "Season+Location ID2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "//  Var lookedupval= ",
              "//  LOOKUPVALUE (",
              "// 'Table'[Season+Location id],",
              "//    'Table' [location], [Location],",
              "//     'Table'[Season_id], [Season_id]",
              "// )",
              "",
              " Var lookedupval= ",
              " LOOKUPVALUE (",
              "'Pavilion Wise Details'[Season+Location ID],",
              "   'Pavilion Wise Details'[Location], [Location],",
              "    'Pavilion Wise Details'[Season_ID], [Season_id]",
              ")",
              "",
              "Return IF (lookedupval <> Blank(), lookedupval,FORMAT(CONCATENATE('DwellByPavAndDate_alllocations'[Season_id],\"XXX\"),\"FIXED\"))",
              "// CALCULATE (",
              "//    MAX ( 'Table'[Season+Location ID]),",
              "//     FILTER (",
              "//         'Table',",
              "//        'Table' [location] =  [Location]",
              "//         && 'Table'[Season_ID] = [Season_id]",
              "//     )",
              "// ))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "2c1bc82e-b5fe-4506-a346-9debab5e87cd",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              " IF(SEARCH(\"office\",[location],1,0)>0 ,\"OTHER\",",
              "  IF(SEARCH(\"centre\",[location],1,0) ,\"OTHER\",",
              "    IF(SEARCH(\"hub\",[location],1,0) ,\"OTHER\",",
              "    IF(SEARCH(\"authorities\",[location],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"center\",[location],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"security\",[location],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"workshop\",[location],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"point\",[location],1,0) ,\"OTHER\",",
              "  IF(SEARCH(\"entrance\",[location],1,0) ,\"OTHER\",",
              "",
              "  IF(SEARCH(\"toilet\",[location],1,0) ,\"TOILET\",",
              "  IF(SEARCH(\"parking\",[location],1,0) ,\"PARKING\",",
              "  IF(SEARCH(\"common\",[location],1,0) ,\"PATHWAY\",",
              "",
              "  IF(SEARCH(\"to\",[location],1,0) ,\"PATHWAY\",",
              "    IF(SEARCH(\"stunt arena and c stage\",[location],1,0) ,\"PATHWAY\",",
              "  IF(SEARCH(\"repley\",[location],1,0) ,\"ATTRACTION\",",
              "  IF(SEARCH(\"ripley\",[location],1,0) ,\"ATTRACTION\",",
              "  IF(SEARCH(\"market\",[location],1,0) ,\"ATTRACTION\",",
              "",
              "  IF(SEARCH(\"street\",[location],1,0) ,\"ATTRACTION\",",
              "  IF(SEARCH(\"avenue\",[location],1,0) ,\"PATHWAY\",",
              "  IF(SEARCH(\"gate\",[location],1,0) ,\"MAIN GATES\",",
              "    IF(SEARCH(\"global village dubai\",[location],1,0) ,\"TOTAL\",",
              "",
              "  IF ([location] IN {\"CARNAVAL\",\"KIOSK-STREET-CANAL\",\"KIOSK-STREET-CULTURALHUB\",\"STUNT AREA\",\"RIPLEYS\",\"KIDS THEATRE\",\"RAIL MARKET\",\"STAGE AREA\",\"CHAT BAZAR\",\"ROAD OF ASIA\"},\"ATTRACTION\" ,",
              "  \"PAVILION\"))))))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "8e0c3a26-6e9b-4085-86c4-bf40f64708c4",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "NewLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR seasonID= 'DwellByPavAndDate_alllocations'[Season_id]",
              "VAR prev_season=seasonID-1",
              "VAR season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = seasonID))",
              "VAR prev_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = prev_season))",
              "RETURN IF('DwellByPavAndDate_alllocations'[Location] in prev_season_locations ,0,1)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "6fa0b7a3-4f08-48fe-bbcd-efb38d8f077e",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "ContinuedLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "--A location in a specific season is found in the next season",
              "VAR season= 'DwellByPavAndDate_alllocations'[Season_id]",
              "VAR coming_season=MIN(season+1, MAX(DwellByPavAndDate_alllocations[Season_ID]))",
              "",
              "VAR season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = season))",
              "VAR next_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = coming_season))",
              "RETURN IF('DwellByPavAndDate_alllocations'[Location] in next_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "dabe8bcd-8af7-4129-9b46-955f3d67cd66",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "InSelected&ComparedSeasons",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR location = 'DwellByPavAndDate_alllocations'[location]",
              "",
              "VAR season= 'DwellByPavAndDate_alllocations'[Season_id]",
              "VAR coming_season=MIN(season+1, MAX(DwellByPavAndDate_alllocations[Season_ID]))",
              "VAR prev_season=MAX(season-1, MIN(DwellByPavAndDate_alllocations[Season_ID]))",
              "",
              "VAR current_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = season))",
              "VAR comming_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = coming_season))",
              "VAR prev_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = prev_season))",
              "",
              "RETURN IF(AND('DwellByPavAndDate_alllocations'[Location] in prev_season_locations, 'DwellByPavAndDate_alllocations'[Location] in current_season_locations),1,0)",
              "",
              "",
              "// VAR filtered_table1=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = compare ))",
              "// VAR filtered_table2=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_id] = selectedseason ))",
              "",
              "// RETURN IF(filtered_table1 <> Blank() & filtered_table2 <> Blank(),1,0)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ea2f2bc7-34be-41e9-820d-68fcbec52ea7",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "ComparedSeason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "RETURN compare ",
              "",
              "--IF('DwellByPavAndDate_alllocations'[Season_ID] = compare ,1,0)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "12559996-e21a-49b3-af3d-3486a98a85e5",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "SelectedSeason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Season_id])",
              "RETURN IF('DwellByPavAndDate_alllocations'[Season_ID] = selectedseason ,1,0)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "25bf311c-898e-44f8-8663-510f01291f20",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('DwellByPavAndDate_alllocations'[Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "5201dbf1-773b-47fa-8287-4dec1aa960fd",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('DwellByPavAndDate_alllocations'[Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "c727afd9-2364-48c6-8474-d69707b52e76",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[day_num_tag_shifted],GuestCounts[Date],[Operation_Date])",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e7a1fe82-1446-4c06-aeee-c7cb9c8e45a2",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Operation_Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Saturday\" || FORMAT([Operation_Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Friday\" || FORMAT([Operation_Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "5f889bc3-fd07-4e08-a3ee-a0c8647487b1",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Operation_Date]>=DATE(2022,1,1), WEEKDAY([Operation_Date]-2) , WEEKDAY([Operation_Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "40c7a28b-9091-472d-9dbf-38497e1d5427",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "IF([Operation_Date]<=DATE(2022,1,1),IF('DwellByPavAndDate_alllocations'[WeekdayNum]=1  ,'DwellByPavAndDate_alllocations'[week_num]+1,'DwellByPavAndDate_alllocations'[week_num]),'DwellByPavAndDate_alllocations'[week_num])",
            "isDataTypeInferred": true,
            "lineageTag": "3994e798-d7d7-4d76-945e-a7b9af227dd5",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('GuestCounts'[Date],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([Operation_Date],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([Operation_Date],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([Operation_Date] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[Operation_Date]),",
              "                        IF (",
              "                            FORMAT([Operation_Date],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [Operation_Date] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",'DwellByPavAndDate_alllocations'[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))           ",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "bf659047-a658-4428-b530-09240a543acd",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "FORMAT([Operation_Date],\"dddd\")",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "37371be7-ba59-497e-a33d-acf3a18fea8c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\" ,\"NYE\",",
              "   IF( [Event] =\"National Day\" ,\"National Day\",",
              "IF([Operation_Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            "
            ],
            "isDataTypeInferred": true,
            "lineageTag": "5c0ed0ea-20ad-420a-a65d-2ced877fb3e9",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1a329688-6213-4f7f-a6fc-5ca401a9cb1f",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "76691e2e-7281-425c-9b93-50d82636b946",
        "measures": [
          {
            "name": "Avg_Dwelltime_compared_season2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=compare,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              "        //ALLEXCEPT('DwellByPavAndDate_alllocations','DwellByPavAndDate_alllocations'[day_num_tag_shifted])",
              "        ),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              ")   "
            ],
            "lineageTag": "ff4a5123-cf52-4d54-87e0-8f0dace211d5"
          },
          {
            "name": "Avg_Dwelltime_selectedseason2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              ")"
            ],
            "lineageTag": "3451f83f-c6bc-4c38-a361-a8e6426a59d1"
          },
          {
            "name": "S27 Avg_Dwelltime_selectedseason2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "CALCULATE(AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              ")"
            ],
            "lineageTag": "8d53c609-ed54-42ad-b94a-eb8963980206"
          },
          {
            "name": "S26 Avg_Dwelltime_compared_season2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "CALCULATE(AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),'DwellByPavAndDate_alllocations'[Season_id]=compare,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              ")"
            ],
            "lineageTag": "3b39936f-2604-4d6c-b8d6-7144d552be1b"
          },
          {
            "name": "Pavilion_Dwell_Change_%",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('DwellByPavAndDate_alllocations'[Avg_Dwelltime_selectedseason2]-'DwellByPavAndDate_alllocations'[Avg_Dwelltime_compared_season2])/'DwellByPavAndDate_alllocations'[Avg_Dwelltime_compared_season2],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "e543e565-7126-4011-a582-a79c896fe379"
          },
          {
            "name": "S26 MAx_Dwelltime_compared_season2",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "CALCULATE(MAX('DwellByPavAndDate_alllocations'[dwell(Minutes)]),'DwellByPavAndDate_alllocations'[Season_id]=compare,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "3ef751fe-f42c-4205-8f00-ffaa56f2452c"
          },
          {
            "name": "Avg_Dwelltime_compared_season3",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),FILTER('DwellByPavAndDate_alllocations'",
              "        ,'DwellByPavAndDate_alllocations'[Season_id]=compare&&'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date&&'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date)),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[dwell(Minutes)]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              ")   ",
              "",
              "",
              "// Filter('DwellByPavAndDate_alllocations'",
              "//         'DwellByPavAndDate_alllocations'[Season_id]=compare&&",
              "//         'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date&&",
              "//         'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              "//         )"
            ],
            "lineageTag": "f2273036-bc2e-4bdb-ab1f-4929575c7902"
          },
          {
            "name": "Wifi Penetration Compared Season by location",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('DwellByPavAndDate_alllocations'[footfall]),'DwellByPavAndDate_alllocations'[Season_ID]=compare,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)",
              "    /",
              "    Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "",
              "    CALCULATE(SUM('DwellByPavAndDate_alllocations'[footfall]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)  ",
              "     /",
              "     Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare)",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "33585201-7bdc-4e1f-be1b-7b684aee410d"
          },
          {
            "name": "Wifi Penetration Selected Season by location",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('DwellByPavAndDate_alllocations'[footfall]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason,'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)",
              "    /",
              "    Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "",
              "    CALCULATE(SUM('DwellByPavAndDate_alllocations'[footfall]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)  ",
              "     /",
              "     Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "0b1be684-5b71-4606-9a1e-5ab94571fcff"
          },
          {
            "name": "InSelectedSeason dwell",
            "expression": [
              "",
              "Var selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_ID])",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_ID] = selectedseason))",
              "RETURN IF(MAX('DwellByPavAndDate_alllocations'[Location]) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "c82d21d9-5f97-400d-a833-95504c91e781"
          },
          {
            "name": "InComparedSeason DWELL",
            "expression": [
              "",
              "Var compared_season=SELECTEDVALUE('Compare with'[Value])",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('DwellByPavAndDate_alllocations'[Location]),FILTER('DwellByPavAndDate_alllocations',[Season_ID] = compared_season))",
              "RETURN IF(MAX('DwellByPavAndDate_alllocations'[Location]) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "472bc791-c4b3-404b-91d3-27022a0c02fe"
          },
          {
            "name": "wifi footfall _compared_season2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[footfall]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=compare,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              "        //ALLEXCEPT('DwellByPavAndDate_alllocations','DwellByPavAndDate_alllocations'[day_num_tag_shifted])",
              "        ),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[footfall]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              ")   "
            ],
            "lineageTag": "ec3beed0-6db6-418d-86b0-e0de792da2de"
          },
          {
            "name": "wifi footfall _selected_season2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('DwellByPavAndDate_alllocations'[day_num_tag_shifted]),'DwellByPavAndDate_alllocations'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[footfall]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=selectedseason,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]<=max_date,",
              "        'DwellByPavAndDate_alllocations'[day_num_tag_shifted]>=min_date",
              "        //ALLEXCEPT('DwellByPavAndDate_alllocations','DwellByPavAndDate_alllocations'[day_num_tag_shifted])",
              "        ),",
              "    CALCULATE(",
              "        AVERAGE('DwellByPavAndDate_alllocations'[footfall]),",
              "        'DwellByPavAndDate_alllocations'[Season_id]=selectedseason)",
              ")   "
            ],
            "lineageTag": "4a33bf43-1d13-4ad0-9c54-052918ccd268"
          },
          {
            "name": "S27 Vs S26 Dwell_Change_%",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "IFERROR(('DwellByPavAndDate_alllocations'[S27 Avg_Dwelltime_selectedseason2]-'DwellByPavAndDate_alllocations'[S26 Avg_Dwelltime_compared_season2] )/'DwellByPavAndDate_alllocations'[S26 Avg_Dwelltime_compared_season2],0)",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "29399638-5070-4d3c-a298-9209b0ff46e2"
          },
          {
            "name": "S27 Vs S26 Dwell_Change_min",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('DwellByPavAndDate_alllocations'[S27 Avg_Dwelltime_selectedseason2]-'DwellByPavAndDate_alllocations'[S26 Avg_Dwelltime_compared_season2] )",
            "lineageTag": "c2d1869d-34cd-468a-854a-b6286e5776e7"
          }
        ],
        "partitions": [
          {
            "name": "DwellByPavAndDate_alllocations-b1b8a06e-ffa3-4f8b-bf0e-25cdf8cfd31a",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    DwellByPavAndDate_alllocations1 = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"DwellByPavAndDate_alllocations\"]}[Data]",
                "",
                "in",
                "    DwellByPavAndDate_alllocations1"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Distinct DwellByPavAndDate_alllocations",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "6eba29b903214c44ba3e34aba8927ff8"
          }
        ],
        "columns": [
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "764a8118-2193-4b51-bba9-7e32249c70cb",
            "sourceColumn": "DwellByPavAndDate_alllocations[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "3d691c25-c9e6-4611-a851-69a22d1e3c29",
        "partitions": [
          {
            "name": "Distinct DwellByPavAndDate_alllocations-0a48fc95-456f-426c-8185-0591f67863e9",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE(DISTINCT(DwellByPavAndDate_alllocations[Location]),DwellByPavAndDate_alllocations[Season_ID]=26)",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Table",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "e391489844dd42de9428e2151f2b5796"
          }
        ],
        "columns": [
          {
            "name": "Pavilion_size",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE (",
              "'Pavilion Wise Details'[Pavilion_Size],",
              "   'Pavilion Wise Details' [Location], [Location],",
              "    'Pavilion Wise Details'[Season_ID], [Season_id]",
              ")",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "95b3d13a-c5e7-4dde-bd9a-61836a7bf630",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              " ",
              "//  LOOKUPVALUE (",
              "// 'Pavilion Wise Details'[Location_id],",
              "//    'Pavilion Wise Details' [location], [Location],",
              "//     'Pavilion Wise Details'[Season_ID], [Season_id]",
              "// )",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "8c997d61-a494-41bc-ad16-5eddc6ff2bbb",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Season+Location id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE('Table'[Season_id],'Table'[Location_id])",
            "isDataTypeInferred": true,
            "lineageTag": "e869f8a8-64c1-49da-89ea-248c0f46e631",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4455a590-e399-4ba0-8dcd-7321437bbb5b",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "525d3de7-5e03-4b2e-b9a6-a8f53fae756c",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Season_ID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "b6eb3a97-f7a2-4676-a0e9-af7e8293d7dc",
        "partitions": [
          {
            "name": "Table-a79e4956-f879-4ca0-a1e8-d7599b005599",
            "mode": "import",
            "source": {
              "expression": [
                "SUMMARIZE('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Location],'Pav Sensor + Park Footfall 2'[Season_id])",
                "--,'Pav Sensor + Park Footfall'[Season+Location ID]"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "GuestCounts",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6222427e-c438-40a0-90ee-a7f089af1c52",
            "sourceColumn": "Season_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "86ff3cd8-4daf-47ac-a21a-f149f2a28543",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "71de9214-5b51-40a7-b112-ad10352525d0",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "Gate_Of_The_Word",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "befb0c94-a124-4d6d-aa85-af41820c0fe3",
            "sourceColumn": "Gate_Of_The_Word",
            "summarizeBy": "sum"
          },
          {
            "name": "Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "48d60311-6375-41e0-b969-92df6900adcb",
            "sourceColumn": "Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9ae2bdd8-a343-43d9-910f-1bba27cf7d3b",
            "sourceColumn": "Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "HG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "492f0cf7-eb86-44a8-b9d6-099446bea4ab",
            "sourceColumn": "HG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "lineageTag": "8dae1792-1527-41f6-bae4-352529189e7d",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "88603420-701f-4bb9-9625-eb99ccf964bb",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Date],\"dddd\")=\"Saturday\" || FORMAT([Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Date],\"dddd\")=\"Friday\" || FORMAT([Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "e07c1688-c180-45b4-a8de-b8dfbde6c135",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "FORMAT([Date],\"dddd\")",
            "isDataTypeInferred": true,
            "lineageTag": "a0998ef1-d5e9-49c0-8562-514208f86d25",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>DATE(2022,1,1),[day_num_tag],[day_num_tag]+1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "1eba7e9f-6f73-423c-b0ab-89973765119d",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('GuestCounts'[Date],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([Date],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([Date],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([Date],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([Date],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([Date] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[Date]),",
              "                        IF (",
              "                            FORMAT([Date],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([Date],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [Date] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [Date] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [Date] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [Date] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",GuestCounts[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))           ",
              "// SWITCH(FORMAT([Day_Type],\"dddd\"),\"Tuesday\",\"Family Day\",",
              "",
              "// DATE(2016,11,30),\"Martyr's Day\",",
              "// DATE(2017,11,30),\"Martyr's Day\",",
              "// DATE(2018,11,30),\"Martyr's Day\",",
              "// DATE(2019,11,30),\"Martyr's Day\",",
              "// DATE(2020,11,30),\"Martyr's Day\",",
              "// DATE(2021,11,30),\"Martyr's Day\",",
              "// DATE(2022,11,30),\"Martyr's Day\",",
              "// \"None\")",
              "",
              "// SWITCH(",
              "// VALUE(MAX('Pav Sensor + Park Footfall 2'[Day_Type])),",
              "// \"Tuesday\",\"Family Day\",",
              "// BLANK()",
              "// ),)))))))))))))))))))))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "d16a14a5-7f72-4034-a31e-3a9c51876450",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "VIP-CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "99389848-773e-4258-9594-04bccc1209c4",
            "sourceColumn": "VIP-CG",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2eed42d7-2f7c-47e3-98a5-e798624089de",
            "sourceColumn": "VIP-HG",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "459cc82c-3369-40d8-8458-4ae44523f4e8",
            "sourceColumn": "VIP-GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('GuestCounts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "9ce8312a-4034-46e2-a53a-055ff5be3292",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('GuestCounts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "d4aedd9a-33c3-4d4b-8193-6401934d0593",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>=DATE(2022,1,1), WEEKDAY([Date]-2) , WEEKDAY([Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "a13bb435-4231-4e08-a74b-9a6afd79c72a",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "expression": [
              "IF([Date]<=DATE(2022,1,1),IF('GuestCounts'[WeekdayNum]=1  ,'GuestCounts'[week_num]+1,'GuestCounts'[week_num]),'GuestCounts'[week_num])",
              "// DATEDIFF(CALCULATE (",
              "//     Min ( GuestCounts[Date] ),",
              "//     FILTER (",
              "//         ALLEXCEPT ( GuestCounts, GuestCounts[Season_ID] ),",
              "//         GuestCounts[Date] <= EARLIER ( GuestCounts[Date] )",
              "//     )",
              "// ),[Date], DAY)/ 7",
              "",
              "// IF(GuestCounts[Season_ID] =25",
              "// IF([Date]>=DATE(2022,1,1),",
              "//     , WEEKNUM('GuestCounts'[Date],1)-44,,WEEKNUM('GuestCounts'[Date],2)-43))",
              "",
              "// IF([Date]>=DATE(2022,1,1),IF('GuestCounts'[WeekdayNum]=1 && 'GuestCounts'[day_num_tag_shifted]<>1,'GuestCounts'[week_num]+1,'GuestCounts'[week_num]),'GuestCounts'[week_num])",
              "",
              "",
              "//WEEKNUM('GuestCounts'[Date],2)-43",
              "//floor(datediff(day, min(DATE) OVER ( PARTITION BY Season_id ORDER BY DATE ), DATE) / 7.0) ",
              "//+ 1 AS week_num )"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "7b0e2c85-9d0c-4c4f-8071-fb6821b8cda8",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Travel agents (WEB B2B)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "83dee185-617f-44ec-9085-2789eea2bfb6",
            "sourceColumn": "Travel agents (WEB B2B)",
            "summarizeBy": "sum"
          },
          {
            "name": "Family packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f33a06de-fad5-4e3c-ac9e-79887bcd4e56",
            "sourceColumn": "Family packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "86b5f341-9631-4f05-be10-64cae3ea2f7e",
            "sourceColumn": "Fazza",
            "summarizeBy": "sum"
          },
          {
            "name": "Web sales Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1ba91fe9-750e-421e-923a-c47a6a9d9863",
            "sourceColumn": "Web sales Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily ticket sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "87fbb9cd-1655-436d-af7e-06d037236bef",
            "sourceColumn": "Daily ticket sales",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Gates",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "GuestCounts[VIP-CG]+GuestCounts[VIP-GOW]+GuestCounts[VIP-HG]",
            "isDataTypeInferred": true,
            "lineageTag": "b3d7e7f5-aeb4-47c9-9d30-8d6c09dbc349",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Weather",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"26/11/2018\",\"Rain\",",
              "   IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"12/02/2019\",\"Light Rain and Winds\",",
              "   IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"22/02/2019\",\"Light Rain\",",
              "   IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"15/03/2019\",\"Light Rain\",",
              "   IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"17/03/2019\",\"Light Rain\",",
              "   IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"27/03/2019\",\"Moderate Rain\",",
              "      IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"28/03/2019\",\"Moderate Rain\",",
              "      IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"03/04/2019\",\"Light Rain\",",
              "      IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"10/04/2019\",\"Moderate Rain\",",
              "         IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"11/04/2019\",\"Light Rain\",",
              "         IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"12/04/2019\",\"Light Rain\",",
              "         IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"13/04/2019\",\"Moderate Rain\",",
              "IF (",
              "   FORMAT([Date],\"dd/mm/yyyy\") =\"01/01/2022\",\"Park closed 10:30 pm\",",
              "    IF (",
              "        FORMAT([Date],\"dd/mm/yyyy\")=\"16/01/2022\",\"Rain\",",
              "        IF (",
              "            FORMAT([Date],\"dd/mm/yyyy\")=\"26/04/2022\",\"Wind and Light Rain\",",
              "              IF (",
              "            FORMAT([Date],\"dd/mm/yyyy\")=\"22/11/2022\",\"Light Rain\",      ",
              "                       IF (",
              "            FORMAT([Date],\"dd/mm/yyyy\")=\"26/12/2022\",\"Rain\",         ",
              "                        IF(FORMAT([Date],\"dd/mm/yyyy\")=\"07/01/2023\",\"Park closed - Rain\",         ",
              "                        IF(FORMAT([Date],\"dd/mm/yyyy\")=\"23/01/2023\",\"Light Rain\",         ",
              "",
              "                        IF(FORMAT([Date],\"dd/mm/yyyy\")=\"25/01/2023\",\"Park Closed at 8 pm -  Rain\",         ",
              "                                                IF(FORMAT([Date],\"dd/mm/yyyy\")=\"26/01/2023\",\"Park Closed - Rain\",         ",
              "",
              "            Blank()",
              "          ",
              "            )",
              "        )",
              "    )))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "7e959b5f-5f36-4d75-a2ac-1c156fca50a5",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\" ,\"NYE\",",
              "   IF( [Event] =\"National Day\" ,\"National Day\",",
              "IF([Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            ",
              "        ",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "78d74556-aea5-4b77-ba15-f6506a0f68a8",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE([Event],\" S\"&[Season_ID])",
            "isDataTypeInferred": true,
            "lineageTag": "a3118404-92c9-4fce-bd61-d8afd45da13a",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF([Date] in VALUES(Concerts[Date]),LOOKUPVALUE(Concerts[Concert Type],Concerts[Date],[Date]),IF([Event Type]=\"National Day\", \"National Day & Concert\",[Event Type]))",
              "// IF([Event Type]=\"Concert\",LOOKUPVALUE(Concerts[Concert Type],Concerts[Concert],Guestcounts[Event]),Blank())",
              "",
              "// IF (",
              "//    [Event] =\"NYE\",\"NYE\",",
              "//    IF([Event] =\"NYD\",\"NYD\",",
              "//    IF( [Event] =\"National Day\",\"National Day\",",
              "//     IF([Event] =\"Martyr's Day\",\"Martyr's Day\",",
              "// IF([Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "//                         )",
              "//                     )",
              "//                 )",
              "//             )",
              "//         )",
              "        ",
              "//)))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "cf7c5827-6aed-4ef8-9922-0bb06874e6be",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Week concert",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "Var event=GuestCounts[Event And Season]",
              "Var season=GuestCounts[Season_ID]",
              "Var week=GuestCounts[new_week_num]",
              "VAR concert_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"Concert\" &&GuestCounts[Season_ID]=season ))",
              "VAR NYE_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"NYE\" &&GuestCounts[Season_ID]=season ))",
              "VAR NYD_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]<>\"NYD\" &&GuestCounts[Season_ID]=season ))",
              "VAR NationalDay_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]<>\"National Day\" &&GuestCounts[Season_ID]=season ))",
              "VAR MartyrsDay_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]<>\"Martyrs Day\" &&GuestCounts[Season_ID]=season ))",
              "Return IF(concert_week<>BLANK(),concert_week,Blank())"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "8e0b515b-1d6b-4505-934c-9241d869d7f6",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Week event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "Var event=GuestCounts[Event And Season]",
              "Var season=GuestCounts[Season_ID]",
              "Var week=GuestCounts[new_week_num]",
              "VAR concert_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"Concert\" &&GuestCounts[Season_ID]=season ))",
              "VAR NYE_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"NYE\" &&GuestCounts[Season_ID]=season ))",
              "VAR NYD_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"NYD\" &&GuestCounts[Season_ID]=season ))",
              "VAR NationalDay_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"National Day\" &&GuestCounts[Season_ID]=season ))",
              "VAR MartyrsDay_week=CALCULATE(Min('GuestCounts'[Event And Season]),FILTER('GuestCounts',GuestCounts[new_week_num]=week && GuestCounts[Event Type]=\"Martyr's Day\" &&GuestCounts[Season_ID]=season ))",
              "Return IF(NYE_week<>Blank(),NYE_week,IF(NYD_week<>Blank(),NYD_week,IF(NationalDay_week<>Blank(),NationalDay_week,IF(MartyrsDay_week<>Blank(),MartyrsDay_week,Blank()))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "efe09ba1-b8bd-4c90-9771-1f49a866dee1",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Carnaval Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "725480b4-2352-4a59-81ce-e3c1ad6e28d9",
            "sourceColumn": "Carnaval Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ff7025f4-225d-4ef9-b08e-f0e1dc1f05c6",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ff4c8fbf-5ea8-47e3-ae29-b76e7bdc6ccd",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          }
        ],
        "hierarchies": [
          {
            "name": "Event Type Hierarchy",
            "levels": [
              {
                "name": "Event Type",
                "column": "Event Type",
                "lineageTag": "a8352041-082c-4b2c-ba0d-e30deb0fc695",
                "ordinal": 0
              },
              {
                "name": "Event And Season",
                "column": "Event And Season",
                "lineageTag": "75cc721f-c5ad-4ddc-8070-cc00902697c9",
                "ordinal": 1
              }
            ],
            "lineageTag": "1d509d0b-b2d7-4b0d-8a37-4966b83ac93b"
          }
        ],
        "lineageTag": "887b00b3-fe48-41c5-a345-161f1ba93d77",
        "measures": [
          {
            "name": "Event Name",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR events_selected_season=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR events_compared_season=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=compare)",
              "",
              "",
              "VAR date_selected_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=selectedseason,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "VAR date_compared_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=compare,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "",
              "RETURN",
              "IF (like_to_like=\"ETD\", \"S\"&selectedseason&\": \" & events_selected_season & UNICHAR(10) &\"S\"&compare&\": \"& events_compared_season, \"S\"&selectedseason&\": \" & date_selected_season_samenumofdays & UNICHAR(10) &\"S\"&compare&\": \"& date_compared_season_samenumofdays)",
              "",
              "",
              "// RETURN",
              "//  \"S\"&selectedseason&\": \" & events_selected_season & UNICHAR(10) &\"S\"&compare&\": \"& events_compared_season",
              "// IF(",
              "//     ( Value(events_selected_season) <> VALUE(\"Weekend\"))",
              "//     //  && events_selected_season <> \"Weekday\")",
              "//     //  & ",
              "//     //  (events_compared_season <>(\"Weekday\") && events_selected_season <> \"Weekend\") ",
              "//      , ",
              "//      \"Selected Season: \" & events_selected_season & UNICHAR(10) &\"Compared Season: \" & events_compared_season, ",
              "",
              "// // IF (events_selected_season <> (\"Weekend\") & events_selected_season <> \"Weekday\") & events_compared_season =(\"Weekday\"\"Weekend\") ,",
              "// // \"Selected Season: \" & events_selected_season , ",
              "// // IF (events_selected_season = (\"Weekend\" ||\"Weekday\") & events_compared_season <> (\"Weekday\" ||\"Weekend\") ,",
              "// // \"Selected Season: \" & events_compared_season , ",
              "// BLANK())"
            ],
            "lineageTag": "0d3bd3df-9e48-4ce1-9727-2e25dffdfd4c"
          },
          {
            "name": "Week Day",
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "VAR weekday_selected_season=CALCULATE(MAX('GuestCounts'[Day_Type]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR weekday_compared_season=CALCULATE(MAX('GuestCounts'[Day_Type]),'GuestCounts'[Season_ID]=compare)",
              "",
              "",
              "VAR date_selected_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Day_Type]),'GuestCounts'[Season_ID]=selectedseason,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "VAR date_compared_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Day_Type]),'GuestCounts'[Season_ID]=compare,",
              "'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "",
              "RETURN",
              "IF (like_to_like=\"ETD\", \"S\"&selectedseason&\": \" & weekday_selected_season & UNICHAR(10) &\"S\"&compare&\": \"& weekday_compared_season, \"S\"&selectedseason&\": \" & date_selected_season_samenumofdays & UNICHAR(10) &\"S\"&compare&\": \"& date_compared_season_samenumofdays)",
              "",
              "// RETURN ",
              "// \"Week Day Selected Season: \" & weekday_selected_season & UNICHAR(10) &\" Week Day Compared Season: \" & weekday_compared_season",
              "",
              "//  \"S\"&selectedseason&\": \" & weekday_selected_season & UNICHAR(10) &\"S\"&compare&\": \"& weekday_compared_season"
            ],
            "lineageTag": "b0205f1a-bb09-4719-8dfa-6d2538399ca9"
          },
          {
            "name": "Actual Value vs Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('GuestCounts'[Variance Compared season]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('GuestCounts'[Variance Compared season]))",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "9bdbd3ba-df3d-40c0-9929-5c6e6f9a87f1"
          },
          {
            "name": "Variance Compared season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=selectedseason) -",
              " CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[day_num_tag_shifted]<=max_date ,'GuestCounts'[Season_ID]=compare)"
            ],
            "lineageTag": "925eace2-aa96-474f-92c8-cfe71c679ace"
          },
          {
            "name": "Over Target compared season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('GuestCounts'[Variance Compared season]>0,'GuestCounts'[Variance Compared season],0)",
              ""
            ],
            "lineageTag": "925a9c54-a329-4b40-b04a-ee5adaedaf25"
          },
          {
            "name": "Under Target compared season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('GuestCounts'[Variance Compared season]<0,ABS('GuestCounts'[Variance Compared season]))",
              ""
            ],
            "lineageTag": "a7d5ae00-b4cd-4aa4-9522-ae8c4c4386cd"
          },
          {
            "name": "Variance compared season %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "Return ",
              " DIVIDE('GuestCounts'[Variance Compared season],CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),",
              " 'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,'GuestCounts'[Season_ID]=selectedseason))",
              " ",
              "//  ('Kaizen Modelling  (Sheet1)'[Variance Kaizen],CALCULATE(SUM('Kaizen Modelling  (Sheet1)'[Kaizen - B2C Visitation(2022-09-28 Projection)]),FILTER(ALL('Kaizen Modelling  (Sheet1)'),'Kaizen Modelling  (Sheet1)'[day_num_tag]<=max_date)))",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "601d2820-9828-4b69-8296-944d07cc96ad"
          },
          {
            "name": "S27 Event Name",
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "VAR events_selected_season=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR events_compared_season=CALCULATE(MAX('GuestCounts'[Event]),'GuestCounts'[Season_ID]=compare)",
              "",
              "RETURN",
              " \"S\"&selectedseason&\": \" & events_selected_season ",
              ""
            ],
            "lineageTag": "1df56799-c3e0-4e29-b6ec-3915e6dc6f75"
          },
          {
            "name": "S27 Week Day",
            "expression": [
              "",
              "",
              "VAR selectedseason = 27",
              "VAR events_selected_season=CALCULATE(MAX('GuestCounts'[Day_Type]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "RETURN",
              "events_selected_season"
            ],
            "lineageTag": "bfbcba83-c9a9-47d6-84d1-4345ad0ce406"
          },
          {
            "name": "Travel Agents",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Travel agents (WEB B2B)]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Travel agents (WEB B2B)])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "496030e1-260d-47cf-891a-11ebb3d8b598"
          },
          {
            "name": "Fazza/DXB",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Fazaa/DXB]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Fazaa/DXB])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "cd8cfb1c-58c7-4183-9d78-1f821bb8cc5d"
          },
          {
            "name": "Fazza Packs",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Fazza]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Fazza])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "d8d3f034-8464-4424-b317-81c22b083df9"
          },
          {
            "name": "VIP packs",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[VIP_Gates]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[VIP_Gates])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "333669c5-b75d-428e-8146-f0285e64edf5"
          },
          {
            "name": "Family packs 2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Family packs]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Family packs])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "1aff2a9c-9875-46b3-8629-94af2f46c240"
          },
          {
            "name": "WEB Tickets",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Web sales Total]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Web sales Total])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "17e97903-9cb8-4a86-a255-1523f49a0405"
          },
          {
            "name": "Gate Tickets",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('GuestCounts'[Daily ticket sales]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('GuestCounts'[Daily ticket sales])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "lineageTag": "af570293-5ff0-49ba-84e5-19b617aec5c0"
          },
          {
            "name": "Date_measure",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "VAR date_selected_season=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR date_compared_season=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=compare)",
              "",
              "",
              "// VAR date_selected_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=selectedseason,",
              "// 'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "// 'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "// VAR date_compared_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=compare,",
              "// 'GuestCounts'[day_num_tag_shifted]<=max_date,",
              "// 'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "VAR daynumtagshifted=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]))",
              "VAR date_selected_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=selectedseason,",
              "'GuestCounts'[day_num_tag_shifted]=daynumtagshifted)",
              "VAR date_compared_season_samenumofdays=CALCULATE(MAX('GuestCounts'[Date]),'GuestCounts'[Season_ID]=compare,",
              "'GuestCounts'[day_num_tag_shifted]=daynumtagshifted)",
              "",
              "",
              "RETURN",
              "IF (like_to_like=\"ETD\", \"S\"&selectedseason&\": \" & date_selected_season & UNICHAR(10) &\"S\"&compare&\": \"& date_compared_season, \"S\"&selectedseason&\": \" & date_selected_season_samenumofdays & UNICHAR(10) &\"S\"&compare&\": \"& date_compared_season_samenumofdays)",
              "// IF(",
              "//     ( Value(events_selected_season) <> VALUE(\"Weekend\"))",
              "//     //  && events_selected_season <> \"Weekday\")",
              "//     //  & ",
              "//     //  (events_compared_season <>(\"Weekday\") && events_selected_season <> \"Weekend\") ",
              "//      , ",
              "//      \"Selected Season: \" & events_selected_season & UNICHAR(10) &\"Compared Season: \" & events_compared_season, ",
              "",
              "// // IF (events_selected_season <> (\"Weekend\") & events_selected_season <> \"Weekday\") & events_compared_season =(\"Weekday\"\"Weekend\") ,",
              "// // \"Selected Season: \" & events_selected_season , ",
              "// // IF (events_selected_season = (\"Weekend\" ||\"Weekday\") & events_compared_season <> (\"Weekday\" ||\"Weekend\") ,",
              "// // \"Selected Season: \" & events_compared_season , ",
              "// BLANK())"
            ],
            "lineageTag": "d7cb5679-de62-4c03-ba1e-a94be37d3530"
          },
          {
            "name": "Weather Measure",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "VAR Weather_selected_season=CALCULATE(MAX('GuestCounts'[Weather]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR Weather_compared_season=CALCULATE(MAX('GuestCounts'[Weather]),'GuestCounts'[Season_ID]=compare)",
              "",
              "RETURN",
              "IF(Weather_selected_season<>Blank(), \"S\"&selectedseason&\": \" & Weather_selected_season& UNICHAR(10))&",
              "IF(Weather_compared_season<>Blank(),  \"S\"&compare&\": \"& Weather_compared_season)",
              "// IF(",
              "//     ( Value(events_selected_season) <> VALUE(\"Weekend\"))",
              "//     //  && events_selected_season <> \"Weekday\")",
              "//     //  & ",
              "//     //  (events_compared_season <>(\"Weekday\") && events_selected_season <> \"Weekend\") ",
              "//      , ",
              "//      \"Selected Season: \" & events_selected_season & UNICHAR(10) &\"Compared Season: \" & events_compared_season, ",
              "",
              "// // IF (events_selected_season <> (\"Weekend\") & events_selected_season <> \"Weekday\") & events_compared_season =(\"Weekday\"\"Weekend\") ,",
              "// // \"Selected Season: \" & events_selected_season , ",
              "// // IF (events_selected_season = (\"Weekend\" ||\"Weekday\") & events_compared_season <> (\"Weekday\" ||\"Weekend\") ,",
              "// // \"Selected Season: \" & events_compared_season , ",
              "// BLANK())"
            ],
            "lineageTag": "95d1c057-a306-4fa9-811f-6c3d068d7f5c"
          },
          {
            "name": "Week Entries",
            "expression": [
              "",
              "",
              "VAR selected_event= VALUES('GuestCounts_events'[Event And Season])",
              "VAR event_season=Calculate(Min(GuestCounts[Season_ID]),GuestCounts[Week concert] in selected_event)",
              "VAR week=Calculate(Min(GuestCounts[new_week_num]),GuestCounts[Week concert] in selected_event)",
              "",
              "// Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[new_week_num]=week&&GuestCounts[Season_ID]=event_season),ALL())",
              "",
              "",
              "Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[Week concert]in selected_event),ALL())"
            ],
            "formatString": "0",
            "lineageTag": "ae8bee3c-0b5f-46ef-a61c-f877f505cb59"
          },
          {
            "name": "Week Event Entries",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selected_event= VALUES('GuestCounts_events'[Event And Season])",
              "VAR event_season=Calculate(Min(GuestCounts[Season_ID]),GuestCounts[Week concert] in selected_event)",
              "VAR week=Calculate(Min(GuestCounts[new_week_num]),GuestCounts[Week concert] in selected_event)",
              "",
              "// Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[new_week_num]=week&&GuestCounts[Season_ID]=event_season),ALL())",
              "",
              "",
              "Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[Week event]in selected_event),ALL())"
            ],
            "lineageTag": "b51a6199-4e79-45c3-86a8-681edc279b63"
          },
          {
            "name": "Week Total Event Entries",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selected_event= VALUES('GuestCounts_events'[Event And Season])",
              "VAR event_season=Calculate(Min(GuestCounts[Season_ID]),GuestCounts[Week concert] in selected_event)",
              "VAR week=Calculate(Min(GuestCounts[new_week_num]),GuestCounts[Week concert] in selected_event)",
              "",
              "// Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[new_week_num]=week&&GuestCounts[Season_ID]=event_season),ALL())",
              "",
              "",
              "Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[Week event]in selected_event),ALL())"
            ],
            "lineageTag": "8696f818-1f49-4923-b979-da3a0fc58d67"
          },
          {
            "name": "Avg day Entries event",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selected_event= VALUES('GuestCounts_events'[Event And Season])",
              "VAR event_season=Calculate(Min(GuestCounts[Season_ID]),GuestCounts[Week concert] in selected_event)",
              "VAR week=Calculate(Min(GuestCounts[WeekdayNum]),GuestCounts[Week concert] in selected_event)",
              "VAR season=Calculate(Min(GuestCounts[Season_ID]),GuestCounts[Week concert] in selected_event)",
              "",
              "// Return CALCULATE(Sum(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[new_week_num]=week&&GuestCounts[Season_ID]=event_season),ALL())",
              "",
              "",
              "Return CALCULATE(AVERAGE(GuestCounts[Total_Park_Attendence]),Filter(GuestCounts,GuestCounts[WeekdayNum]=week && GuestCounts[Season_ID]=season),ALL())"
            ],
            "lineageTag": "27c9cab9-6d50-4eae-88e5-e5e5fbe34f39"
          }
        ],
        "partitions": [
          {
            "name": "GuestCounts-2012d207-697e-4977-abc8-ac611cf3a1f9",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    GuestCounts1 = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"GuestCounts\"]}[Data]",
                "in",
                "    GuestCounts1"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Pav Sensor + Park Footfall 2",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "670d5968-1b14-47a1-8a71-fd644441d4ca",
            "sourceColumn": "Operation_Date",
            "summarizeBy": "none"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "eea726ab-7953-4368-8c62-94faccabebe7",
            "sourceColumn": "Location_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e0629b89-c187-4c71-99cc-248ecc35d0dc",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Sensor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3baba02f-6896-4ec9-ae5b-95aa3ee546d4",
            "sourceColumn": "Sensor",
            "summarizeBy": "none"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "592733ca-b191-47bb-81c7-a94f2a59f622",
            "sourceColumn": "Total_Entries",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3f0107d7-0d1d-4a31-9a2a-b070981d279b",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "294a1d2c-b0b0-4b2b-8e05-ac8db1f92570",
            "sourceColumn": "GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "GOW & CG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4a8f6746-f5aa-4785-af4c-2e79db836dab",
            "sourceColumn": "GOW & CG TVM",
            "summarizeBy": "sum"
          },
          {
            "name": "CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a39a9b59-edc4-4448-a01a-0f720e8fa55a",
            "sourceColumn": "CG",
            "summarizeBy": "sum"
          },
          {
            "name": "HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1ebb0b68-955e-4b9e-803c-e1ce1c82f71c",
            "sourceColumn": "HG",
            "summarizeBy": "sum"
          },
          {
            "name": "HG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "29dfbad2-29ac-4774-90fe-dc1218aa20b8",
            "sourceColumn": "HG TVM",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f5602031-ea27-4544-860b-a3726f0bc369",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "77ef81b5-1bfc-495f-8b27-ef8f2fcf44f3",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "NewLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR seasonID= 'Pav Sensor + Park Footfall 2'[Season_ID]",
              "VAR prev_season=seasonID-1",
              "VAR season_locations=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = seasonID))",
              "VAR prev_season_locations=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = prev_season))",
              "RETURN IF('Pav Sensor + Park Footfall 2'[Location] in prev_season_locations ,0,1)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "27afc485-039c-4622-aba2-11d4b7b0709b",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "    'Pav Sensor + Park Footfall 2'[Location] IN {\"CG\",\"GOW\",\"FAZZA CG\",\"FAZZA GOW\",\"FAZZA_ENTRANCE_NEAR_GOW\",\"FAZZA_ENTRANCE_NEAR_CG\"},\"MAIN GATES\",",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"GOW  EXIT\",\"GOW EXIT\",\"CG EXIT\", \"HG EXIT\"},\"EXIT\",",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"SIDEB-1-ENTRANCE1\"},\"OTHER ENTRANCES\",",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"AMERICA-EUROPE(INTERCONNETION)\",\"CWALK GOW\",\"CWALK-GOW\",\"CWALK-KIDS-THEATRE\",\"CWALK - GOW\",\"CWALK - KIDS THEATRE\",\"AMERICA-EUROPE(INTERCONNECTION)\"},\"PATHWAY\",",
              "",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"KIOSK-STREET-CANAL\",\"KIOSK-STREET-CULTURALHUB\"},\"KIOSKS & RESTAURANTS\" ,",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"RAIL MARKET\",\"ROAD OF ASIA\",\"FLOATING MARKET\",\"RIPLEYS LOBBY\",\"KIDS THEATRE\"},\"ATTRACTION\" ,",
              "       IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"FUN FAIR\",\"STUNT ARENA\",\"STUNT AREA\"},\"Other ATTRACTION\" ,",
              "    ",
              "    IF ('Pav Sensor + Park Footfall 2'[Location] IN {\"CAR COUNTING\",\"P1 OCCUPANCY\",\"P2 OCCUPANCY\",\"P3 OCCUPANCY\",\"P5 OCCUPANCY\",\"P6 OCCUPANCY\"},\"PARKING\",\"PAVILION\"))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "ee304ce7-5395-4f3d-8f23-1c86dece3e4a",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE('Pav Sensor + Park Footfall 2'[Season_ID],'Pav Sensor + Park Footfall 2'[Location_id])",
            "isDataTypeInferred": true,
            "lineageTag": "c345978a-4104-4af9-902f-02f371d1af06",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Pavilion Size",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "RELATED('Pavilion Wise Details'[Pavilion_Size])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "5104e1a5-58ea-46b6-96f3-fc12258ba4f5",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Min_day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR location= [Location]",
              "VAR season= [Season_ID]",
              "VAR location_season_id= ([Season+Location ID])",
              "",
              "RETURN CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag]),FILTER('Pav Sensor + Park Footfall 2',[Season+Location ID]=location_season_id))",
              "",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e52fc31c-0fa3-473d-8330-629d73ad954f",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Max_day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR location= [Location]",
              "VAR season= [Season_ID]",
              "VAR location_season_id= ([Season+Location ID])",
              "",
              "RETURN CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag]),FILTER('Pav Sensor + Park Footfall 2',[Season+Location ID]=location_season_id))",
              "",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "17d99b72-6092-4d37-8a19-434d095cab45",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Total_period_sensor_is_operational",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "'Pav Sensor + Park Footfall 2'[Max_day_num_tag]-'Pav Sensor + Park Footfall 2'[Min_day_num_tag]+1",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "28305fa0-0d04-415e-ba8f-454f0db9f4da",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ('Pav Sensor + Park Footfall 2'[Operation_Date]>DATE(2022,1,1),'Pav Sensor + Park Footfall 2'[day_num_tag],'Pav Sensor + Park Footfall 2'[day_num_tag]+1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "862fa8bc-31a9-4f53-b5b7-0e00ca8c99b6",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Operation_Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Saturday\" || FORMAT([Operation_Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Friday\" || FORMAT([Operation_Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "9dd28ad8-9fbf-4439-9068-042f5c1b13b5",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "FORMAT([Operation_Date],\"dddd\")",
            "isDataTypeInferred": true,
            "lineageTag": "6e0c7ff6-c2fb-477f-9fc3-ab58f8e95b55",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Selected Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "1",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "8bd97c1c-0e22-4745-8339-f45e725cc0bf",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "LocationInS27",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR slected_season_locations27=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = 27))",
              "RETURN IF((('Pav Sensor + Park Footfall 2'[Location])) in slected_season_locations27 ,1,0)"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "5b5a5a93-ad20-463b-ba61-06c67ed7427a",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "LocationInS26",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = 26))",
              "RETURN IF((('Pav Sensor + Park Footfall 2'[Location])) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "bb7cc2f5-0004-491b-8f74-6c8dd50e66d1",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "MONTH([Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "19b8cd14-77bf-43cc-9348-8aa5fd3bf474",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Pav Sensor + Park Footfall 2'[Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ad3cba44-6c7a-4215-a859-1e2a367176cc",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('GuestCounts'[Date],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([Operation_Date],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([Operation_Date],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([Operation_Date] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[Operation_Date]),",
              "                        IF (",
              "                            FORMAT([Operation_Date],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [Operation_Date] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",'Pav Sensor + Park Footfall 2'[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))           ",
              "// SWITCH(FORMAT([Day_Type],\"dddd\"),\"Tuesday\",\"Family Day\",",
              "",
              "// DATE(2016,11,30),\"Martyr's Day\",",
              "// DATE(2017,11,30),\"Martyr's Day\",",
              "// DATE(2018,11,30),\"Martyr's Day\",",
              "// DATE(2019,11,30),\"Martyr's Day\",",
              "// DATE(2020,11,30),\"Martyr's Day\",",
              "// DATE(2021,11,30),\"Martyr's Day\",",
              "// DATE(2022,11,30),\"Martyr's Day\",",
              "// \"None\")",
              "",
              "// SWITCH(",
              "// VALUE(MAX('Pav Sensor + Park Footfall 2'[Day_Type])),",
              "// \"Tuesday\",\"Family Day\",",
              "// BLANK()",
              "// ),)))))))))))))))))))))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "348eac18-6538-46e4-bcb3-e71d58670445",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              " IF([Operation_Date]<=DATE(2022,1,1),IF('Pav Sensor + Park Footfall 2'[WeekdayNum]=1  ,'Pav Sensor + Park Footfall 2'[week_num]+1,'Pav Sensor + Park Footfall 2'[week_num]),'Pav Sensor + Park Footfall 2'[week_num])",
              "",
              "//  IF([Operation_Date]>=DATE(2022,1,1),IF('Pav Sensor + Park Footfall 2'[WeekdayNum]=1 && 'Pav Sensor + Park Footfall 2'[day_num_tag]<>1,'Pav Sensor + Park Footfall 2'[week_num]+1,'Pav Sensor + Park Footfall 2'[week_num]),'Pav Sensor + Park Footfall 2'[week_num])",
              "",
              "//WEEKNUM('GuestCounts'[Date],2)-43",
              "//floor(datediff(day, min(DATE) OVER ( PARTITION BY Season_id ORDER BY DATE ), DATE) / 7.0) ",
              "//+ 1 AS week_num "
            ],
            "isDataTypeInferred": true,
            "lineageTag": "e6469c1c-ff5b-44be-a41a-2f28e193c855",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Operation_Date]>=DATE(2022,1,1), WEEKDAY([Operation_Date]-2) , WEEKDAY([Operation_Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "98506ac5-aa66-4331-98ba-8486cf7e9d93",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE([Event],\" S\"&[Season_ID])",
            "isDataTypeInferred": true,
            "lineageTag": "4a6595a4-5a64-4c78-9244-8d858a5ba745",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\",\"NYE\",",
              "   IF([Event] =\"NYD\",\"NYD\",",
              "   IF( [Event] =\"National Day\",\"National Day\",",
              "    IF([Event] =\"Martyr's Day\",\"Martyr's Day\",",
              "IF([Operation_Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "        ",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "e8aa7291-3f3b-4903-989d-f2e1602f6bf4",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "IF([Operation_Date] in VALUES(Concerts[Date]),LOOKUPVALUE(Concerts[Concert Type],Concerts[Date],[Operation_Date]),Blank())",
            "isDataTypeInferred": true,
            "lineageTag": "bdaa0bb5-4b81-42e3-9c99-f0c6085a705c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "2466aedc-5b0f-4c9c-b782-5718539b26ee",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          }
        ],
        "hierarchies": [
          {
            "name": "Event Type Hierarchy",
            "levels": [
              {
                "name": "Event Type",
                "column": "Event Type",
                "lineageTag": "975b8727-06b6-4bd9-a326-016ea55f42bc",
                "ordinal": 0
              },
              {
                "name": "Event And Season",
                "column": "Event And Season",
                "lineageTag": "1b7d60c3-6ab9-4af1-80a6-7b94551af137",
                "ordinal": 1
              }
            ],
            "lineageTag": "58035175-bd44-4ecb-b44b-863ae2537b89"
          }
        ],
        "lineageTag": "7973b9b3-398f-4075-8831-8357195acf00",
        "measures": [
          {
            "name": "New_Pavilions",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "--ETD and Same # of days gives same output regardless, need to make sure that the footfall is for the same period of time",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days_max=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_max=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR max_date=Min(compare_park_days_max,selected_park_days_max)",
              "VAR min_date=Max(compare_park_days_max,selected_park_days_max)",
              "",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "IF( avg_sum=\"Sum\",",
              "    CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "    IF(avg_sum=\"Avg\",  ",
              "            CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "            /   ",
              "            // CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])-Min('Pav Sensor + Park Footfall 2'[day_num_tag_shifted])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "            CALCULATE(DISTINCTCOUNT('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "            ,",
              "            BLANK()",
              "     )",
              ")",
              "",
              "// IF( ",
              "//    AND(like_to_like=\"Same # Of Days\",avg_sum=\"Sum\"),",
              "//     CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//      IF(",
              "//         AND(like_to_like=\"ETD\",avg_sum=\"Sum\"),",
              "//         CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//         IF(",
              "//         AND(like_to_like=\"Same # Of Days\",avg_sum=\"Avg\"),  ",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)/   CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason),",
              "//         IF(",
              "//             AND(like_to_like=\"ETD\",avg_sum=\"Avg\"),  ",
              "//             CALCULATE(SUM('Pav Sensor + Park Footfall 2'[Total_Entries]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<selected_park_days)/   CALCULATE(Max('Pav Sensor + Park Footfall 2'[day_num_tag])-Min('Pav Sensor + Park Footfall 2'[day_num_tag])+1,'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason,'Pav Sensor + Park Footfall 2'[day_num_tag]<selected_park_days),",
              "//             BLANK()",
              "     ",
              "// )",
              "//           )",
              "//         )",
              "//      )",
              ""
            ],
            "lineageTag": "5b585b5e-400f-4542-a332-93aaee9e89d4"
          },
          {
            "name": "InComparedSeason",
            "expression": [
              "",
              "Var compared_season=SELECTEDVALUE('Compare with'[Value])",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = compared_season))",
              "RETURN IF(MAX('Pav Sensor + Park Footfall 2'[Location]) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "efde94db-181c-45aa-8f89-0e6317a1e407"
          },
          {
            "name": "InSelectedSeason",
            "expression": [
              "",
              "Var selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_ID])",
              "VAR slected_season_locations=CALCULATETABLE(DISTINCT('Pav Sensor + Park Footfall 2'[Location]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID] = selectedseason))",
              "RETURN IF(MAX('Pav Sensor + Park Footfall 2'[Location]) in slected_season_locations ,1,0)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "773c7e6a-f7d9-41fe-b337-d60d3e661232"
          },
          {
            "name": "First day of operation",
            "expression": [
              "",
              "VAR season= SELECTEDVALUE('GuestCounts'[Season_ID])",
              "VAR location= SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Location])",
              "",
              "",
              "RETURN CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID]=season ))",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "7b1dce68-da8f-431e-b2f3-7823691c977e"
          },
          {
            "name": "Last day of operation",
            "expression": [
              "",
              "VAR season= SELECTEDVALUE('GuestCounts'[Season_ID])",
              "VAR location= SELECTEDVALUE('Pav Sensor + Park Footfall 2'[Location])",
              "",
              "",
              "RETURN CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),FILTER('Pav Sensor + Park Footfall 2',[Season_ID]=season ))",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "a7eefa1a-6de9-410c-92e5-6d4b3218c637"
          },
          {
            "name": "Compared period",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "",
              "VAR max_date=MIN(selected_park_days, IF(compare_park_days=Blank(),selected_park_days,compare_park_days))",
              "",
              "",
              "",
              "RETURN ",
              "",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "      \"Day \"&min_date&\" to day \"&max_date, ",
              "  ",
              "  IF(",
              "      compare_park_days<>Blank(),",
              "      \"Selected season from day \"&selected_park_days_min&\" to day \"&selected_park_days&\", Compared season from day \"&compare_park_days_min&\" to day \"&compare_park_days,",
              "      \"Selected season from day \"&selected_park_days_min&\" to day \"&selected_park_days)",
              "      )",
              "",
              ""
            ],
            "lineageTag": "e38a799a-452c-47df-81bd-94ae8b4d4ab5"
          },
          {
            "name": "Count Location",
            "expression": [
              "",
              "CALCULATE(DISTINCTCOUNT([Location]))",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "5cb92ad0-9e93-4296-8001-9f820c107434"
          }
        ],
        "partitions": [
          {
            "name": "Pav Sensor + Park Footfall 2-018935f4-186f-479f-8905-0adb8c2d3359",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Pav Sensor + Park Footfall 1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Pav Sensor + Park Footfall 2\"]}[Data]",
                "in",
                "    #\"Pav Sensor + Park Footfall 1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Sensors_Operation",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c3977942481544e286a144d11df2c310"
          }
        ],
        "columns": [
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7d74e7aa-746c-4fab-9243-b59c3f0d9a98",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Season+Location ID]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Max_day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(",
              "    'Pav Sensor + Park Footfall 2'[Max_day_num_tag],",
              "    'Pav Sensor + Park Footfall 2'[Season+Location ID],[Season+Location ID])"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ed22fde1-4c2c-48d0-a5bc-e91414e64a0a",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(",
              "    'Pav Sensor + Park Footfall 2'[Season_ID],",
              "    'Pav Sensor + Park Footfall 2'[Season+Location ID],[Season+Location ID])"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "a36bda09-5445-408d-90b1-cc4903eba9b9",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Min_day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(",
              "    'Pav Sensor + Park Footfall 2'[Min_day_num_tag],",
              "    'Pav Sensor + Park Footfall 2'[Season+Location ID],[Season+Location ID])"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "14e11e8d-f4d5-4fd1-816f-8b7e67ced7e1",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "9abb2204-dbad-441f-9109-9bc6ef8041a3",
        "partitions": [
          {
            "name": "Sensors_Operation-93a22e4e-308e-4b51-be5a-3c58a0f7de0c",
            "mode": "import",
            "source": {
              "expression": "DISTINCT('Pav Sensor + Park Footfall 2'[Season+Location ID])",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Concerts",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "01fa13e4-b8a2-46ab-94c7-a745d586f999",
            "sourceColumn": "Season",
            "summarizeBy": "sum"
          },
          {
            "name": "Concert",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "63ef802e-96b1-48fa-9dad-ed297f1ea9ac",
            "sourceColumn": "Concert",
            "summarizeBy": "none"
          },
          {
            "name": "Concert Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "658a2655-ebd9-4715-9729-c3a5a4e558a4",
            "sourceColumn": "Concert Type",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "31933ec7-62ec-470b-8a60-fa12396db321",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_29c565f6-d63f-427d-8357-b9a6e4387011"
                },
                "isDefault": true,
                "relationship": "5a41ec26-1d1e-42ab-81b6-05418d5c6650"
              }
            ]
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('Concerts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "7d50d491-a365-48e2-86a1-97caec6943f4",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Concerts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "d2f0b581-2bdb-44da-8657-4690be5362a0",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Start Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5ee0ce80-1393-4d92-9b78-0a6068f2d674",
            "sourceColumn": "Start Time",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "aa0165d5-cf9e-48d2-a2ea-f95681780ec3",
        "partitions": [
          {
            "name": "Concerts-747e0c5c-99b3-4084-938d-de60275d851e",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"Events.xlsx\")),",
                "    #\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\" = #\"Filtered Rows\"{[Name=\"Events.xlsx\",#\"Folder Path\"=\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00. Dashbaords/S27 Dashboards/HOD S27/\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\"),",
                "    Sheet1_Sheet = #\"Imported Excel Workbook\"{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Promoted Headers\",{\"Column6\", \"Column7\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"Season\", Int64.Type}, {\"Concert\", type text}, {\"Concert Type\", type text}, {\"Date\", type date}, {\"Start Time\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_29c565f6-d63f-427d-8357-b9a6e4387011",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "092047a1-05cb-46f0-aec7-9c31b5114557",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "a2ad356b-09b7-45cf-b939-79fb70e180e8",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "d1156db8-1241-4266-9b64-a21726be7e9f",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "c973e4ed-8889-4aab-aea0-411c545de826",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "b3b4a9e0-3f60-4010-b1e4-205b9b47225a",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "e848c0a3-7ed6-47cb-9d42-8438ff50f73c",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f12fdfc9-0a4e-4626-b36d-d1980f15bcef",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "41457ba3-dd42-46b8-ba9d-38eaa2060f46",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "005a1b1e-5a8f-438f-bd99-411c85388f87",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "eab0da81-fcec-435a-b7db-361794d5fc12",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "252acd64-5763-4899-bcbd-1e3af3b5b346",
                "ordinal": 3
              }
            ],
            "lineageTag": "78aedaf7-00cf-4f10-9cc5-c879d7dde54c"
          }
        ],
        "isHidden": true,
        "lineageTag": "87a4ad08-5eb0-49cf-a7ed-788f6fc9d2e6",
        "partitions": [
          {
            "name": "LocalDateTable_29c565f6-d63f-427d-8357-b9a6e4387011-3330e58f-1120-48f3-bb2a-a344eb72ec5a",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Concerts'[Date])), 1, 1), Date(Year(MAX('Concerts'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "S27_GuestCounts",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "46a23da2-7d46-442a-ba03-605258272cc3",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_0ef2eee0-790e-40ed-ab30-8955fe1beebb"
                },
                "isDefault": true,
                "relationship": "325fc0db-875e-44de-a9b4-07106bec691c"
              }
            ]
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f5c12496-aad3-4e02-94b2-3d5a0f4d52fe",
            "sourceColumn": "Day",
            "summarizeBy": "none"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "259c841f-14db-45ed-808b-156a330602ec",
            "sourceColumn": "Day_Type",
            "summarizeBy": "none"
          },
          {
            "name": "Gate of the World (GOTW-A)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e71676bd-d77c-417c-9c35-9ec634b8d364",
            "sourceColumn": "Gate of the World (GOTW-A)",
            "summarizeBy": "sum"
          },
          {
            "name": "Cultural Gate (CG)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8ff485ea-3d34-4ee8-a4f9-5943288adac4",
            "sourceColumn": "Cultural Gate (CG)",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ae9c5637-63c3-4fad-a79b-1e2d97d00092",
            "sourceColumn": "Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "HG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "double",
            "lineageTag": "78bf55b1-4982-42e7-b216-e741244fa4b5",
            "sourceColumn": "HG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Ticket Printing Error",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "333f8948-f5aa-44f4-b2d0-40e705e71407",
            "sourceColumn": "Ticket Printing Error",
            "summarizeBy": "sum"
          },
          {
            "name": "Emergency tickets / Gate 5C",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "dd230aef-1296-46e3-9548-a2718babc47d",
            "sourceColumn": "Emergency tickets / Gate 5C",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily ticket sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b16e9357-986d-4d65-aa40-d5d3acf15c6a",
            "sourceColumn": "Daily ticket sales",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP - main gate S27",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3be7c8e9-76d9-4914-8b5a-182c00d01c8d",
            "sourceColumn": "VIP - main gate S27",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP - cultural gate S27",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3441a158-293f-4992-8e56-0d94534646eb",
            "sourceColumn": "VIP - cultural gate S27",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c283aa7c-7de0-4392-b952-00d5c1b39538",
            "sourceColumn": "VIP-Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza - main gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b5c12882-07ea-4959-81a7-d8646a94aaf0",
            "sourceColumn": "Fazza - main gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza - cultural gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e97d86b0-60ca-4c3d-bf89-dd3d10080fc6",
            "sourceColumn": "Fazza - cultural gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza-Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a0eb3a54-8b97-4430-9f2e-475f607ea8c9",
            "sourceColumn": "Fazza-Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Family packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b571e304-a2b0-4376-94c1-91957d68cd07",
            "sourceColumn": "Family packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre Sales,Group Discount,Pre Sales, Corporate S27",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "774f4d60-7919-4af5-97c5-ad008a65d1d1",
            "sourceColumn": "Pre Sales,Group Discount,Pre Sales, Corporate S27",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel agents (WEB B2B)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9943dbca-48de-4141-b9e4-b51986079a46",
            "sourceColumn": "Travel agents (WEB B2B)",
            "summarizeBy": "sum"
          },
          {
            "name": "Web sales Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4db68219-c9a8-44b6-8a77-2c253a4e3e13",
            "sourceColumn": "Web sales Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Web sales (B2C Any Day)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "db8d0c00-cacc-47fc-8b8e-e3741726ae5e",
            "sourceColumn": "Web sales (B2C Any Day)",
            "summarizeBy": "sum"
          },
          {
            "name": "Web sales (B2C Value)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "403a64fd-d532-4cb4-9a28-2dc2e66149fb",
            "sourceColumn": "Web sales (B2C Value)",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad (B2C Any Day)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3f2a8c1f-e47a-4598-8177-fbf39599dc0c",
            "sourceColumn": "Esaad (B2C Any Day)",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad (B2C Value)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "62d3ac0a-c5ce-4616-a8cf-240280a20dd6",
            "sourceColumn": "Esaad (B2C Value)",
            "summarizeBy": "sum"
          },
          {
            "name": "Al Saada (B2C Any Day)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "be606c63-0985-484f-afc8-cd206305ce93",
            "sourceColumn": "Al Saada (B2C Any Day)",
            "summarizeBy": "sum"
          },
          {
            "name": "Al Saada (B2C Value)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9a59db27-8f73-40ac-8d1b-efe51261012f",
            "sourceColumn": "Al Saada (B2C Value)",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries from pre-sold tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c86318a4-3af5-4cb1-afb5-bdd8f1e19e84",
            "sourceColumn": "Entries from pre-sold tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP Comps Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fc833cf6-51ef-40ac-b63e-4bf0b117a22f",
            "sourceColumn": "VIP Comps Total",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP General Admission Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "338811aa-706f-4d12-961e-e51aa603b8f1",
            "sourceColumn": "VIP General Admission Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP General Admission Mini",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2c4fdbb0-4ec0-41b5-8569-f722b150847f",
            "sourceColumn": "VIP General Admission Mini",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP General Admission Media",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9df15986-6186-4977-890c-4a2b38803753",
            "sourceColumn": "VIP General Admission Media",
            "summarizeBy": "sum"
          },
          {
            "name": "Family packs Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "37b91dc8-023c-419b-8455-0483301ccecf",
            "sourceColumn": "Family packs Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "Employee and other comps# Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "54476645-c2a6-4b07-8350-2f32cedba04b",
            "sourceColumn": "Employee and other comps# Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary A Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "805c6d54-90c4-4148-9e62-cbb12e8d4712",
            "sourceColumn": "Complimentary A Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Govt# Authority Complimentary Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4048fe1f-2034-4e41-a08f-6e11b226e7d4",
            "sourceColumn": "Govt# Authority Complimentary Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GV CEO Complimentary Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "326e83d5-784f-419e-aae5-b30af7be1112",
            "sourceColumn": "GV CEO Complimentary Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GV Entertainment  Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ae67595c-aa79-4053-99cc-f0d1b21006b5",
            "sourceColumn": "GV Entertainment  Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Media Pass",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ec4db057-3d72-4f1d-8d64-7a9a40320783",
            "sourceColumn": "Media Pass",
            "summarizeBy": "sum"
          },
          {
            "name": "Mystery Shopper Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bd82b71f-378b-4560-a61d-403cfcd62aed",
            "sourceColumn": "Mystery Shopper Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "Security Complimentary Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "560162ad-a2b3-49f6-bd87-e6b346f22f38",
            "sourceColumn": "Security Complimentary Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Emirates Airline Promotion - Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d18ab570-86be-40c6-b8e6-2f40d21cc9c8",
            "sourceColumn": "Emirates Airline Promotion - Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "DHE Family Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "57392c09-24fa-4828-a38b-421ceb83e37e",
            "sourceColumn": "DHE Family Day",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary Ticket E",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "aa3e7cbb-5024-4d68-b7a9-ddddb43e0b43",
            "sourceColumn": "Complimentary Ticket E",
            "summarizeBy": "sum"
          },
          {
            "name": "Others",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "eda420fc-040c-479e-a421-c56af984be1f",
            "sourceColumn": "Others",
            "summarizeBy": "sum"
          },
          {
            "name": "Child under 3 years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "156a0d29-ced6-4c6a-9be1-5e9e0e26f6b4",
            "sourceColumn": "Child under 3 years",
            "summarizeBy": "sum"
          },
          {
            "name": "People of Determination + Assistant",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "839e88b5-4d87-4d56-ba95-9df72f921112",
            "sourceColumn": "People of Determination + Assistant",
            "summarizeBy": "sum"
          },
          {
            "name": "Senior citizen over 65 years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a19766cc-ce58-431a-ace9-93f801fae32e",
            "sourceColumn": "Senior citizen over 65 years",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel agents Comp (B2B Entry Ticket C)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a4fe9c69-cc7a-4952-bed0-93baf0700e7d",
            "sourceColumn": "Travel agents Comp (B2B Entry Ticket C)",
            "summarizeBy": "sum"
          },
          {
            "name": "Not used",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "98c69fed-9cb8-4c8b-bc49-d0de172ec912",
            "sourceColumn": "Not used",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries from complimentaries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b66eebbf-6125-40b1-8340-8cfd62f912cd",
            "sourceColumn": "Entries from complimentaries",
            "summarizeBy": "sum"
          },
          {
            "name": "Total park attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4000e1a1-527b-4e56-b548-b8fe84c23f53",
            "sourceColumn": "Total park attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cdfae926-6622-4d11-8299-26349d35ff98",
            "sourceColumn": "Season_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "S27_GuestCounts[Total park attendance] -",
              "(S27_GuestCounts[Gates]",
              "+S27_GuestCounts[VIP_GATES]",
              "+S27_GuestCounts[VIP Comps Total]",
              "+",
              "S27_GuestCounts[Complimentary A Ticket]+S27_GuestCounts[Emergency tickets / Gate 5C]+S27_GuestCounts[VIP - cultural gate S27]+S27_GuestCounts[VIP - main gate S27]+S27_GuestCounts[VIP-Happiness Gate]+S27_GuestCounts[Travel agents (WEB B2B)]+S27_GuestCounts[Entries from complimentaries])"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "28984f70-b459-4bda-950f-0754400a1d00",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Gates",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "S27_GuestCounts[Gate of the World (GOTW-A)]+S27_GuestCounts[Cultural Gate (CG)]+[HappinessGate_S27]",
            "isDataTypeInferred": true,
            "lineageTag": "a9596a38-d75b-488c-8c46-ce1ff8aae3e8",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "VIP_Gates",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "S27_GuestCounts[VIP - cultural gate S27]+S27_GuestCounts[VIP - main gate S27]+S27_GuestCounts[VIP-Happiness Gate]",
            "isDataTypeInferred": true,
            "lineageTag": "2f384139-4fd8-470e-b77b-135cc3452852",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Complimentary Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "// S27_GuestCounts[Complimentary A Ticket]+S27_GuestCounts[Complimentary Ticket E]+S27_GuestCounts[GV CEO Complimentary Ticket]+S27_GuestCounts[Family packs Comp]+S27_GuestCounts[Emirates Airline Promotion - Comp]+S27_GuestCounts[Govt# Authority Complimentary Ticket]+S27_GuestCounts[Mystery Shopper Complimentary]+S27_GuestCounts[Security Complimentary Ticket]+S27_GuestCounts[Employee and other comps# Total]",
              "// +",
              "S27_GuestCounts[VIP Comps Total] + S27_GuestCounts[Entries from complimentaries]"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "9819e3c4-3963-4183-8dfd-e50eeb3c657a",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "FreeEntries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "S27_GuestCounts[Senior citizen over 65 years]+S27_GuestCounts[Child under 3 years]+S27_GuestCounts[People of Determination + Assistant]",
            "isDataTypeInferred": true,
            "lineageTag": "434db407-d1dc-486e-bc60-56d199665f00",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Prepurchased",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "S27_GuestCounts[VIP_Gates]+S27_GuestCounts[Family packs]",
            "isDataTypeInferred": true,
            "lineageTag": "7a412c0a-3172-4f7e-a2c7-6d7dfc44b906",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "B2B Cooperate and Travel Agents",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "[Travel agents (WEB B2B)]+[Fazaa/DXB]//+[Travel agents Comp (B2B Entry Ticket C)]",
            "isDataTypeInferred": true,
            "lineageTag": "98fb544d-e551-4174-9ed9-415ca4a867f3",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "B2C-Any Day General Admission(DPR Promotion)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "lineageTag": "fcd856cb-96a1-4412-9665-2c199ee7735f",
            "sourceColumn": "B2C-Any Day General Admission(DPR Promotion)",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a3791d30-52c4-4847-b5e0-d2fb035d3e9e",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "971f945c-fd4b-4f85-8b7f-fb8867b7f81a",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e013d298-e07d-4a1f-8140-4de5e45b25d8",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "dbe6300b-79fd-432e-8a57-7270f2e946c6",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0aeeefb1-bdac-48a5-a968-f59bd313b55a",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "03f31f6b-c2ad-4088-8006-071611fce0c9",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "Complimentary Tickets2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a8d03589-ff29-471c-a9ee-8091221e01ae",
            "sourceColumn": "Complimentary Tickets2",
            "summarizeBy": "sum"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('S27_GuestCounts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "cde689db-5f5c-459e-b449-1326cf80f0ad",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('S27_GuestCounts'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "d62f70cb-b6a5-498f-82f3-5b3903f17061",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Fazza Prepurchased",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "S27_GuestCounts[Fazza - cultural gate]+S27_GuestCounts[Fazza - main gate]+S27_GuestCounts[Fazza-Happiness Gate]",
            "isDataTypeInferred": true,
            "lineageTag": "d79681e1-e96f-433e-b6eb-7f4f8c0eb3d3",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3e420100-09e8-4f4e-9e52-19d649ec3e4d",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8f16d647-3c48-4b88-9680-e75f235a824a",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>=DATE(2022,1,1), WEEKDAY([Date]-2) , WEEKDAY([Date])-1 )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "baa91d57-f7c4-4a5e-8844-a9fd2537079d",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a9e8cabb-5a23-4377-8903-2b0a479617ba",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4cfef098-3c36-4d3b-9cca-88deb6149e64",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "e5792502-a396-4f9e-b01d-84d4754305c3",
        "measures": [
          {
            "name": "B2C_GateTickets",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(SUM(S27_GuestCounts[Daily ticket sales]))",
            "lineageTag": "70c084df-434f-4e48-9090-e8c425ae3e87"
          },
          {
            "name": "Footfall_S27",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "    CALCULATE(SUM('S27_GuestCounts'[Total park attendance]))",
              ""
            ],
            "lineageTag": "88930732-8b1b-45cb-baa0-c88b574784b0"
          },
          {
            "name": "tickets_S27",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUM(S27_GuestCounts[Daily ticket sales])",
            "lineageTag": "c7e97470-4969-4225-ac2c-e943a224a0d5"
          }
        ],
        "partitions": [
          {
            "name": "S27_GuestCounts-050568d0-0a63-4f6b-9e07-98e7ded8ee05",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    S27_GuestCounts1 = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"S27_GuestCounts\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(S27_GuestCounts1,{{\"Date\", type date}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Forecast",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "DATE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "aec50d69-37ee-4917-9544-532225c7053a",
            "sourceColumn": "DATE",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "c23fcfac-24d7-4072-87da-a1794928682b",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "8d626ff9-bf57-4f81-a6d8-297caed854df",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "4554f428-f38a-43bb-b66d-c028c8b0c31a",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "a2866e59-ba6c-403a-83cb-bbac30400b4c",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "c8d9c32e-c26e-48a3-8d60-3fdf701c3336",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "c8ee8a31-4344-4db9-97e9-8961196d6040",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "abb650a7-eea4-470e-be26-68d26357d905",
            "sourceColumn": "Complimentary Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Visitation (Tickets Utilized) 1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6e5d236c-d967-42f6-a919-63a5dfb6a368",
            "sourceColumn": "Total Visitation (Tickets Utilized) 1",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "86c80bbf-c4f8-4c0c-a343-4b5a276f4523",
            "sourceColumn": "B2C : Gate Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8036c9a5-8f35-4003-bfba-4d6e0d931e9b",
            "sourceColumn": "B2C : Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "678cb41e-1bce-40aa-b49f-a014fdafe21e",
            "sourceColumn": "B2C : Gate and Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f7877cd6-90ad-4751-a670-dee5b44ec700",
            "sourceColumn": "B2B : Corporate and Travel Agents Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Ticket Revenue 2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4c34fff2-e467-4f88-97a0-a17b48055d3f",
            "sourceColumn": "B2C + B2B Ticket Revenue 2",
            "summarizeBy": "sum"
          },
          {
            "name": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "c836e1ba-eb48-41a5-9d1a-fa088ab5b1f1",
            "sourceColumn": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "summarizeBy": "sum"
          },
          {
            "name": "STUNT SHOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6c84067d-8860-4755-be41-d949f1149d51",
            "sourceColumn": "STUNT SHOW",
            "summarizeBy": "sum"
          },
          {
            "name": "RIPLEYS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "183c2f79-6285-4976-977e-b1fc90a9fd96",
            "sourceColumn": "RIPLEYS",
            "summarizeBy": "sum"
          },
          {
            "name": "PETER RABBIT 4",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "0",
            "lineageTag": "87d93d0f-0830-4c07-9bfa-7f951ab394b0",
            "sourceColumn": "PETER RABBIT 4",
            "summarizeBy": "sum"
          },
          {
            "name": "VALET AND VIP PARKING",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b6ac5a94-2791-4cfd-807a-751d9bc39125",
            "sourceColumn": "VALET AND VIP PARKING",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Operating Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f1d1f428-c081-47f0-824a-ca3bfaf98a52",
            "sourceColumn": "Total Operating Revenue",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "749b88ae-a453-40f8-900d-7237381cbed8",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "69bb8a12-87a6-414a-a0e2-70e6536e2965",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>DATE(2022,1,1),[day_num_tag],[day_num_tag]+1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "848de455-a08c-462e-b921-3990308dda01",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('Forecast'[DATE])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "4732ba6d-1297-4b60-b5fe-294943958b74",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Forecast'[DATE])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "75d1820f-6d1d-4d1f-b466-17b5b6d5b30e",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>=DATE(2022,1,1), WEEKDAY([Date]-2) , WEEKDAY([Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "bbbcda2f-da09-457f-be50-747115dc0548",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "expression": "Related('GuestCounts'[new_week_num])//IF([Date]>=DATE(2022,1,1),IF('Forecast'[WeekdayNum]=1 && 'Forecast'[day_num_tag_shifted]<>1,'Forecast'[week_num]+1,'Forecast'[week_num]),'Forecast'[week_num])",
            "isDataTypeInferred": true,
            "lineageTag": "30fca0b0-f18f-4e35-b553-b558f800261a",
            "summarizeBy": "sum",
            "type": "calculated"
          }
        ],
        "lineageTag": "cb2e19e0-191d-4c82-9084-454e2d07cc14",
        "measures": [
          {
            "name": "B2C_GateTickets_Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR max_date=selected_park_days",
              "",
              "Return CALCULATE(SUM([B2C : Gate Tickets]),'Forecast'[Season_ID]=selectedseason,'Forecast'[DATE]<=max_date)"
            ],
            "lineageTag": "6471447c-6675-49e7-a478-748541c3fed9"
          },
          {
            "name": "B2C_GateTickets_Forecast_entire_season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "CALCULATE(SUM([B2C : Gate Tickets]),'Forecast'[Season_ID]=27)",
              "",
              "",
              "// CALCULATE(SUM([B2C : Gate Tickets]))"
            ],
            "lineageTag": "a063e7b1-a57b-447d-9e54-9d1827f77e47"
          },
          {
            "name": "Visitation_Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "",
              "",
              "VAR selectedseason = 27 ",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "VAR max_date=selected_park_days",
              "",
              "",
              "Return CALCULATE(SUM('Forecast'[Total Visitation (Tickets Utilized) 1]),FILTER('Forecast','Forecast'[Season_ID]=selectedseason&&'Forecast'[day_num_tag_shifted]<=max_date))"
            ],
            "lineageTag": "0dc2d6fe-eba7-4b55-9852-5056ea8e7002"
          },
          {
            "name": "B2B_CorporateTickets_Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27",
              "",
              "// VAR max_date=MAX('Sales Data all Seasons' [Date])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR max_date=selected_park_days",
              "Return CALCULATE(SUM([B2B : Corporate and Travel Agents Tickets]),'Forecast'[DATE]<=max_date)"
            ],
            "lineageTag": "8519ef12-f2d0-45e6-9054-7fcaf8d8ba83"
          },
          {
            "name": "Variance Forecast %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "VAR max_date=selected_park_days",
              "",
              "Return ",
              "DIVIDE('Forecast'[Variance Forecast],CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[Season_ID]=selectedseason))",
              " ",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "e7357a45-71ce-4bb1-b300-1ab33807a513"
          },
          {
            "name": "Actual Value vs Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              " ",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR min_date=selected_park_days_min",
              "VAR max_date=selected_park_days",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "// Var vall=",
              "// CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)",
              "// -ABS('Forecast'[Variance Forecast])",
              "Var vall=IF('Forecast'[Variance Forecast]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Forecast'[Variance Forecast]))",
              "",
              "",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "5d61e8f3-476f-40d2-92e3-3caf2d9c30c3"
          },
          {
            "name": "Over Target Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Forecast'[Variance Forecast]>0,'Forecast'[Variance Forecast])",
              ""
            ],
            "lineageTag": "9fc53894-5c09-4694-866f-23c05d9704a1"
          },
          {
            "name": "Under Target forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Forecast'[Variance Forecast]<0,ABS('Forecast'[Variance Forecast]))",
              ""
            ],
            "lineageTag": "9bd5cebc-b443-4109-a3fb-4d1eb0cfeb9f"
          },
          {
            "name": "Variance Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "VAR max_date=selected_park_days",
              "",
              "// Return ",
              "//  CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),FILTER('GuestCounts','GuestCounts'[day_num_tag]<=max_date)) -CALCULATE(SUM(,'GuestCounts'[day_num_tag_shifted]<=max_date,Kaizen Modelling'[Kaizen - B2C Visitation(2022-09-28 Projection)]),FILTER('Kaizen Modelling','Kaizen Modelling'[day_num_tag]<=max_date))",
              "",
              "",
              "Return ",
              " CALCULATE(",
              "     SUM('GuestCounts'[Total_Park_Attendence]),",
              "     FILTER('GuestCounts',",
              "     [Season_id]=selectedseason  && 'GuestCounts'[day_num_tag_shifted]<=max_date)) ",
              " -",
              " CALCULATE(SUM('Forecast'[Total Visitation (Tickets Utilized) 1]),",
              " FILTER('Forecast',",
              " 'Forecast'[Season_id]=selectedseason && 'Forecast'[day_num_tag_shifted]<=max_date))",
              ""
            ],
            "lineageTag": "8e2337b4-ba11-441d-9b9f-61a12c886651"
          },
          {
            "name": "Days Target Missed vs Forecast",
            "expression": [
              "",
              "VAR count_below_Target=",
              "COUNTROWS(",
              "    FILTER(",
              "        Forecast,",
              "        'Forecast'[Visitation_Forecast]>",
              "        'Footfall Measures'[S27 park footfall all days to date]",
              "    ))",
              "",
              "Return IF(count_below_Target=BLANK(),0,count_below_Target)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "460adbde-6538-4a49-9b7f-89380cd0b389"
          },
          {
            "name": "Forecast_tickets_selected_season",
            "expression": [
              "",
              " ",
              "VAR selectedseason = 27 // SELECTEDVALUE('GuestCounts'[Season_id])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "",
              "",
              "VAR max_date=selected_park_days",
              "",
              "RETURN ",
              "    CALCULATE(SUM('Forecast'[B2C : Gate Tickets]),FILTER('Forecast','Forecast'[Season_ID]=selectedseason &&'Forecast'[day_num_tag_shifted]<=max_date)",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "e87747c0-8d02-4322-a862-3b2d9d7fbb06"
          },
          {
            "name": "Days Target Met vs Forecast",
            "expression": [
              "",
              "",
              "COUNTROWS(",
              "    FILTER(",
              "        Forecast,",
              "        'Forecast'[Visitation_Forecast]<",
              "        'Footfall Measures'[S27 park footfall all days to date]",
              "    ))"
            ],
            "formatString": "0",
            "lineageTag": "18ca60f9-01d5-41af-843a-9b218361f26e"
          },
          {
            "name": "Forecast_tickets_selected_season max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              " ",
              "VAR selectedseason = 27 ",
              "RETURN ",
              "    CALCULATE(SUM('Forecast'[B2C : Gate Tickets]),FILTER('Forecast','Forecast'[Season_ID]=selectedseason)",
              ")"
            ],
            "lineageTag": "f014aabe-5d7e-418e-8428-bc56cbc8f4db"
          },
          {
            "name": "S27 vs Forecast tickets",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('S27_GuestCounts'[tickets_S27]-'Forecast'[Forecast_tickets_selected_season])/'Forecast'[Forecast_tickets_selected_season]",
            "lineageTag": "ca62b3f5-991b-4da3-8a27-7b0c2986aef0"
          },
          {
            "name": "Visitation_Forecast max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = 27 // SELECTEDVALUE('GuestCounts'[Season_id])",
              "",
              "Return CALCULATE(SUM([Total Visitation (Tickets Utilized) 1]),'Forecast'[Season_ID]=selectedseason)"
            ],
            "lineageTag": "4871c358-ff4c-4282-badb-9fbcfebb08e2"
          },
          {
            "name": "S27 vs Forecast visitation",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('S27_GuestCounts'[Footfall_S27]-'Forecast'[Visitation_Forecast])/'Forecast'[Visitation_Forecast]",
            "lineageTag": "0af51821-3e5b-4f04-ace7-bcee91966db1"
          },
          {
            "name": "S27 Actual Value vs Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              " ",
              "",
              "VAR selectedseason = 27",
              "",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR min_date=selected_park_days_min",
              "VAR max_date=selected_park_days",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              "",
              "Var vall=IF('Forecast'[S27 Variance Forecast]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Forecast'[S27 Variance Forecast]))",
              "",
              "",
              "RETURN IF(vall<0,0,vall)",
              ""
            ],
            "lineageTag": "11096ad3-02d0-481d-aa3e-51f199251ecb"
          },
          {
            "name": "S27 Variance Forecast",
            "expression": [
              "",
              "",
              "VAR selectedseason = 27",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR max_date=selected_park_days",
              "",
              "Return ",
              " CALCULATE(",
              "     SUM('GuestCounts'[Total_Park_Attendence]),",
              "     FILTER('GuestCounts',",
              "     [Season_id]=selectedseason&& 'GuestCounts'[day_num_tag_shifted]<=max_date)) ",
              " -",
              " CALCULATE(SUM('Forecast'[Total Visitation (Tickets Utilized) 1]),",
              " FILTER('Forecast',",
              " 'Forecast'[Season_id]=selectedseason && 'Forecast'[day_num_tag_shifted]<=max_date))",
              ""
            ],
            "formatString": "0",
            "lineageTag": "6e48c0b8-bcf8-4327-b04d-86ac506e0cbd"
          },
          {
            "name": "S27 Over Target Forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Forecast'[S27 Variance Forecast]>0,'Forecast'[S27 Variance Forecast])",
              ""
            ],
            "lineageTag": "61bb680d-d8a8-4fa7-ab15-5f398c682424"
          },
          {
            "name": "S27 Under Target forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Forecast'[S27 Variance Forecast]<0,ABS('Forecast'[S27 Variance Forecast]))",
              ""
            ],
            "lineageTag": "18d24256-9cbc-46bb-89dd-e872f37b0b48"
          },
          {
            "name": "Selected Season forecast",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason= SELECTEDVALUE('Selected Season'[SeasonID])",
              "REturn Calculate(SUM('Forecast'[Total Visitation (Tickets Utilized) 1]),'Forecast'[Season_ID]=selectedseason)"
            ],
            "lineageTag": "6611bb04-c108-49d1-a52c-da2670cc16f7"
          },
          {
            "name": "Forecast Accuracy",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR max_date=selected_park_days",
              "//  1 - (ABS( 'Forecast'[Variance Forecast]) / SUM('Forecast'[Total Visitation (Tickets Utilized) 1]))",
              "//  REturn ABS( 'Forecast'[Variance Forecast]) /",
              "Return  1 - (ABS( 'Forecast'[Variance Forecast]) /CALCULATE(",
              "     SUM('GuestCounts'[Total_Park_Attendence]),",
              "     FILTER('GuestCounts',",
              "     [Season_id]=selectedseason  && 'GuestCounts'[day_num_tag_shifted]<=max_date)) )"
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "b2ec9c55-1bfb-4760-a89e-be388cc9fb9f"
          },
          {
            "name": "Days Target Missed vs Forecast Last 7 days",
            "expression": [
              "",
              "VAR last_date=Calculate(Max('GuestCounts'[day_num_tag_shifted])-7,'GuestCounts'[Season_ID]=27)",
              "VAR count_below_Target=",
              "COUNTROWS(",
              "    FILTER(",
              "        Forecast,",
              "        ('Forecast'[Visitation_Forecast]>",
              "        'Footfall Measures'[S27 park footfall all days to date])",
              "         &&( 'Forecast'[day_num_tag_shifted]>last_date))",
              "",
              "    )",
              "",
              "Return IF(count_below_Target=BLANK(),0,count_below_Target)",
              ""
            ],
            "formatString": "0",
            "lineageTag": "a0c5be8d-c090-4a43-a96b-0cb14548eec2"
          },
          {
            "name": "S27 current target footfall vs goal %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR precentage= 'Footfall Measures'[S27 park footfall] /'Forecast'[Visitation_Forecast]",
              "Return precentage-1",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "38e7ef3a-fe9f-415f-a9cd-1d6eafc8caf5"
          },
          {
            "name": "S27 running forecast footfall vs goal %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "'Footfall Measures'[S27 park footfall] ",
              "/",
              "'Forecast'[Visitation_Forecast max]",
              "",
              ""
            ],
            "lineageTag": "62a3e77d-f822-4cd6-bb1a-c21f2e1e85df"
          },
          {
            "name": "Max",
            "expression": "9000000",
            "formatString": "0",
            "lineageTag": "df63b0f4-f0dd-43d7-9682-67560dae40bf"
          }
        ],
        "partitions": [
          {
            "name": "Forecast-1df45f6f-e4d9-4452-9023-77505d8dcd52",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"Forecast.xlsx\")),",
                "    #\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\" = #\"Filtered Rows\"{[Name=\"Forecast.xlsx\",#\"Folder Path\"=\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00. Dashbaords/S27 Dashboards/HOD S27/\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\"),",
                "    Sheet1_Sheet = #\"Imported Excel Workbook\"{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"day_num_tag\", Int64.Type}, {\"DATE\", type date}, {\"B2C : Gate Tickets\", type number}, {\"B2C : Online Tickets\", type number}, {\"B2C : Gate and Online\", type number}, {\"B2B : Corporate and Travel Agents Tickets\", type number}, {\"B2C + B2B Tickets\", type number}, {\"Pre-purchased Pack Tickets\", type number}, {\"Complimentary Tickets\", type number}, {\"Total Visitation (Tickets Utilized) 1\", type number}, {\"B2C : Gate Sales\", type number}, {\"B2C : Online Sales\", type number}, {\"B2C : Gate and Online Sales\", type number}, {\"B2B : Corporate and Travel Agents Sales\", type number}, {\"B2C + B2B Ticket Revenue 2\", type number}, {\"CARNAVAL : GV Rides + 3rd Party Games 3\", type number}, {\"STUNT SHOW\", type number}, {\"RIPLEYS\", type number}, {\"PETER RABBIT 4\", type number}, {\"VALET AND VIP PARKING\", type number}, {\"Total Operating Revenue\", type number}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Pav Sensor Footfall by Hour",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "04326d26-c054-4573-99f5-c6d361b45919",
            "sourceColumn": "Operation_Date",
            "summarizeBy": "none"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d73fdcbb-a582-40d5-97f3-fd77ca65f643",
            "sourceColumn": "Location_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "57484370-c2b1-4ebd-a336-8d8acd9b145e",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Entry_Hour",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6afab028-9952-4235-83e3-31875bc49db8",
            "sourceColumn": "Entry_Hour",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "439fd111-64e6-4673-a770-bcf12e2954b1",
            "sourceColumn": "Total_Entries",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5fc628b3-2c7f-4561-b93a-321662f2a57c",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "232c52a9-682a-45cf-8b3d-206c74df411b",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "df6967f4-6192-4571-a78d-164fee56938b",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Operation_Date]>DATE(2022,1,1),[day_num_tag],[day_num_tag]+1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "3adf4efa-b591-4668-ac6e-c4cedcf4bced",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE([Season_ID],[Location_id])",
            "isDataTypeInferred": true,
            "lineageTag": "80c93ed6-6469-4372-af19-4a7313045f82",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "PEAKEntries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "VAR loc='Pav Sensor Footfall by Hour'[Location]",
              "VAR dates='Pav Sensor Footfall by Hour'[Operation_Date]",
              "Return CALCULATE(MAX('Pav Sensor Footfall by Hour'[Total_Entries]),Filter('Pav Sensor Footfall by Hour','Pav Sensor Footfall by Hour'[Location]=loc && 'Pav Sensor Footfall by Hour'[Operation_Date]=dates))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "9fa57704-1e27-41d9-b860-1c8f04a6b473",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "PEAK",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR loc='Pav Sensor Footfall by Hour'[Location]",
              "VAR dates='Pav Sensor Footfall by Hour'[Operation_Date]",
              "VAR peakk='Pav Sensor Footfall by Hour'[PEAKEntries]",
              "",
              "Return CALCULATE(MAX('Pav Sensor Footfall by Hour'[Entry_Hour]),Filter('Pav Sensor Footfall by Hour','Pav Sensor Footfall by Hour'[Location]=loc && 'Pav Sensor Footfall by Hour'[Operation_Date]=dates && 'Pav Sensor Footfall by Hour'[Total_Entries]=peakk))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "c182db75-3ce5-4697-a28a-e84605ffe363",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('Pav Sensor Footfall by Hour'[Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "5050a4d0-6670-468e-9628-ab8d03488868",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Pav Sensor Footfall by Hour'[Operation_Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "22bc5b0b-215d-4554-99c5-fad39b0f9293",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Operation_Date]>=DATE(2022,1,1), WEEKDAY([Operation_Date]-2) , WEEKDAY([Operation_Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "3948ef7b-6a2b-4892-b4ca-a8b8ad48f8e3",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "    'Pav Sensor Footfall by Hour'[Location] IN {\"CG\",\"GOW\",\"FAZZA CG\",\"FAZZA-CG\",\"FAZZA GOW\",\"FAZZA-GOW\",\"FAZZA_ENTRANCE_NEAR_GOW\",\"FAZZA_ENTRANCE_NEAR_CG\"},\"MAIN GATES\",",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"GOW  EXIT\",\"GOW EXIT\",\"GOW-EXIT\",\"CG EXIT\",\"CG-EXIT\", \"HG EXIT\"},\"EXIT\",",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"SIDEB-1-ENTRANCE1\"},\"OTHER ENTRANCES\",",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"AMERICA-EUROPE(INTERCONNETION)\",\"CWALK GOW\",\"CWALK-GOW\",\"CWALK-KIDS-THEATRE\",\"CWALK - GOW\",\"CWALK - KIDS THEATRE\",\"AMERICA-EUROPE(INTERCONNECTION)\"},\"PATHWAY\",",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"KIOSK-STREET-CANAL\",\"KIOSK-STREET-CULTURALHUB\"},\"KIOSKS & RESTAURANTS\" ,",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"RAIL MARKET\",\"ROAD OF ASIA\",\"FLOATING MARKET\",\"RIPLEYS LOBBY\",\"KIDS THEATRE\"},\"ATTRACTION\" ,",
              "       IF ('Pav Sensor Footfall by Hour'[Location] IN {\"FUN FAIR\",\"STUNT ARENA\"},\"Other ATTRACTION\" ,",
              "    ",
              "    IF ('Pav Sensor Footfall by Hour'[Location] IN {\"CAR COUNTING\",\"P1 OCCUPANCY\",\"P2 OCCUPANCY\",\"P3 OCCUPANCY\",\"P5 OCCUPANCY\",\"P6 OCCUPANCY\"},\"PARKING\",\"PAVILION\")))))))",
              "",
              ")"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "3205c004-77c3-4865-8ba2-74524ca15863",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "IF([Operation_Date]<=DATE(2022,1,1),IF('Pav Sensor Footfall by Hour'[WeekdayNum]=1  ,'Pav Sensor Footfall by Hour'[week_num]+1,'Pav Sensor Footfall by Hour'[week_num]),'Pav Sensor Footfall by Hour'[week_num])",
            "isDataTypeInferred": true,
            "lineageTag": "013fc8fd-d823-4301-bc38-2b7c358f2bb2",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('GuestCounts'[Date],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([Operation_Date],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([Operation_Date],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([Operation_Date],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([Operation_Date] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[Operation_Date]),",
              "                        IF (",
              "                            FORMAT([Operation_Date],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [Operation_Date] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [Operation_Date] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([Operation_Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",'Pav Sensor Footfall by Hour'[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))           ",
              "// SWITCH(FORMAT([Day_Type],\"dddd\"),\"Tuesday\",\"Family Day\",",
              "",
              "// DATE(2016,11,30),\"Martyr's Day\",",
              "// DATE(2017,11,30),\"Martyr's Day\",",
              "// DATE(2018,11,30),\"Martyr's Day\",",
              "// DATE(2019,11,30),\"Martyr's Day\",",
              "// DATE(2020,11,30),\"Martyr's Day\",",
              "// DATE(2021,11,30),\"Martyr's Day\",",
              "// DATE(2022,11,30),\"Martyr's Day\",",
              "// \"None\")",
              "",
              "// SWITCH(",
              "// VALUE(MAX('Pav Sensor + Park Footfall 2'[Day_Type])),",
              "// \"Tuesday\",\"Family Day\",",
              "// BLANK()",
              "// ),)))))))))))))))))))))))))))))))))))))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "2711ed58-f9f4-4c7f-b4c5-fed3de2ee360",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "FORMAT([Operation_Date],\"dddd\")",
            "isDataTypeInferred": true,
            "lineageTag": "5126d2bb-2526-444d-93ef-9f4445f7f0a0",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Operation_Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Saturday\" || FORMAT([Operation_Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Operation_Date],\"dddd\")=\"Friday\" || FORMAT([Operation_Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "0169a306-a1ae-414c-8cb7-f63a857718eb",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\",\"NYE\",",
              "   IF([Event] =\"NYD\",\"NYD\",",
              "   IF( [Event] =\"National Day\",\"National Day\",",
              "    IF([Event] =\"Martyr's Day\",\"Martyr's Day\",",
              "IF([Operation_Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "        ",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "d118d279-0b98-454a-9617-55f25f89f4b8",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE([Event],\" S\"&[Season_ID])",
            "isDataTypeInferred": true,
            "lineageTag": "3260cb22-6341-471a-8b52-7f0686dd942b",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "IF([Operation_Date] in VALUES(Concerts[Date]),LOOKUPVALUE(Concerts[Concert Type],Concerts[Date],[Operation_Date]),Blank())",
            "isDataTypeInferred": true,
            "lineageTag": "403cd126-e5af-4e31-a934-1244576868ea",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "21d33403-ac4c-4c45-bc58-2dd9dfeb4625",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          }
        ],
        "lineageTag": "b2e93ed1-0bec-4320-b7a2-c67d9898fc03",
        "measures": [
          {
            "name": "Peak Selected Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "    Filter('Pav Sensor Footfall by Hour',",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=selectedseason &&",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]<=max_date&&",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "      FILTER(('Pav Sensor Footfall by Hour'),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=selectedseason))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "15aaef70-7dd8-4c3a-b7af-9fd4ad7003c6"
          },
          {
            "name": "Top Hour",
            "expression": [
              "",
              "VAR selectedseason = 27 //SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = 26 //SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "FIRSTNONBLANK (",
              "    TOPN (",
              "        1, ",
              "        VALUES ( 'Pav Sensor Footfall by Hour'[PEAK] ), ",
              "        RANKX( ALL( 'Pav Sensor Footfall by Hour'[PEAK] ), [PEAK],,ASC)",
              "    ), ",
              "    1 ",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "2c325c17-60f0-45f7-a26a-6804a1e12f24"
          },
          {
            "name": "Peak Comapred Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "// SWITCH(ROUND(IF(like_to_like=\"Same # Of Days\",",
              "// CALCULATE(",
              "//     AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "//     'Pav Sensor Footfall by Hour'[Season_ID]=compare ,",
              "//     'Pav Sensor Footfall by Hour'[day_num_tag_shifted]<=max_date,",
              "//     'Pav Sensor Footfall by Hour'[day_num_tag_shifted]>=min_date ),",
              "//      CALCULATE(AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "//     'Pav Sensor Footfall by Hour'[Season_ID]=compare )),0),16,\"4:00 pm\", 17, \"5:00 pm\", 18, \"6:00 pm\", 19, \"7:00 pm\", 20 ,\"8:00 pm\", 21, \"9:00 pm\", 22, \"10:00 pm\",23,\"11:00 pm\",0,\"12:00 am\")",
              "SWITCH(MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=compare ,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]>=min_date ),",
              "     CALCULATE(AVERAGE('Pav Sensor Footfall by Hour'[PEAK]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=compare )),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "55c6e0ef-20f1-4cf9-9fbc-de43f525149f"
          },
          {
            "name": "AVG Pavilion_Footfall by hours compared_season chosen location",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE('Pav Sensor Footfall by Hour'[Total_Entries]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=compare,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]>=min_date),",
              "",
              "",
              " IF((like_to_like=\"ETD\"),",
              "     CALCULATE(AVERAGE('Pav Sensor Footfall by Hour'[Total_Entries]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=compare)))",
              ""
            ],
            "lineageTag": "8e1f528d-0dcd-4646-bf4a-aacaaf4c1363"
          },
          {
            "name": "AVG Pavilion_Footfall by hours selected season chosen location",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN  ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE('Pav Sensor Footfall by Hour'[Total_Entries]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=selectedseason,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]<=max_date,",
              "    'Pav Sensor Footfall by Hour'[day_num_tag_shifted]>=min_date),",
              "",
              "",
              " IF((like_to_like=\"ETD\"),",
              "     CALCULATE(AVERAGE('Pav Sensor Footfall by Hour'[Total_Entries]),",
              "    'Pav Sensor Footfall by Hour'[Season_ID]=selectedseason)))",
              ""
            ],
            "lineageTag": "7323564c-54bc-4aa9-ba0e-67df8d1abaf3"
          }
        ],
        "partitions": [
          {
            "name": "Pav Sensor Footfall by Hour-5cf7ec14-10f1-47cd-b126-5fb98ccdc428",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Pav Sensor Footfall by Hour1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Pav Sensor Footfall by Hour\"]}[Data]",
                "in",
                "    #\"Pav Sensor Footfall by Hour1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Kaizen Modelling",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "a06bd1de-60d8-431b-91d6-55a31ce6e4ce",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_af639e54-4966-46b3-b631-9b7e871976c6"
                },
                "isDefault": true,
                "relationship": "a3355d06-c28d-426c-b921-3354c75f2b9a"
              }
            ]
          },
          {
            "name": "Kaizen - B2C Visitation(2022-09-28 Projection)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5c242736-c41c-492d-8d7c-b34e7d422a62",
            "sourceColumn": "Kaizen - B2C Visitation(2022-09-28 Projection)",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Related('GuestCounts'[day_num_tag_shifted])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "9be616c0-7c6f-4766-b1ad-6417f1e05e2d",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('Kaizen Modelling'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ea4a1acb-fbef-4ec0-8e77-d4fd80da4837",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Kaizen Modelling'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "40c8ff61-cbc8-42c9-a4a2-65f7a63cfbf9",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>=DATE(2022,1,1), WEEKDAY([Date]-2) , WEEKDAY([Date]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "54562aff-1ff8-479b-ab33-9bccfa1192f0",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "expression": "Related('GuestCounts'[new_week_num])",
            "isDataTypeInferred": true,
            "lineageTag": "affa9825-3f0c-45c1-9cc8-166275c31fad",
            "summarizeBy": "sum",
            "type": "calculated"
          }
        ],
        "lineageTag": "0967cd79-6e58-43bc-8f0a-c56e602d02c9",
        "measures": [
          {
            "name": "Variance Kaizen",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =27// SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR max_date=selected_park_days",
              "",
              "Return ",
              " CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),FILTER('GuestCounts','GuestCounts'[day_num_tag]<=max_date)) -CALCULATE(SUM('Kaizen Modelling'[Kaizen - B2C Visitation(2022-09-28 Projection)]),FILTER('Kaizen Modelling','Kaizen Modelling'[day_num_tag_shifted]<=max_date))"
            ],
            "lineageTag": "4af7f10c-fc79-45fd-9042-35ec8352bea8"
          },
          {
            "name": "Variance Kaizen %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR max_date=MAX('GuestCounts'[day_num_tag])",
              "Return ",
              " DIVIDE('Kaizen Modelling'[Variance Kaizen],CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[day_num_tag_shifted]<=max_date&&'GuestCounts'[Season_ID]=27)))",
              " ",
              "//  ('Kaizen Modelling  (Sheet1)'[Variance Kaizen],CALCULATE(SUM('Kaizen Modelling  (Sheet1)'[Kaizen - B2C Visitation(2022-09-28 Projection)]),FILTER(ALL('Kaizen Modelling  (Sheet1)'),'Kaizen Modelling  (Sheet1)'[day_num_tag]<=max_date)))",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "805d3276-2cf6-4964-a746-70565a6a5302"
          },
          {
            "name": "Variance Compared",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              " ",
              "VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=compare)",
              "RETURN ",
              "IF(     ",
              "    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=compare_park_days) ",
              "    -    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=selected_park_days) ",
              "    ,",
              "        CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=compare_park_days) ",
              "    -    CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=selected_park_days) ",
              ")",
              "",
              " "
            ],
            "lineageTag": "a9bea54a-f115-497b-a5bc-f5668544b3fb"
          },
          {
            "name": "Variance Compared %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR max_date=MAX('GuestCounts'[day_num_tag])",
              "Return ",
              "//  DIVIDE('Kaizen Modelling'[Variance Compared],CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),FILTER('GuestCounts','GuestCounts'[day_num_tag]<=max_date && 'GuestCounts'[Season_ID]=27)))",
              "  DIVIDE('Kaizen Modelling'[Variance Compared],CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[day_num_tag]<=max_date,'GuestCounts'[Season_ID]=27))",
              "//  ('Kaizen Modelling  (Sheet1)'[Variance Kaizen],CALCULATE(SUM('Kaizen Modelling  (Sheet1)'[Kaizen - B2C Visitation(2022-09-28 Projection)]),FILTER(ALL('Kaizen Modelling  (Sheet1)'),'Kaizen Modelling  (Sheet1)'[day_num_tag]<=max_date)))",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "92449bcf-b58f-4a62-85d9-5e9fec2f8b98"
          },
          {
            "name": "Actual Value vs Kaizen",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason =27//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "",
              "",
              "",
              "Var selected_SeasonAttend=CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),Filter('GuestCounts','GuestCounts'[Season_ID]=selectedseason&&'GuestCounts'[day_num_tag_shifted]<=selected_park_days))//",
              "Var vall=IF('Kaizen Modelling'[Variance Kaizen]<0,selected_SeasonAttend,selected_SeasonAttend-ABS('Kaizen Modelling'[Variance Kaizen]))",
              "",
              "",
              "// Var vall=IF( ",
              "//   AND(like_to_like=\"Same # Of Days\",selected_park_days>compare_park_days),",
              "//     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date,ALLEXCEPT('GuestCounts','GuestCounts'[day_num_tag_shifted])),",
              "//     CALCULATE(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)   ",
              "// ) -ABS('Kaizen Modelling'[Variance Kaizen])",
              "RETURN ",
              "",
              "IF(vall<0,0,vall)",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "c9d835f0-168c-4563-8109-6a7b67697d83"
          },
          {
            "name": "Over Target",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Kaizen Modelling'[Variance Kaizen]>0,'Kaizen Modelling'[Variance Kaizen],0)",
              ""
            ],
            "lineageTag": "68d17d8b-23da-46e0-9cfd-f63280a7ad63"
          },
          {
            "name": "Under Target",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "IF ('Kaizen Modelling'[Variance Kaizen]<0,ABS('Kaizen Modelling'[Variance Kaizen]))",
              ""
            ],
            "lineageTag": "84d25fa2-9869-4d4e-a8ee-b9423f401fb5"
          },
          {
            "name": "Kaizen Accuracy",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_ID]=selectedseason)",
              "",
              "",
              "VAR max_date=selected_park_days",
              "//  1 - (ABS( 'Forecast'[Variance Forecast]) / SUM('Forecast'[Total Visitation (Tickets Utilized) 1]))",
              "//  REturn ABS( 'Forecast'[Variance Forecast]) /",
              "Return  1 - (ABS( 'Kaizen Modelling'[Variance Kaizen]) /CALCULATE(",
              "     SUM('GuestCounts'[Total_Park_Attendence]),",
              "     FILTER('GuestCounts',",
              "     [Season_id]=selectedseason  && 'GuestCounts'[day_num_tag_shifted]<=max_date)) )"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "55b0c06a-1c7d-407a-ab9e-c5cbf27abe07"
          },
          {
            "name": "S27 Kaizen footfall",
            "expression": [
              "",
              "VAR selectedseason = 27",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_id]=selectedseason)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "",
              "RETURN ",
              "CALCULATE(SUM('Kaizen Modelling'[Kaizen - B2C Visitation(2022-09-28 Projection)]),'Kaizen Modelling'[day_num_tag_shifted]<=selected_park_days,'Kaizen Modelling'[day_num_tag_shifted]>=selected_park_days_min)  ",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "8e2ba9d4-a32a-4cd3-95d4-04f4ab4f8d0b"
          },
          {
            "name": "S27 running Kaizen footfall vs goal %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "'Footfall Measures'[S27 park footfall] ",
              "/",
              "CALCULATE(SUM('Kaizen Modelling'[Kaizen - B2C Visitation(2022-09-28 Projection)])) ",
              "",
              ""
            ],
            "lineageTag": "04413e2a-0f68-4814-9e51-7a74b6b1ab2a"
          },
          {
            "name": "S27 current Kaizen footfall vs goal %",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "",
              "VAR precentage= 'Footfall Measures'[S27 park footfall] /'Kaizen Modelling'[S27 Kaizen footfall]",
              "Return precentage-1",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d4cabc71-447d-48d5-86c8-537f8204ae64"
          }
        ],
        "partitions": [
          {
            "name": "Kaizen Modelling-050a4cac-1373-45c7-9132-74fb7fbb81ed",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"S27 Kaizen Pricing.xlsx\")),",
                "    #\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\" = #\"Filtered Rows\"{[Name=\"S27 Kaizen Pricing.xlsx\",#\"Folder Path\"=\"https://dubaiholding.sharepoint.com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00. Dashbaords/S27 Dashboards/HOD S27/\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"Events xlsx_https://dubaiholding sharepoint com/sites/DHEIT-FinanceShared/Shared Documents/GV Dataflow/Lana Alhaj - Handover - DHE Data Scientist/GV/00  Dashbaords/S27 Dashboards/HOD S27/\"),",
                "    Sheet1_sheet = #\"Imported Excel Workbook\"{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),",
                "    #\"Removed Bottom Rows\" = Table.RemoveLastN(Sheet1_sheet, each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),",
                "    #\"Removed Top Rows\" = Table.Skip(#\"Removed Bottom Rows\", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Top Rows\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Date\", type date}, {\"Kaizen - B2C Visitation#(lf)#(lf)(2022-09-28 Projection)\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Sales Data all Seasons",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5c13b90a-da57-41b9-8377-1cbc15ffeda5",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9724960b-5e55-43dc-b67a-d7fd6d803eb5",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "01fe1e96-a9eb-404e-b8f8-50e0beee38eb",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6977a2d7-b751-4ddb-b713-8e9305fc817c",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "fd25a8af-208b-43e5-b630-abee3e3f67ef",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "65b84525-0327-4486-b472-143936b04551",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bb1d613f-a65d-4021-a345-0779e2645390",
            "sourceColumn": "B2C : Gate Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ea68130c-311c-40b1-8609-befe37228347",
            "sourceColumn": "B2C : Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fa167fc0-9b8b-4ee8-be6a-690cff27e942",
            "sourceColumn": "B2C : Gate and Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e4582078-cabb-4f13-b79a-faee211366ab",
            "sourceColumn": "B2B : Corporate and Travel Agents Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Ticket Revenue 2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1dae2ecf-c6ad-43da-a069-82a75a9cce65",
            "sourceColumn": "B2C + B2B Ticket Revenue 2",
            "summarizeBy": "sum"
          },
          {
            "name": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "eb4ead70-d4a1-4dcd-86b2-7289d00e415e",
            "sourceColumn": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "summarizeBy": "sum"
          },
          {
            "name": "STUNT SHOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "90283f21-6adb-4d56-98af-7b24f263fb7e",
            "sourceColumn": "STUNT SHOW",
            "summarizeBy": "sum"
          },
          {
            "name": "RIPLEYS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c521633c-b087-42a9-bd8d-421bfd2399a1",
            "sourceColumn": "RIPLEYS",
            "summarizeBy": "sum"
          },
          {
            "name": "PETER RABBIT 4",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d5bd79ae-fd0e-4770-b80a-0706bfb0b728",
            "sourceColumn": "PETER RABBIT 4",
            "summarizeBy": "sum"
          },
          {
            "name": "VALET AND VIP PARKING",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "648e52bc-0a40-4186-8f0f-b22b33c46031",
            "sourceColumn": "VALET AND VIP PARKING",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Operating Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9834448e-4bea-4586-a3da-9ada01a174af",
            "sourceColumn": "Total Operating Revenue",
            "summarizeBy": "sum"
          },
          {
            "name": "Total park attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "521d0fc9-6402-4818-a643-31b5384235f5",
            "sourceColumn": "Total park attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C-Any Day General Admission(DPR Promotion)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "45dbbb97-e2c7-46ce-bf65-59102f7e8b08",
            "sourceColumn": "B2C-Any Day General Admission(DPR Promotion)",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentry Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a61f7a71-afb6-422d-a145-6febb350fe5d",
            "sourceColumn": "Complimentry Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag_Shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE('GuestCounts'[day_num_tag_Shifted],",
              "'GuestCounts'[Date],'Sales Data all Seasons'[Date]",
              ")"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "e993c208-fd6e-43ef-b06f-d8ae3a9605c2",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Month('Sales Data all Seasons'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "9b806a41-5c51-4c12-8856-3ae3f20961f7",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Year('Sales Data all Seasons'[Date])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "ddc93469-88d0-4111-82dc-6a29845df018",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "18ce4049-088c-439f-9887-c80f991e7611",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ff3a00bf-472f-4411-8c0a-ed1080a8bdaf",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "sum"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Date]>=DATE(2022,1,1), WEEKDAY([Date]-2) , WEEKDAY([Date]) -1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "b08eebd9-72f0-4037-8e9f-204ab8a79626",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "002c3e36-ffeb-45a1-9ed7-477c0247bc13",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_c7c4d261-be9f-4768-b288-545de5fe5221"
                },
                "isDefault": true,
                "relationship": "fe21a0f8-091c-4d36-a4f1-17ed079a02ad"
              }
            ]
          },
          {
            "name": "Season_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "32882bd9-87b2-4270-b31a-e8e7eb55673b",
            "sourceColumn": "Season_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "96a1f3ac-755b-47e0-b8d0-8ca1bd23ca1f",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          }
        ],
        "excludeFromModelRefresh": true,
        "lineageTag": "e7112529-eac7-41d8-a8bc-1e87a7c98db7",
        "measures": [
          {
            "name": "B2B comapred",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets]), 'Sales Data all Seasons'[Season_id]=compare,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets]), 'Sales Data all Seasons'[Season_id]=compare)))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "formatString": "0",
            "lineageTag": "f00a6598-9c37-4946-8bc2-4f51f3179d66"
          },
          {
            "name": "B2B selected",
            "expression": [
              "",
              "",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason)))",
              "        ",
              ""
            ],
            "formatString": "0",
            "lineageTag": "bff5c3f9-ee11-4132-8c2f-6ec5d7767792"
          },
          {
            "name": "B2C gate tickets selected",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason)))",
              "        ",
              ""
            ],
            "formatString": "0",
            "lineageTag": "f21a962f-badd-40a1-9ce1-2e451b8662b4"
          },
          {
            "name": "B2C gate tickets compared",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]), 'Sales Data all Seasons'[Season_id]=compare,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]), 'Sales Data all Seasons'[Season_id]=compare)))",
              "        ",
              ""
            ],
            "formatString": "0",
            "lineageTag": "512e3288-b7a6-45f9-bfc9-2731f3f917ff"
          },
          {
            "name": "B2C online tickets compared",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets]), 'Sales Data all Seasons'[Season_id]=compare ,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets]), 'Sales Data all Seasons'[Season_id]=compare)))",
              "  "
            ],
            "formatString": "0",
            "lineageTag": "d2e3693c-7f68-4e9d-a131-ebf053f6c27d"
          },
          {
            "name": "B2C online tickets selected",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date,ALL()),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason)))",
              " "
            ],
            "formatString": "0",
            "lineageTag": "d83db9fe-cca7-4a2d-9cc7-7205a646e87e"
          },
          {
            "name": "Complimentray selected",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason)))",
              "  "
            ],
            "formatString": "0",
            "lineageTag": "e43cf394-1948-4c00-bf1a-ba4e88489fee"
          },
          {
            "name": "Prepurchesd compared",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets]), 'Sales Data all Seasons'[Season_id]=compare,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets]), 'Sales Data all Seasons'[Season_id]=compare)))",
              ""
            ],
            "formatString": "0",
            "lineageTag": "cc4cebf9-48a8-4aba-a06f-bb7254c7fd49"
          },
          {
            "name": "Prepurchesd selected",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets]), 'Sales Data all Seasons'[Season_id]=selectedseason)))",
              ""
            ],
            "formatString": "0",
            "lineageTag": "c73aaa9c-8315-454a-aa53-8bdc292df27b"
          },
          {
            "name": "Total Atten selected",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "Var selected=Selectedvalue('GuestCounts'[Season_ID])",
              "    ",
              "Return CALCULATE(SUM('Sales Data all Seasons'[Total park attendance]), 'Sales Data all Seasons'[Season_id]=selected)"
            ],
            "lineageTag": "e3cbd999-aa90-42c9-b784-0ed1b8ff8720"
          },
          {
            "name": "Total Atten compared",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "Var compared=Selectedvalue('Compare with'[Value])",
              "    ",
              "Return CALCULATE(SUM('Sales Data all Seasons'[Total park attendance]), 'Sales Data all Seasons'[Season_id]=compared,ALL())"
            ],
            "lineageTag": "d489b6e9-7638-4a77-a321-72a18df5ec7c"
          },
          {
            "name": "Complimentray compared",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets]), 'Sales Data all Seasons'[Season_id]=compare,    'Sales Data all Seasons'[day_num_tag_shifted]<=max_date,'Sales Data all Seasons'[day_num_tag_shifted]>=min_date),",
              "IF(like_to_like=\"ETD\",",
              "     CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets]), 'Sales Data all Seasons'[Season_id]=compare)))"
            ],
            "formatString": "0",
            "lineageTag": "7c33217f-4d9b-4070-a44b-6a3bffae371e"
          },
          {
            "name": "Seasons filter",
            "expression": [
              "",
              "Var selectedseason=SELECTEDVALUE('Selected Season'[SeasonID])",
              "Var compare = SELECTEDVALUE('Compare with'[Value])",
              "Var season=Calculate(DISTINCT('Sales Data all Seasons'[Season_id]))",
              "Return IF(season in{selectedseason,compare}, season)"
            ],
            "formatString": "0",
            "lineageTag": "5fc6d227-e5dd-4d08-bb3b-7f7786cc624d"
          },
          {
            "name": "B2B",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets]),Filter('Sales Data all Seasons','Sales Data all Seasons'[day_num_tag_shifted]<=max_date&&'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2B : Corporate and Travel Agents Tickets])))",
              "        ",
              "",
              "",
              "",
              " "
            ],
            "formatString": "0",
            "lineageTag": "8513062a-b582-4858-9e04-708a7684de48"
          },
          {
            "name": "B2C gate",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "        ",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets]),Filter('Sales Data all Seasons','Sales Data all Seasons'[day_num_tag_shifted]<=max_date&&'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Gate Tickets])))",
              "",
              "",
              " "
            ],
            "formatString": "0",
            "lineageTag": "f4d2f5f7-705c-463b-b2c6-5b7307f456c5"
          },
          {
            "name": "B2C online",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets]),Filter('Sales Data all Seasons','Sales Data all Seasons'[day_num_tag_shifted]<=max_date&&'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('Sales Data all Seasons'[B2C : Online Tickets])))",
              ""
            ],
            "formatString": "0",
            "lineageTag": "b73a0277-fa2e-4429-bc10-2831fd491c63"
          },
          {
            "name": "comp",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "        ",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets]),Filter('Sales Data all Seasons','Sales Data all Seasons'[day_num_tag_shifted]<=max_date&&'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('Sales Data all Seasons'[Complimentry Tickets])))",
              "",
              "",
              "",
              " "
            ],
            "formatString": "0",
            "lineageTag": "b679b2d8-0811-4811-8092-5b5b11689d60"
          },
          {
            "name": "prepurchased",
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Sales Data all Seasons'[day_num_tag_shifted]),'Sales Data all Seasons'[Season_ID]=compare)",
              "",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "RETURN ",
              "",
              "        ",
              "",
              "IF( like_to_like=\"Same # Of Days\",",
              "CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets]),Filter('Sales Data all Seasons','Sales Data all Seasons'[day_num_tag_shifted]<=max_date&&'Sales Data all Seasons'[day_num_tag_shifted]>=min_date)),",
              "     CALCULATE(SUM('Sales Data all Seasons'[Pre-purchased Pack Tickets])))",
              "",
              "",
              "",
              " "
            ],
            "formatString": "0",
            "lineageTag": "a55dd4cc-69e6-4c95-b361-155789379672"
          }
        ],
        "partitions": [
          {
            "name": "Sales Data all Seasons-2a24491a-777a-431b-b305-acae8032983a",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Sales Data all Seasons (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Sales Data all Seasons\"]}[Data],",
                "    #\"Appended Query\" = Table.Combine({#\"Sales Data all Seasons (2)1\", S27_GuestCounts}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Appended Query\",{\"Cultural Gate (CG)\", \"Happiness Gate\", \"GOTW & CG self vending kiosks\", \"HG self vending kiosks\", \"Ticket Printing Error\", \"Emergency tickets / Gate 5C\", \"Daily ticket sales\", \"VIP - main gate S27\", \"VIP - cultural gate S27\", \"VIP-Happiness Gate\", \"Fazza - main gate\", \"Fazza - cultural gate\", \"Fazza-Happiness Gate\", \"Family packs\", \"Pre Sales,Group Discount,Pre Sales, Corporate S27\", \"Travel agents (WEB B2B)\", \"Web sales Total\", \"Web sales (B2C Any Day)\", \"Web sales (B2C Value)\", \"Esaad (B2C Any Day)\", \"Esaad (B2C Value)\", \"Al Saada (B2C Any Day)\", \"Al Saada (B2C Value)\", \"Entries from pre-sold tickets\", \"VIP Comps Total\", \"VIP General Admission Complimentary\", \"VIP General Admission Mini\", \"VIP General Admission Media\", \"Family packs Comp\", \"Employee and other comps# Total\", \"Complimentary A Ticket\", \"Govt# Authority Complimentary Ticket\", \"GV CEO Complimentary Ticket\", \"GV Entertainment  Ticket\", \"Media Pass\", \"Mystery Shopper Complimentary\", \"Security Complimentary Ticket\", \"Emirates Airline Promotion - Comp\", \"DHE Family Day\", \"Complimentary Ticket E\", \"Others\", \"Child under 3 years\", \"People of Determination + Assistant\", \"Senior citizen over 65 years\", \"Travel agents Comp (B2B Entry Ticket C)\", \"Not used\", \"Entries from complimentaries\", \"Gate of the World (GOTW-A)\", \"Day_Type\", \"Day\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",null,0,Replacer.ReplaceValue,{\"Fazaa/DXB\"}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Replaced Value\",{{\"Date\", Order.Descending}}),",
                "    #\"Merged Columns\" = Table.CombineColumns(Table.TransformColumnTypes(#\"Sorted Rows\", {{\"Complimentary Tickets\", type text}, {\"Complimentary Tickets2\", type text}}, \"en-US\"),{\"Complimentary Tickets\", \"Complimentary Tickets2\"},Combiner.CombineTextByDelimiter(\"\", QuoteStyle.None),\"Complimentry Tickets\"),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Merged Columns\",{{\"B2C : Gate Tickets\", Int64.Type}, {\"B2C : Online Tickets\", Int64.Type}, {\"B2C : Gate and Online\", Int64.Type}, {\"B2B : Corporate and Travel Agents Tickets\", Int64.Type}, {\"B2C + B2B Tickets\", Int64.Type}, {\"Pre-purchased Pack Tickets\", Int64.Type}, {\"Total park attendance\", Int64.Type}, {\"Complimentry Tickets\", Int64.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_af639e54-4966-46b3-b631-9b7e871976c6",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "f01eeac3-ce98-4e74-b707-70344286fb8a",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f79720b1-ee2b-4b34-bad9-1d53dbc6f0ed",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f94b9165-b648-4c59-8dbc-577617cb4ed9",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "b651a51d-4f47-4194-ab54-2384b437c5d4",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "216fad6f-e8eb-43d9-999d-9bb3e850440e",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "c7a69e3f-f505-46f1-98a3-e60c8e17c187",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "aa85395b-4a8f-423a-b9c7-5cd552c7282d",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "d77bdaa1-6a8c-482a-a7cd-aad91542b29d",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "25cec9ec-f173-4668-ab35-b5daac4b9de2",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "ecbd8596-c4ea-46ba-8aca-3c37e0476795",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "2b292289-d468-4b1d-9782-f37478fd429a",
                "ordinal": 3
              }
            ],
            "lineageTag": "4711ba55-750c-4cdd-a522-56c316e12232"
          }
        ],
        "isHidden": true,
        "lineageTag": "e8af88fb-2e76-48b5-b8cf-fb4339c7db47",
        "partitions": [
          {
            "name": "LocalDateTable_af639e54-4966-46b3-b631-9b7e871976c6-581ff165-003a-44fe-b388-0446673e6b81",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Kaizen Modelling'[Date])), 1, 1), Date(Year(MAX('Kaizen Modelling'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "LocalDateTable_0ef2eee0-790e-40ed-ab30-8955fe1beebb",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "a839425a-9c27-49b7-a645-3e9169b6a9f5",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "8c1606d2-b35e-48e9-b59c-27fec0661f81",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "2c2a1335-ad1c-468f-84dd-2e9df7032159",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "5697703d-ffb2-4ecf-bc6f-9169b60150fb",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "dabfba2e-3991-4c34-b81a-5959c819fdb0",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "5c1e5503-3640-4ea8-8c60-08a6ccb7a717",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "2a539166-3a8b-42c2-9e5f-d43f18c4c00b",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "6dedabae-b45d-4e57-9109-ed45b7bfbe6e",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "d2c6f248-e145-4532-8acd-dcfc896d2f16",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "350cf00a-be47-48c0-97d4-8944f7dc2ffa",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "3b53ef89-8380-4184-b467-938b86e38ed8",
                "ordinal": 3
              }
            ],
            "lineageTag": "a89cbca7-eaab-4fe2-b217-78fdd69cafd2"
          }
        ],
        "isHidden": true,
        "lineageTag": "759f7526-09af-4e7e-89fc-403a61b4dce6",
        "partitions": [
          {
            "name": "LocalDateTable_0ef2eee0-790e-40ed-ab30-8955fe1beebb-0d515607-11a3-4a20-ba9a-9d7c72b2a3a5",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('S27_GuestCounts'[Date])), 1, 1), Date(Year(MAX('S27_GuestCounts'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "Dwell - Ground",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "40e292dd-33f1-472b-9c81-96d8d3672a5d",
            "sourceColumn": "day",
            "summarizeBy": "none"
          },
          {
            "name": "footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "35e9c5ff-b29b-47a3-a795-ca24558a74af",
            "sourceColumn": "footfall",
            "summarizeBy": "sum"
          },
          {
            "name": "dwell(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "3793143c-2608-4026-aabe-c9411d75e4af",
            "sourceColumn": "dwell(Minutes)",
            "summarizeBy": "sum"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "77b5df36-c80c-46bf-92f7-4006a9aece39",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "LocationTypes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9b2545be-1814-4a76-90a1-352619459948",
            "sourceColumn": "LocationTypes",
            "summarizeBy": "none"
          },
          {
            "name": "VisitLength(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b93426d0-18fd-4ffd-8b53-43721f24f1c2",
            "sourceColumn": "VisitLength(Minutes)",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[day_num_tag_shifted],GuestCounts[Date],[day])",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "7812328b-73ae-44d6-8c53-81892d092b1f",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[Season_ID],GuestCounts[Date],[day])",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e2c34172-3fae-4ecb-bef9-f936851b32c9",
            "summarizeBy": "count",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [day]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([day],\"dddd\")=\"Saturday\" || FORMAT([day],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([day],\"dddd\")=\"Friday\" || FORMAT([day],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "a0421a94-24fe-45a1-bb84-820c8883b8b9",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "RElated('GuestCounts'[new_week_num])",
              "//  IF([day]<=DATE(2022,1,1),IF('Dwell - Ground'[WeekdayNum]=1  ,'Dwell - Ground'[week_num]+1,'Dwell - Ground'[week_num]),'Dwell - Ground'[week_num])",
              "// DATEDIFF(CALCULATE (",
              "//     Min ( GuestCounts[Date] ),",
              "//     FILTER (",
              "//         ALLEXCEPT ( GuestCounts, GuestCounts[Season_ID] ),",
              "//         GuestCounts[Date] <= EARLIER ( GuestCounts[Date] )",
              "//     )",
              "// ),[Date], DAY)/ 7",
              "",
              "// IF(GuestCounts[Season_ID] =25",
              "// IF([Date]>=DATE(2022,1,1),",
              "//     , WEEKNUM('GuestCounts'[Date],1)-44,,WEEKNUM('GuestCounts'[Date],2)-43))",
              "",
              "// IF([Date]>=DATE(2022,1,1),IF('GuestCounts'[WeekdayNum]=1 && 'GuestCounts'[day_num_tag_shifted]<>1,'GuestCounts'[week_num]+1,'GuestCounts'[week_num]),'GuestCounts'[week_num])",
              "",
              "",
              "//WEEKNUM('GuestCounts'[Date],2)-43",
              "//floor(datediff(day, min(DATE) OVER ( PARTITION BY Season_id ORDER BY DATE ), DATE) / 7.0) ",
              "//+ 1 AS week_num )"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "444c28d6-3ea7-49e4-b459-524e043c289d",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([day]>=DATE(2022,1,1), WEEKDAY([day]-2) , WEEKDAY([day]-1) )",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "5c145a77-5e9d-4e62-97e4-9f9ea1dee659",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "isDataTypeInferred": true,
            "lineageTag": "96a4ba7b-057a-4a89-a813-0768ffc347a6",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('Dwell - Ground'[day],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('Dwell - Ground'[day],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('Dwell - Ground'[day],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('Dwell - Ground'[day],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([day],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([day],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([day],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([day],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([day] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[day]),",
              "                        IF (",
              "                            FORMAT([day],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([day],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([day],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [day] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [day] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [day] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [day] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([day],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",'Dwell - Ground'[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))   "
            ],
            "isDataTypeInferred": true,
            "lineageTag": "58b5143b-a290-4625-854f-8d55b7f2d3c3",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "FORMAT([day],\"dddd\")",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "c5b88cc5-3f2c-4d16-ab62-291b0598db01",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\" ,\"NYE\",",
              "   IF( [Event] =\"National Day\" ,\"National Day\",",
              "IF([day] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            "
            ],
            "isDataTypeInferred": true,
            "lineageTag": "0cd429a9-0f7b-47e6-88d6-1945b5481d78",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "f2382bf3-2788-4cc7-94bd-eb9612f947a2",
        "measures": [
          {
            "name": "Average Dwell Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=compare)   ",
              ")",
              ""
            ],
            "lineageTag": "eda7444e-7252-4d1b-801b-d59539af0603"
          },
          {
            "name": "Average Dwell Selected Season",
            "expression": [
              "",
              " ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=selectedseason,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=selectedseason)   ",
              ")",
              " "
            ],
            "formatString": "0",
            "lineageTag": "33903c6e-8e4b-4927-a774-2a685ac2819b"
          },
          {
            "name": "Wifi Penetration Compared Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)",
              "    /",
              "    Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=compare)  ",
              "     /",
              "     Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare)",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "dc42f775-190f-48a3-b24b-b54b22d8e320"
          },
          {
            "name": "Wifi Penetration Selected Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=selectedseason,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)/Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=selectedseason)   /Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason)",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "89db33b9-cecc-4773-bb32-31e0c220a893"
          },
          {
            "name": "S26 Average Dwell",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "    CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)"
            ],
            "lineageTag": "9a6ef125-f204-43aa-aecf-4c11597c597f"
          },
          {
            "name": "S27 Average Dwell",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "CALCULATE(AVERAGE('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=selectedseason,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)",
              ""
            ],
            "lineageTag": "426ea48f-c925-4245-ac48-7a6aaee8732b"
          },
          {
            "name": "S27 Wifi Penetration Selected Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "",
              "CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=selectedseason,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)/Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=selectedseason,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "023bef40-5dfb-4d52-b4b4-7b12a7e27ca3"
          },
          {
            "name": "S26 Wifi Penetration compare Season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason = 27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('GuestCounts'[day_num_tag_shifted]),'GuestCounts'[Season_id]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "",
              "CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)/Calculate(SUM('GuestCounts'[Total_Park_Attendence]),'GuestCounts'[Season_ID]=compare,'GuestCounts'[day_num_tag_shifted]<=max_date,'GuestCounts'[day_num_tag_shifted]>=min_date)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "fade374f-0407-46ac-b7a9-f24c0ceb39d0"
          },
          {
            "name": "S26 Dwell Compared season",
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "    CALCULATE(SUM('Dwell - Ground'[dwell(Minutes)]),Filter('Dwell - Ground','Dwell - Ground'[SeasonID]=compare&&'Dwell - Ground'[day_num_tag_shifted]<=max_date&&'Dwell - Ground'[day_num_tag_shifted]>=min_date))"
            ],
            "formatString": "0",
            "lineageTag": "3abe2d03-26b0-4129-a836-93e6ebb62b0a"
          },
          {
            "name": "S27 Dwell selected season",
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "    CALCULATE(MAX('Dwell - Ground'[dwell(Minutes)]),Filter('Dwell - Ground','Dwell - Ground'[SeasonID]=selectedseason&&'Dwell - Ground'[day_num_tag_shifted]<=max_date&&'Dwell - Ground'[day_num_tag_shifted]>=min_date))"
            ],
            "formatString": "0",
            "lineageTag": "bee8a984-e68d-4d4a-9212-1b1d06f5520b"
          },
          {
            "name": "S26 MAX Dwell",
            "expression": [
              "",
              "",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "    CALCULATE(MAX('Dwell - Ground'[dwell(Minutes)]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date)"
            ],
            "formatString": "0",
            "lineageTag": "b9368aa1-70a5-49af-b5e7-b36a75a436f9"
          },
          {
            "name": "S27 vs S26 dwell",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('Dwell - Ground'[S27 Average Dwell]-'Dwell - Ground'[S26 Average Dwell])/'Dwell - Ground'[S26 Average Dwell]",
            "lineageTag": "ba91afe2-a89f-4b76-9700-c1dc117ee921"
          },
          {
            "name": "Dwell tooltip",
            "expression": [
              "",
              "VAR hours=ROUNDDOWN('Dwell - Ground'[S26 Average Dwell]/60,0)",
              "VAR minutes=ROUND('Dwell - Ground'[S26 Average Dwell]-hours*60,0)",
              "",
              "VAR hours_S27=ROUNDDOWN('Dwell - Ground'[S27 Average Dwell]/60,0)",
              "VAR minutes_S27=ROUND('Dwell - Ground'[S27 Average Dwell]-hours_S27*60,0)",
              "",
              "VAR max_hours=ROUNDDOWN('Dwell - Ground'[S26 MAX Dwell]/60,0)",
              "VAR max_minutes=ROUND('Dwell - Ground'[S26 MAX Dwell]-max_hours*60,0)",
              "",
              "Return \"S26: \"& hours &\" hours \"& minutes&\" minutes\"& UNICHAR(10) ",
              " &\"S27: \"& hours_S27 &\" hours \"& minutes_S27&\" minutes\" ",
              " //& UNICHAR(10) ",
              "  //& \"S26 MAX: \"& max_hours &\" hours \"& max_minutes&\" minutes\""
            ],
            "lineageTag": "a2b87fd8-70e6-4b88-9a76-b46a958257bc"
          },
          {
            "name": "Wifi Users Compared Season",
            "expression": [
              "",
              "  ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=compare,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date),",
              "",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=compare)  ",
              "     ",
              ")",
              ""
            ],
            "formatString": "0",
            "lineageTag": "8b47bb68-d0cc-4011-9b60-eeeccca30271"
          },
          {
            "name": "Wifi Users Selected Season",
            "expression": [
              "",
              "  ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Dwell - Ground'[day_num_tag_shifted]),'Dwell - Ground'[SeasonID]=compare)",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=selectedseason,'Dwell - Ground'[day_num_tag_shifted]<=max_date,'Dwell - Ground'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(SUM('Dwell - Ground'[footfall]),'Dwell - Ground'[SeasonID]=selectedseason)  ",
              ")",
              ""
            ],
            "formatString": "0",
            "lineageTag": "2ee4f430-4175-4771-964e-07173c465187"
          }
        ],
        "partitions": [
          {
            "name": "Dwell - Ground-a0a9b0c6-75ea-4d48-84ed-a1d5174d14a8",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Dwell - Ground1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Dwell - Ground\"]}[Data]",
                "in",
                "    #\"Dwell - Ground1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Visitation Length",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "3eb219f1-0a0a-484c-a5e3-d6d0a54c8549",
            "sourceColumn": "day",
            "summarizeBy": "none"
          },
          {
            "name": "VisitLength(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "46aa740f-a8f9-4ccd-af43-d8fd54f27431",
            "sourceColumn": "VisitLength(Minutes)",
            "summarizeBy": "sum"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[Season_ID],GuestCounts[Date],[day])",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "178780ad-b9b5-4c36-824b-91d08098ad50",
            "summarizeBy": "count",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[day_num_tag_shifted],GuestCounts[Date],[day])",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "d1935e37-1f72-4d91-9d1b-6d0dc31ffb43",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [day]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([day],\"dddd\")=\"Saturday\" || FORMAT([day],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([day],\"dddd\")=\"Friday\" || FORMAT([day],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "c578057f-c79e-454c-8c55-9bc6f0c1c6b5",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "154409d8-718b-443e-ae52-ec00f60242e3",
        "measures": [
          {
            "name": "Average Visit Length Selected Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "   ",
              "VAR selectedseason =SELECTEDVALUE('Selected Season'[SeasonID])// SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "IF(like_to_like=\"Same # Of Days\",",
              "    CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=selectedseason,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)/60,",
              "    CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=selectedseason",
              " )/60)"
            ],
            "lineageTag": "de08b9a4-f66a-4478-be91-23f89605c9c3"
          },
          {
            "name": "Average Visit Length Compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "  ",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "RETURN ",
              "IF( ",
              "    (like_to_like=\"Same # Of Days\"),",
              "    CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=compare,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date),",
              "    CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=compare)   ",
              ")/60",
              ""
            ],
            "lineageTag": "501142ca-3c86-483b-8819-c0ab2599e6aa"
          },
          {
            "name": "S27 Average Visit Length Selected Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "   ",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR minutes=CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=selectedseason,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)",
              "RETURN ",
              "// CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),Filter('Visitation Length','Visitation Length'[SeasonID]=selectedseason&&'Visitation Length'[day_num_tag_shifted]<=max_date&&'Visitation Length'[day_num_tag_shifted]>=min_date))/60",
              "    CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=selectedseason,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)/60"
            ],
            "lineageTag": "3f66d3e7-eaa6-49c9-a7da-901c0b1d0c4b"
          },
          {
            "name": "S26 Average Visit Length compared Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "   ",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "VAR minutes=CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=compare,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)",
              "VAR hours=CALCULATE(AVERAGE('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=compare,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)/60",
              "",
              "RETURN  hours"
            ],
            "lineageTag": "f6b8bdbc-7b25-494c-a42a-2e6b04385295"
          },
          {
            "name": "S26 MAX Visit Length comapred Season",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "   ",
              "VAR selectedseason =27",
              "VAR compare = 26",
              "",
              "",
              "VAR avg_sum = SELECTEDVALUE('Avg vs Sum'[Value])",
              "",
              "VAR selected_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR selected_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=selectedseason)",
              "VAR compare_park_days_min=CALCULATE(MIN('Visitation Length'[day_num_tag_shifted]),'Visitation Length'[SeasonID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "RETURN ",
              "    CALCULATE(MAX('Visitation Length'[VisitLength(Minutes)]),'Visitation Length'[SeasonID]=compare,'Visitation Length'[day_num_tag_shifted]<=max_date,'Visitation Length'[day_num_tag_shifted]>=min_date)/60"
            ],
            "lineageTag": "edde674b-5f58-41dd-8b18-a520b10436ad"
          },
          {
            "name": "S27 vs S26 visit length",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "('Visitation Length'[S27 Average Visit Length Selected Season]-'Visitation Length'[S26 Average Visit Length compared Season])/'Visitation Length'[S26 Average Visit Length compared Season]",
            "lineageTag": "95a1e02b-f1cc-4853-82f8-b73550a615ab"
          },
          {
            "name": "Visit length tooltip",
            "expression": [
              "",
              "VAR hours=ROUNDDOWN('Visitation Length'[S26 Average Visit Length compared Season],0)",
              "VAR minutes=ROUND('Visitation Length'[S26 Average Visit Length compared Season]*60-hours*60,0)",
              "VAR hours_S27=ROUNDDOWN('Visitation Length'[S27 Average Visit Length Selected Season],0)",
              "VAR minutes_S27=ROUND('Visitation Length'[S27 Average Visit Length Selected Season]*60-hours_S27*60,0)",
              "VAR max_hours=ROUNDDOWN('Visitation Length'[S26 MAX Visit Length comapred Season],0)",
              "VAR max_minutes=ROUND('Visitation Length'[S26 MAX Visit Length comapred Season]*60-max_hours*60,0)",
              " Return \"S26: \"& hours &\" hours \"& minutes&\" minutes\"& UNICHAR(10) ",
              " &\"S27: \"& hours_S27 &\" hours \"& minutes_S27&\" minutes\"",
              "//   & UNICHAR(10) ",
              "//   & \"S26 MAX: \"& max_hours &\" hours \"& max_minutes&\" minutes\""
            ],
            "lineageTag": "5d10a64a-d896-433e-aaef-50051c593e9a"
          }
        ],
        "partitions": [
          {
            "name": "Visitation Length-c7e13d71-91ef-4875-9a2f-e5b6c8d3f825",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Visitation Length1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Visitation Length\"]}[Data]",
                "in",
                "    #\"Visitation Length1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Movement - Wifi",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "14a9b1a2-a9dc-4264-85fd-4dbff5f4d3b0",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "fromZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "65373b53-6d7d-430b-9b60-acf96c799500",
            "sourceColumn": "fromZone",
            "summarizeBy": "none"
          },
          {
            "name": "toZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e1925652-00c6-4692-a9cd-6236fb8bdbf3",
            "sourceColumn": "toZone",
            "summarizeBy": "none"
          },
          {
            "name": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "3fb071c3-9e6f-4716-9031-99ae7c56c697",
            "sourceColumn": "count",
            "summarizeBy": "sum"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[Season_ID],GuestCounts[Date],[Date])",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "b7bea2ce-9163-477f-acc2-c093a973947a",
            "summarizeBy": "count",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "LOOKUPVALUE(GuestCounts[day_num_tag_shifted],GuestCounts[Date],[Date])",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "0569276b-51df-4ac5-a264-3153d4b03b78",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Related('GuestCounts'[Month])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "84ffd8f7-9d79-46da-9c5c-eb137e01de3e",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "Related('GuestCounts'[new_week_num])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "4422ee5d-f6b3-40b1-9024-15dc5e70d4c4",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "RELATED('GuestCounts'[WeekdayNum])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "92054560-769a-4c94-8f73-6cec1380ffdb",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "fromZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(coordinates_Wifi[LATITUDE],coordinates_Wifi[Location],'Movement - Wifi'[fromZone])",
            "isDataTypeInferred": true,
            "lineageTag": "435c7258-e67f-49e9-a2d2-39ca73b148f3",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "fromZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(Coordinates_wifi[LONGITUDE],coordinates_Wifi[Location],'Movement - Wifi'[fromZone])",
            "isDataTypeInferred": true,
            "lineageTag": "b20652d1-6336-4ba7-8ec9-d85d918b7906",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "FORMAT([Date],\"dddd\")",
            "isDataTypeInferred": true,
            "lineageTag": "4ec185da-6f94-4be1-9cb7-f50d633807d6",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Date],\"dddd\")=\"Saturday\" || FORMAT([Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Date],\"dddd\")=\"Friday\" || FORMAT([Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "cb20220b-5786-46a0-84e1-f042c85d9c33",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "VAR fifa_groupstage=DATESBETWEEN('GuestCounts'[Date],Date(2022,11,21),Date(2022,12,2)) ",
              "VAR fifa_roundof16=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,3),Date(2022,12,6)) ",
              "VAR fifa_quarterfinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,9),Date(2022,12,10)) ",
              "VAR fifa_semifinals=DATESBETWEEN('GuestCounts'[Date],Date(2022,12,13),Date(2022,12,14)) ",
              "",
              "",
              "Return",
              "IF (",
              "   FORMAT([Date],\"dd/mm\") =\"31/12\",\"NYE\",",
              "   ",
              "    ",
              "    IF (",
              "        FORMAT([Date],\"dd/mm\")=\"01/01\",\"NYD\",",
              "        IF (",
              "            FORMAT([Date],\"dd/mm\")=\"01/01\",\"NYE\",",
              "            IF (",
              "                FORMAT([Date],\"dd/mm\")=\"01/12\",\"National Day\",",
              "                IF([Date] in VALUES(Concerts[Date]), LOOKUPVALUE(Concerts[Concert],Concerts[Date],[Date]),",
              "                        IF (",
              "                            FORMAT([Date],\"dd/mm\")=\"30/11\",\"Martyr's Day\",",
              "                IF (",
              "                    FORMAT([Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - First Day\",",
              "                    IF (",
              "                    FORMAT([Date],\"dd/mm/yyyy\")=\"18/12/2022\",\"Fifa WC - Final\",",
              "                     IF (",
              "                    [Date] in fifa_groupstage,\"Fifa WC - Group Stage\",",
              "                     IF (",
              "                    [Date] in fifa_roundof16,\"Fifa WC - Round of 16\",",
              "                    IF (",
              "                    [Date] in fifa_quarterfinals,\"Fifa WC - Quarter Finals\",",
              "                     IF (",
              "                    [Date] in fifa_semifinals,\"Fifa WC - Semi Finals\",",
              "                     IF (",
              "                                        FORMAT([Date],\"dd/mm/yyyy\")=\"20/11/2022\",\"Fifa WC - Third Place Play-off\",",
              "                                              ",
              "                                     IF (FORMAT([Day_Type],\"dddd\")=\"Tuesday\",\"Family Day\",'Movement - Wifi'[Work Day])",
              "                                     )",
              "                            )",
              "                        )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")            )))           ",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "e39329ae-ae53-4840-8b11-4053902f369f",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "",
              "IF (",
              "   [Event] =\"NYE\",\"NYE\",",
              "   IF([Event] =\"NYD\",\"NYD\",",
              "   IF( [Event] =\"National Day\",\"National Day\",",
              "    IF([Event] =\"Martyr's Day\",\"Martyr's Day\",",
              "IF([Date] in VALUES(Concerts[Date]), \"Concert\",Blank()",
              "                 ",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "        ",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "c21effde-b269-4731-ab2c-f67d3404a02c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "CONCATENATE([Event],\" S\"&[SeasonID])",
            "isDataTypeInferred": true,
            "lineageTag": "987a9b40-4134-4147-ad3a-e3745327ba31",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "toZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(Coordinates_wifi[LONGITUDE],coordinates_Wifi[Location],'Movement - Wifi'[toZone])",
            "isDataTypeInferred": true,
            "lineageTag": "64bc1d72-aa44-43d3-a2d7-a7bde3f7c9e3",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "toZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "LOOKUPVALUE(Coordinates_wifi[LATITUDE],coordinates_Wifi[Location],'Movement - Wifi'[toZone])",
            "isDataTypeInferred": true,
            "lineageTag": "a27bb2ad-85b7-4307-9016-93edcd771b26",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF([Date] in VALUES(Concerts[Date]),LOOKUPVALUE(Concerts[Concert Type],Concerts[Date],[Date]),Blank())",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "b0c7afb1-bfb3-493f-9435-da289fa46385",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "d1d527cb-a51d-4dad-b97e-b14b878223f7",
        "measures": [
          {
            "name": "Movement compared season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    like_to_like=\"Same # Of Days\",",
              "    ",
              "        CALCULATE(",
              "            SUM('Movement - Wifi'[count]),",
              "            'Movement - Wifi'[SeasonID]=compare,'Movement - Wifi'[day_num_tag_shifted]<=max_date,",
              "        'Movement - Wifi'[day_num_tag_shifted]>=min_date),Calculate(SUM('Movement - Wifi'[count]),",
              "            'Movement - Wifi'[SeasonID]=compare))",
              "        "
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "6ff5f4be-2bbe-41c5-ba5f-9bfc8d0251dc"
          },
          {
            "name": "Movement selected season",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Movement - Wifi'[day_num_tag_shifted]),'Movement - Wifi'[SeasonID]=compare)",
              "",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "RETURN ",
              "IF( ",
              "    like_to_like=\"Same # Of Days\",",
              "    ",
              "        CALCULATE(",
              "            SUM('Movement - Wifi'[count]),",
              "            'Movement - Wifi'[SeasonID]=selectedseason,'Movement - Wifi'[day_num_tag_shifted]<=max_date,",
              "        'Movement - Wifi'[day_num_tag_shifted]>=min_date),Calculate(SUM('Movement - Wifi'[count]),",
              "            'Movement - Wifi'[SeasonID]=selectedseason))",
              "        "
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "d5867ecc-7e3c-438f-bf4f-6953e2711a4c"
          },
          {
            "name": "Flow new %",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(average('Movement - Wifi'[count]))/CALCULATE(average('Movement - Wifi'[count]))//Average",
            "lineageTag": "bfde73b6-080a-46c3-bb8d-770d409d1c22"
          }
        ],
        "partitions": [
          {
            "name": "Movement - Wifi-cc520ac0-a8dd-4d81-a0f6-15d2fee08d68",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Movement - Wifi1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Movement - Wifi\"]}[Data]",
                "in",
                "    #\"Movement - Wifi1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Selected Season",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c1dec3e7553f476ca8be4b87244fe3c9"
          }
        ],
        "columns": [
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": false,
            "lineageTag": "c7c4bfab-9b2b-452e-be3d-50eb650e0592",
            "sourceColumn": "[Value]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "9be0ff41-35a5-49bd-9173-d8d68dedb58a",
        "partitions": [
          {
            "name": "Selected Season-15a31a11-9091-4fcd-bc25-7ddcd2850ab1",
            "mode": "import",
            "source": {
              "expression": [
                "",
                "{",
                "    CONVERT ( 22, INTEGER ),",
                "    CONVERT ( 23, INTEGER ),",
                "    CONVERT ( 24, INTEGER ),",
                "    CONVERT ( 25, INTEGER ),",
                "    CONVERT ( 26, INTEGER ),",
                "    CONVERT ( 27, INTEGER ),",
                "    CONVERT ( 28, INTEGER )",
                "}"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "GuestCounts_events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "4c9fbc5306944088b9d870f878d24500"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fffab835-e2e6-4a69-bccd-5e8a06100f62",
            "sourceColumn": "GuestCounts[Season_ID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "491cb5ca-7642-4654-9a93-a3465d2bc2c2",
            "sourceColumn": "GuestCounts[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1e18563d-292d-41cb-904b-e79219c585d1",
            "sourceColumn": "GuestCounts[Total_Park_Attendence]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Gate_Of_The_Word",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7baac90b-f741-404a-ad24-8e16dde20b0a",
            "sourceColumn": "GuestCounts[Gate_Of_The_Word]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "44d0868a-d3c4-4a4a-b0f4-784c3f0a2c3a",
            "sourceColumn": "GuestCounts[Cultural_Gate]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "665ce69b-258d-4594-8e82-5a34cb8753a3",
            "sourceColumn": "GuestCounts[Happiness Gate]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "HG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "60b29a4b-0fd2-4b80-beb4-077992faeb3f",
            "sourceColumn": "GuestCounts[HG self vending kiosks]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c99365d5-3190-459e-bc39-4847f909eef6",
            "sourceColumn": "GuestCounts[week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "953c86eb-66e6-4fcf-8255-1752c7d2b178",
            "sourceColumn": "GuestCounts[day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "67ae56ad-9402-4acf-95c5-48cfa7727ff5",
            "sourceColumn": "GuestCounts[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "6e15cd08-aacf-456c-9d3f-c051b7acb24b",
            "sourceColumn": "GuestCounts[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9e3e31c3-63ae-4ffb-b35b-7dfc90c6570d",
            "sourceColumn": "GuestCounts[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "43cb52e1-e6d9-4a9d-85f1-3774dcefe574",
            "sourceColumn": "GuestCounts[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "VIP-CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "caeba49c-b7e0-46e9-bf66-07ee2e13b827",
            "sourceColumn": "GuestCounts[VIP-CG]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "VIP-HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c2bc312b-94f0-4899-83a8-5209ed759f20",
            "sourceColumn": "GuestCounts[VIP-HG]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "VIP-GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fa130e6c-5f6b-4ee1-a72a-2620edf06407",
            "sourceColumn": "GuestCounts[VIP-GOW]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "58898aa2-1498-4a17-a254-6ae4d1dd41b1",
            "sourceColumn": "GuestCounts[Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d7b6b158-6889-41f9-ae86-ec3c061a7684",
            "sourceColumn": "GuestCounts[Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "bb91436e-78aa-43c9-9b7f-e0bf7009afae",
            "sourceColumn": "GuestCounts[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0c6e7467-7d05-45c6-ae61-afc2ad0ee6b5",
            "sourceColumn": "GuestCounts[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Travel agents (WEB B2B)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e70abd50-0446-419c-9a85-f2c43ad4fa10",
            "sourceColumn": "GuestCounts[Travel agents (WEB B2B)]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Family packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0727d18d-03a9-44ae-a9b1-16b4234ed580",
            "sourceColumn": "GuestCounts[Family packs]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Fazza",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e4d4b11c-fa4b-4364-b31f-6e7531cc9859",
            "sourceColumn": "GuestCounts[Fazza]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Web sales Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d6eb1950-87b4-4c5c-a703-9d6a93fec561",
            "sourceColumn": "GuestCounts[Web sales Total]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Daily ticket sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "f76e8a1a-a4f9-4565-88dd-25a3ebd4430d",
            "sourceColumn": "GuestCounts[Daily ticket sales]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "VIP_Gates",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2272386e-78d3-4e9b-810b-f383f0df68bc",
            "sourceColumn": "GuestCounts[VIP_Gates]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Weather",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fb3e8128-e08e-446f-b4a1-0abc11fac363",
            "sourceColumn": "GuestCounts[Weather]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1fb7368d-b913-4d92-b40e-d67cc90888f7",
            "sourceColumn": "GuestCounts[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2cc876e4-62af-47f8-be3f-6a05275e3e2b",
            "sourceColumn": "GuestCounts[Event And Season]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e7ca2258-4afb-46ba-b046-bbf1ee2ce677",
            "sourceColumn": "GuestCounts[Concert type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Week concert",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1d518ec2-418d-46a3-b724-6767bc4f190d",
            "sourceColumn": "GuestCounts[Week concert]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Week event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7ca309f9-e6da-419b-865b-523be11e7594",
            "sourceColumn": "GuestCounts[Week event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Carnaval Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "27f14269-976c-46c0-b2bd-10bc27d30a89",
            "sourceColumn": "GuestCounts[Carnaval Gate]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1ad376a1-86f8-4be0-a734-076b053db401",
            "sourceColumn": "GuestCounts[GOTW & CG self vending kiosks]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "767e5b30-8543-49ff-acbc-73f60adef1e0",
            "sourceColumn": "GuestCounts[Fazaa/DXB]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "hierarchies": [
          {
            "name": "Event Type Hierarchy",
            "levels": [
              {
                "name": "Event Type",
                "column": "Event Type",
                "lineageTag": "734859ab-1aff-4848-98ae-8e6fc15d6637",
                "ordinal": 0
              },
              {
                "name": "Concert type",
                "column": "Concert type",
                "lineageTag": "f6c779ff-7e61-4d2d-b13d-52177b226966",
                "ordinal": 1
              },
              {
                "name": "Event And Season",
                "column": "Event And Season",
                "lineageTag": "03df3419-f1f6-4f74-86f9-9101b47ecc7c",
                "ordinal": 2
              }
            ],
            "lineageTag": "008bc162-6dc0-42fa-819a-186ebaaf8f8b"
          }
        ],
        "lineageTag": "bbe49fbe-c67a-4c07-b091-4789a3e16f87",
        "partitions": [
          {
            "name": "GuestCounts_events-ad869732-8abd-4aac-84a3-b277f80da0b7",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE(GuestCounts,GuestCounts[Event]<>\"Weekday\" &&GuestCounts[Event]<>\"Weekend\"&&GuestCounts[Event]<>\"Family Day\"&&GuestCounts[Event]<>\"Fifa WC - First Day\"&&GuestCounts[Event]<>\"Fifa WC - Last Day\"&&GuestCounts[Event]<>\"Fifa WC - Group Stage\"&&GuestCounts[Event]<>\"Fifa WC - Round of 16\"&&GuestCounts[Event]<>\"Fifa WC - Quarter Finals\"&&GuestCounts[Event]<>\"Fifa WC - Semi Finals\"&&GuestCounts[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Pav Sensor + Park Footfall events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c8181a4cc04a4405ac7ec1134200e176"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "67dbe53c-34c4-4f27-911b-adc455401e2e",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Season_ID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "349260da-44b3-406c-9cfd-39398f5612a2",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Operation_Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c81f81b1-a7b8-457b-b0b9-952bcec53cf0",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location_id]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4c6f174c-b22c-42c5-b8b5-361117cee810",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Sensor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9812931a-da96-4b13-8f56-41215b12b5f1",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Sensor]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "23683888-31f8-4001-a040-5c34f15e2d64",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Total_Entries]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "23499f46-426b-4351-82bf-50eb3c0aa328",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Total_Park_Attendence]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "09d4157a-85b7-4152-b238-4eb745c4b162",
            "sourceColumn": "Pav Sensor + Park Footfall 2[GOW]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "GOW & CG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c398e002-b9c2-4d97-97da-375db6801740",
            "sourceColumn": "Pav Sensor + Park Footfall 2[GOW & CG TVM]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "49aa1054-5106-452a-86f6-47ea1a914a23",
            "sourceColumn": "Pav Sensor + Park Footfall 2[CG]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4e80fda0-51f2-417f-a2ec-60c6446c4bac",
            "sourceColumn": "Pav Sensor + Park Footfall 2[HG]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "HG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0d885d6e-28bb-4113-a233-318f8d5bfdbb",
            "sourceColumn": "Pav Sensor + Park Footfall 2[HG TVM]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "44641127-662e-4e08-bcf5-dc787a348518",
            "sourceColumn": "Pav Sensor + Park Footfall 2[week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c8637b1b-0305-4a6f-b53a-45bfb6b89395",
            "sourceColumn": "Pav Sensor + Park Footfall 2[day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "NewLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "6d33bd77-d560-49da-8599-cd074425e46b",
            "sourceColumn": "Pav Sensor + Park Footfall 2[NewLocation]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ad2bee5f-c84d-4a35-a99d-72ee86a1ee1f",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Location_type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "896c873a-ab4b-43a9-834a-a1c4ce832f2a",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Season+Location ID]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Pavilion Size",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "a49c0ff5-9c83-48b2-9e4e-cea3390836b7",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Pavilion Size]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Min_day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0ae10313-53e5-4bc2-9ef5-0aad82490008",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Min_day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Max_day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c385bd71-1148-49a8-b447-3b9f0ba78d7a",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Max_day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_period_sensor_is_operational",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0eb080c2-eec1-42f0-82f2-7edc25a1ad01",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Total_period_sensor_is_operational]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0744d6e5-01df-444f-a2d1-f07632c7b386",
            "sourceColumn": "Pav Sensor + Park Footfall 2[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "5a74fec4-c623-4e73-b023-91e6a9fe6d1e",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "f3f3f085-f69d-4ccb-9ac7-7a15ef97159e",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Selected Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c35b4d03-cdb2-4d78-ab0e-96731dd71857",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Selected Date]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "LocationInS27",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0b89be01-6aa1-4130-8318-ffb132369732",
            "sourceColumn": "Pav Sensor + Park Footfall 2[LocationInS27]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "LocationInS26",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "98cf66c1-a5d2-40f9-914a-e06f14880126",
            "sourceColumn": "Pav Sensor + Park Footfall 2[LocationInS26]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "8ef65a3a-20a2-4405-84f8-aa6b411c0f63",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d9571338-0e8b-4525-8ad0-32e7fa8928d2",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "30b1753f-f98d-470b-a108-838f81a73135",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "510b4410-3ccf-40ef-9de3-3de32148b236",
            "sourceColumn": "Pav Sensor + Park Footfall 2[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9386988b-aa70-40d1-b8ea-5a33af23a6b7",
            "sourceColumn": "Pav Sensor + Park Footfall 2[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ba618ebf-ef06-4c9a-9f97-cba5d35bd04f",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Event And Season]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "6017018d-6a37-4057-880c-acdbf014670c",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "5d4225f7-e20e-4811-8a32-1f8becfdc5de",
            "sourceColumn": "Pav Sensor + Park Footfall 2[Concert type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Rank",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "RANKX(FILTER('Pav Sensor + Park Footfall events', 'Pav Sensor + Park Footfall events'[Operation_Date] = EARLIER('Pav Sensor + Park Footfall events'[Operation_Date])), 'Pav Sensor + Park Footfall events'[Total_Entries],,DESC,Dense)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "614333fc-1102-40bd-a6f5-04eba8264a3d",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Top locations footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF('Pav Sensor + Park Footfall events'[Rank] <= 5, 'Pav Sensor + Park Footfall events'[Location], \"Others\")",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "8e87bff9-d217-486c-ab83-00cc8bfa0f06",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Event Type Hierarchy",
            "levels": [
              {
                "name": "Event Type",
                "column": "Event Type",
                "lineageTag": "2c56070f-cc61-4252-9804-31b6bba31bdd",
                "ordinal": 0
              },
              {
                "name": "Event And Season",
                "column": "Event And Season",
                "lineageTag": "76c64f93-7e87-4df3-8754-c5b905fe9e61",
                "ordinal": 1
              }
            ],
            "lineageTag": "3c4b68d5-3735-4887-b2d7-d4396d670dbd"
          }
        ],
        "lineageTag": "104b8160-90fb-4b31-a448-4c8688b2d54e",
        "measures": [
          {
            "name": "Measure",
            "annotations": [
              {
                "name": "43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c",
                "value": "True"
              }
            ],
            "lineageTag": "e6c88e71-9aa9-4336-b48f-cbe8bc980c7c"
          },
          {
            "name": "pav footfall",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR event= SELECTEDVALUE('GuestCounts'[Event])",
              "Return Calculate(Sum('Pav Sensor + Park Footfall events'[Total_Entries]),'GuestCounts'[Event]=event)"
            ],
            "lineageTag": "370bece8-5d81-4726-ab85-cdbe1aba38b8"
          }
        ],
        "partitions": [
          {
            "name": "Pav Sensor + Park Footfall events-c92a4274-d2c2-4d2e-8fea-252c26e24886",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE('Pav Sensor + Park Footfall 2','Pav Sensor + Park Footfall 2'[Event]<>\"Weekday\" &&'Pav Sensor + Park Footfall 2'[Event]<>\"Weekend\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Family Day\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - First Day\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Last Day\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Group Stage\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Round of 16\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Quarter Finals\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Semi-Finals\"&&'Pav Sensor + Park Footfall 2'[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Pav Sensor Footfall by hour events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c7c0982c5660475a8c90e60bb25915f6"
          }
        ],
        "columns": [
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "3c9a3dc3-77e9-4c6c-ae7e-1b22953a1af5",
            "sourceColumn": "Pav Sensor Footfall by Hour[Operation_Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_554eb9d5-de76-4aaf-b832-1dbbcc33b2c4"
                },
                "isDefault": true,
                "relationship": "4151383b-2b82-4b65-bc70-ada075291430"
              }
            ]
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "6429ec65-d201-444c-8a21-e40aa050d9b0",
            "sourceColumn": "Pav Sensor Footfall by Hour[Location_id]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "cfa12149-86d7-47ba-9aea-0f5207bb9249",
            "sourceColumn": "Pav Sensor Footfall by Hour[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Entry_Hour",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4b81c502-fa59-410d-ba9e-b1b37753a2f7",
            "sourceColumn": "Pav Sensor Footfall by Hour[Entry_Hour]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "a01ebe02-fefe-4421-927b-94e77abdbd41",
            "sourceColumn": "Pav Sensor Footfall by Hour[Total_Entries]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9d31999c-a8d3-49e1-a402-f10cc91acefb",
            "sourceColumn": "Pav Sensor Footfall by Hour[Total_Park_Attendence]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "307fd9e5-a85d-40a6-a81a-e446162e0a52",
            "sourceColumn": "Pav Sensor Footfall by Hour[week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "3635dba0-c5c2-4258-a12d-f90eb566b027",
            "sourceColumn": "Pav Sensor Footfall by Hour[day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e3c75231-f856-4e39-9ed9-0e6cf9040aeb",
            "sourceColumn": "Pav Sensor Footfall by Hour[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "a674c976-c01d-4a8f-a223-7e861cf47e21",
            "sourceColumn": "Pav Sensor Footfall by Hour[Season+Location ID]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "PEAKEntries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2408e5f8-0e8c-4222-a322-bcb970edef8d",
            "sourceColumn": "Pav Sensor Footfall by Hour[PEAKEntries]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "PEAK",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "010c9a33-726d-4a5d-b357-58df0b5a33a3",
            "sourceColumn": "Pav Sensor Footfall by Hour[PEAK]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b5872724-52a1-459e-8e6a-324eb90d5ac8",
            "sourceColumn": "Pav Sensor Footfall by Hour[Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "706756d9-a307-42e5-b9a1-921423f835af",
            "sourceColumn": "Pav Sensor Footfall by Hour[Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "62fa1763-4b79-4cf9-a0f6-333a992d4624",
            "sourceColumn": "Pav Sensor Footfall by Hour[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c0fd5e55-3b23-406e-9cfa-421dcc6adef1",
            "sourceColumn": "Pav Sensor Footfall by Hour[Location_type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "a950c943-60e6-42b6-86d3-1a8e647348ce",
            "sourceColumn": "Pav Sensor Footfall by Hour[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e07deaff-260e-4994-a760-5d9381787b2f",
            "sourceColumn": "Pav Sensor Footfall by Hour[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "34d718b8-2896-4a39-a346-f4e70f61c683",
            "sourceColumn": "Pav Sensor Footfall by Hour[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "cdf945bb-ad99-48cc-bdd7-f52356ff7ba2",
            "sourceColumn": "Pav Sensor Footfall by Hour[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "03aab1d4-6e54-4c24-9fff-0124d440c6a3",
            "sourceColumn": "Pav Sensor Footfall by Hour[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e6a6cfb1-e85e-411d-865e-0148db534c9a",
            "sourceColumn": "Pav Sensor Footfall by Hour[Event And Season]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "28155689-5766-479c-89aa-b2053d144573",
            "sourceColumn": "Pav Sensor Footfall by Hour[Concert type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Rank",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "RANKX(FILTER('Pav Sensor Footfall by hour events', 'Pav Sensor Footfall by hour events'[Operation_Date] = EARLIER('Pav Sensor Footfall by hour events'[Operation_Date]) && 'Pav Sensor Footfall by hour events'[Entry_Hour]  = EARLIER('Pav Sensor Footfall by hour events'[Entry_Hour]) && 'Pav Sensor Footfall by hour events'[Location]  = [Location]  && ('Pav Sensor Footfall by hour events'[Location_type]  =\"PAVILION\" ||'Pav Sensor Footfall by hour events'[Location_type]  =\"ATTRACTION\") ), 'Pav Sensor Footfall by hour events'[Total_Entries],,DESC,Dense)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "b09892ae-a476-48ee-af04-8838af90d10a",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Top locations footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF('Pav Sensor Footfall by hour events'[Rank] <= 5, 'Pav Sensor Footfall by hour events'[Location], \"Others\")",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "5108b396-64c3-4236-9492-0d90ebd0ec93",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d4f6d163-85aa-42b0-8b4d-c3f6bba30a1e",
            "sourceColumn": "Pav Sensor Footfall by Hour[Season_ID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "b399bc01-992e-4fc0-b04b-86f23cdc0b33",
        "measures": [
          {
            "name": "Peak event",
            "expression": [
              "",
              "",
              "SWITCH(",
              "MROUND (",
              "    CALCULATE(AVERAGE('Pav Sensor Footfall by hour events'[PEAK]))",
              ",0.5),",
              "16,\"4:00 pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm\",18.50,\"6:30 pm\", 19, \"7:00 pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm\",22.5, \"10:30 pm\",23,\"11:00 pm\",23.5, \"11:00 pm\",0,\"12:00 am\")",
              ""
            ],
            "lineageTag": "25e69121-ebaa-4d89-9857-7b80b60df500"
          }
        ],
        "partitions": [
          {
            "name": "Pav Sensor Footfall by hour events-e5a9cbd6-cc52-417f-8709-14b17e328b1f",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE('Pav Sensor Footfall by Hour','Pav Sensor Footfall by Hour'[Event]<>\"Weekday\" &&'Pav Sensor Footfall by Hour'[Event]<>\"Weekend\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Family Day\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - First Day\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Last Day\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Group Stage\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Round of 16\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Quarter Finals\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Semi-Finals\"&&'Pav Sensor Footfall by Hour'[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_554eb9d5-de76-4aaf-b832-1dbbcc33b2c4",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "9da47a59-1110-4b96-a25b-9bde33b5f1c3",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "472cc76c-fe38-4041-8c5e-d1994df4cea9",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "4a24cf59-e36b-4f4c-98f0-db3adc671e7c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "910ff65f-1c20-455f-b14d-81e62054a9f8",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f76f3a25-3caf-4109-862e-acd0288fd7ee",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "a66ff5cd-a25f-448d-9916-af912344e7fa",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "98933fa1-43d8-47b7-a3d7-239fc6aa85ea",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "a25a5438-3ac3-4405-9724-332159234fc6",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "5721741e-ac3c-4a6a-8c01-666075384d54",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "5081ba69-2d5c-4d60-b0db-0d823bb5ade9",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "9e4258f7-4189-4076-b8cd-86618c1fa811",
                "ordinal": 3
              }
            ],
            "lineageTag": "68524b0f-8340-4b04-9b84-7dec2d525202"
          }
        ],
        "isHidden": true,
        "lineageTag": "186133a4-8ab6-406d-b057-0b05984c0e44",
        "partitions": [
          {
            "name": "LocalDateTable_554eb9d5-de76-4aaf-b832-1dbbcc33b2c4-c9528c04-7baa-4ce8-a650-3566e71af314",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Pav Sensor Footfall by hour events'[Operation_Date])), 1, 1), Date(Year(MAX('Pav Sensor Footfall by hour events'[Operation_Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "Movement - Wifi events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "977d25e052d64e65b1680e6f47b248bc"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9e594baa-6f39-4ec4-88f1-b29cfc2da656",
            "sourceColumn": "Movement - Wifi[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "fromZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c26020fc-048e-4e69-a41d-960ce83b5616",
            "sourceColumn": "Movement - Wifi[fromZone]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "toZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "f0625a95-e0b8-42d3-a203-06f8babab3b0",
            "sourceColumn": "Movement - Wifi[toZone]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4c04834d-9ae4-44ac-9129-9493ca289a76",
            "sourceColumn": "Movement - Wifi[count]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b092cbee-adeb-4ddd-afdb-8cb43cd0e46e",
            "sourceColumn": "Movement - Wifi[SeasonID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "3772a85c-63fc-4b4b-9ae5-976f9c5f7744",
            "sourceColumn": "Movement - Wifi[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "44de0051-b402-4bc2-ac17-30356af7e5d2",
            "sourceColumn": "Movement - Wifi[Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b8145dbc-c5f2-4b60-ba60-e0c90325d692",
            "sourceColumn": "Movement - Wifi[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7a745ae2-eee6-456d-bc00-fe0827a4cb48",
            "sourceColumn": "Movement - Wifi[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "fromZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1853dce8-3868-4cf9-8b71-3b29cc79d7d1",
            "sourceColumn": "Movement - Wifi[fromZoneLatitude]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "fromZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c27df750-f646-47d3-b7fc-528e8b838144",
            "sourceColumn": "Movement - Wifi[fromZoneLongtitude]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "67fe8fd9-41b8-4024-84a0-015f8c005b1d",
            "sourceColumn": "Movement - Wifi[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fdf2b8de-5230-430a-b542-ad11e93eec02",
            "sourceColumn": "Movement - Wifi[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4ff51c26-e051-4fc2-a9dc-0ad690a10045",
            "sourceColumn": "Movement - Wifi[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "53055176-2d93-4869-b6c8-fc5c9b5850b0",
            "sourceColumn": "Movement - Wifi[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event And Season",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "35398e7e-363e-484c-b38d-835766b7c3f0",
            "sourceColumn": "Movement - Wifi[Event And Season]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "toZoneLongtitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4bcf6904-dd71-4072-a67d-77be6fdfceb2",
            "sourceColumn": "Movement - Wifi[toZoneLongtitude]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "toZoneLatitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "666b9d30-db4b-43d6-9cc6-53b60a13c4fa",
            "sourceColumn": "Movement - Wifi[toZoneLatitude]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Concert type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "99a77491-bf00-42ff-9a0c-913d4ad07f58",
            "sourceColumn": "Movement - Wifi[Concert type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Rank",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "RANKX(FILTER('Movement - Wifi events', 'Movement - Wifi events'[Date] = EARLIER('Movement - Wifi events'[Date])&&'Movement - Wifi events'[fromZone] =\"Cultural Hub\"), 'Movement - Wifi events'[count],,DESC,Dense)",
              ""
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e9b81c92-6edb-4356-8ec0-7fa920798c4f",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Top locations movement",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF('Movement - Wifi events'[Rank] <= 5, 'Movement - Wifi events'[toZone], \"Others\")",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "6ed53128-d779-4725-a671-48926c1bb882",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "bfd8f4b5-4bd4-4ca2-9928-155246811052",
        "measures": [
          {
            "name": "Flow % event",
            "expression": "CALCULATE(Sum('Movement - Wifi events'[count]))/CALCULATE(sum('Movement - Wifi events'[count]),ALLSELECTED())",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d0f4a3f5-8c2c-44f2-adba-3f33c826285c"
          }
        ],
        "partitions": [
          {
            "name": "Movement - Wifi events-9a13b01f-86e3-4fd6-9627-7329db030acb",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE('Movement - Wifi','Movement - Wifi'[Event]<>\"Weekday\" &&'Movement - Wifi'[Event]<>\"Weekend\"&&'Movement - Wifi'[Event]<>\"Family Day\"&&'Movement - Wifi'[Event]<>\"Fifa WC - First Day\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Last Day\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Group Stage\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Round of 16\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Quarter Finals\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Semi-Finals\"&&'Movement - Wifi'[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Dwell - Ground events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "772ab01f9e8649d89f221cfd9ec43bbc"
          }
        ],
        "columns": [
          {
            "name": "day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e0b4ab29-1b54-4022-bd77-fdaa45b9edf4",
            "sourceColumn": "Dwell - Ground[day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_3b0b21c9-4253-4162-8bc9-05320f3b9811"
                },
                "isDefault": true,
                "relationship": "6bf157df-a9f5-4180-bc83-1f3b9565386c"
              }
            ]
          },
          {
            "name": "footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b820ee11-1e74-4696-b9bc-9edbf3874bd1",
            "sourceColumn": "Dwell - Ground[footfall]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "dwell(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b5029b4f-be56-40b9-bf6f-25af10e5f173",
            "sourceColumn": "Dwell - Ground[dwell(Minutes)]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e7e1d597-93c0-4d85-ad18-c564d0f77bcc",
            "sourceColumn": "Dwell - Ground[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "LocationTypes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d6a26f58-924a-4e70-acce-0f1d56202740",
            "sourceColumn": "Dwell - Ground[LocationTypes]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "VisitLength(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ece3cfd8-d533-4d23-b516-c643ce9913f5",
            "sourceColumn": "Dwell - Ground[VisitLength(Minutes)]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "87fe381a-8761-4457-9fa6-5bee4766004e",
            "sourceColumn": "Dwell - Ground[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "SeasonID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e5ca23b3-88d7-42a1-87a5-769853cf55e1",
            "sourceColumn": "Dwell - Ground[SeasonID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4aa463ee-b320-43bd-8d95-ae3615706b01",
            "sourceColumn": "Dwell - Ground[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "70027629-95a1-4c86-bd71-7e44491dfedc",
            "sourceColumn": "Dwell - Ground[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "19efff12-32e5-496c-9334-63edc100cae8",
            "sourceColumn": "Dwell - Ground[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1a1827a6-4703-4979-8a59-a23fedff40e6",
            "sourceColumn": "Dwell - Ground[Column]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4f6164af-a172-45e8-b055-dcdc217b6ba6",
            "sourceColumn": "Dwell - Ground[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4a73f5fa-1c1a-4db2-b5e3-2344e17e2a22",
            "sourceColumn": "Dwell - Ground[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "98f0e130-e5ef-40ec-985e-fe70c44465d5",
            "sourceColumn": "Dwell - Ground[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "b15f5287-b335-4c18-bdf7-1e674af9f178",
        "partitions": [
          {
            "name": "Dwell - Ground events-ffaa58d7-302b-4a33-aca9-87d2531d1713",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE('Dwell - Ground','Dwell - Ground'[Event]<>\"Weekday\" &&'Dwell - Ground'[Event]<>\"Weekend\"&&'Dwell - Ground'[Event]<>\"Family Day\"&&'Dwell - Ground'[Event]<>\"Fifa WC - First Day\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Last Day\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Group Stage\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Round of 16\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Quarter Finals\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Semi-Finals\"&&'Dwell - Ground'[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_3b0b21c9-4253-4162-8bc9-05320f3b9811",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "708ca55a-9f27-45e0-8181-196be228f035",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "5e8cbc25-9b72-49da-9d76-cf723e659084",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "12b2a964-10ef-45c4-a386-b90920db9d77",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "fc97d1cf-1eb8-4d2c-81ef-20975b665858",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "ba23fb35-ebec-4d6c-8f76-28803cafb838",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "7bc477bc-1f74-46df-a210-b55e45c0e224",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "047fec49-05bc-49bf-a305-8f3e8cc90e75",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "b3b109bd-93c2-4c92-8b91-0be20379baa1",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "5bb193a3-515e-43da-9caf-aad6eacba8d1",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "03ad912a-1b9f-4801-bdf5-d0b8ee71c178",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "ef4f8589-7846-4686-a0f0-9754678b9fff",
                "ordinal": 3
              }
            ],
            "lineageTag": "ac387247-b227-4903-b675-923d9f4189ed"
          }
        ],
        "isHidden": true,
        "lineageTag": "363010b8-d90f-4f9a-8a2d-24f5f305817a",
        "partitions": [
          {
            "name": "LocalDateTable_3b0b21c9-4253-4162-8bc9-05320f3b9811-3a15c9e7-5100-450d-a4ad-998fca16dfca",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Dwell - Ground events'[day])), 1, 1), Date(Year(MAX('Dwell - Ground events'[day])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "DwellByPavAndDate_alllocations events",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "6f3783cdb71d41df9482b202324b679c"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "cef9354e-50ae-4207-a6b9-833c8548522a",
            "sourceColumn": "DwellByPavAndDate_alllocations[Season_ID]",
            "summarizeBy": "count",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7b06279c-5ef7-4b77-bd52-f5570c4c3d16",
            "sourceColumn": "DwellByPavAndDate_alllocations[Operation_Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "footfall",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d29ad3a3-bcf1-4425-a211-eb9b4c90d88c",
            "sourceColumn": "DwellByPavAndDate_alllocations[footfall]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "dwell(Minutes)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c959d946-4198-483c-b498-d03d6e0976c3",
            "sourceColumn": "DwellByPavAndDate_alllocations[dwell(Minutes)]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1e6509a2-29d3-41b5-98f1-d102dccabc2d",
            "sourceColumn": "DwellByPavAndDate_alllocations[Total_Park_Attendence]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "78aa279b-97da-48ae-a21e-516a7c7cf5af",
            "sourceColumn": "DwellByPavAndDate_alllocations[week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "1b366870-43a8-44c3-99e1-bb2973b609ca",
            "sourceColumn": "DwellByPavAndDate_alllocations[day_num_tag]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Season+Location ID2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "b419f45d-8c91-4cad-81d8-c8f31d98157e",
            "sourceColumn": "DwellByPavAndDate_alllocations[Season+Location ID2]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "location_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fbc27b50-0804-42e5-ba67-eb4c041dc121",
            "sourceColumn": "DwellByPavAndDate_alllocations[location_type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "NewLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "567e6c32-9985-421d-9989-d012ed076a32",
            "sourceColumn": "DwellByPavAndDate_alllocations[NewLocation]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "ContinuedLocation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "166d8573-d189-486c-a372-15bef1aa2b15",
            "sourceColumn": "DwellByPavAndDate_alllocations[ContinuedLocation]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "InSelected&ComparedSeasons",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "db1269e7-f718-4cfc-9bd2-4413bc1976a8",
            "sourceColumn": "DwellByPavAndDate_alllocations[InSelected&ComparedSeasons]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "ComparedSeason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0ab204d5-cc33-45ca-9d0f-554050999f57",
            "sourceColumn": "DwellByPavAndDate_alllocations[ComparedSeason]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "SelectedSeason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "61a8b813-d010-4d51-b403-ca59ef35be57",
            "sourceColumn": "DwellByPavAndDate_alllocations[SelectedSeason]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7e222244-5279-406c-9c17-5a660f5189f0",
            "sourceColumn": "DwellByPavAndDate_alllocations[Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "29054929-a67a-4ebf-bbb1-b01f71ef9422",
            "sourceColumn": "DwellByPavAndDate_alllocations[Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "44a7c307-2628-4b97-af58-c7d0242f3685",
            "sourceColumn": "DwellByPavAndDate_alllocations[day_num_tag_shifted]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2849a4c9-85dc-41ed-bb51-8d157ff40f1d",
            "sourceColumn": "DwellByPavAndDate_alllocations[Work Day]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "9c94e4c2-5c7f-43ad-b83e-c50253a3387b",
            "sourceColumn": "DwellByPavAndDate_alllocations[WeekdayNum]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "new_week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "0e419e36-ba8f-45ee-b786-31de8c5c1652",
            "sourceColumn": "DwellByPavAndDate_alllocations[new_week_num]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "89df3c4a-cc7f-4985-9e03-0f362442cb75",
            "sourceColumn": "DwellByPavAndDate_alllocations[Location]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "625c5482-8618-4bfc-81a0-e98b99d15dd2",
            "sourceColumn": "DwellByPavAndDate_alllocations[Event]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "47a97e68-33f7-4b91-81a6-c02fdba0ccf4",
            "sourceColumn": "DwellByPavAndDate_alllocations[Day_Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Event Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "3a4762af-5b82-4e2d-95ad-0fa8ec796588",
            "sourceColumn": "DwellByPavAndDate_alllocations[Event Type]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "1a6aeab4-5567-4caf-a224-29c7259d0897",
        "partitions": [
          {
            "name": "DwellByPavAndDate_alllocations events-e66e92e8-dab8-4494-a91b-6d5079c1d5d4",
            "mode": "import",
            "source": {
              "expression": "CALCULATETABLE('DwellByPavAndDate_alllocations','DwellByPavAndDate_alllocations'[Event]<>\"Weekday\" &&'DwellByPavAndDate_alllocations'[Event]<>\"Weekend\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Family Day\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - First Day\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Last Day\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Group Stage\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Round of 16\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Quarter Finals\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Semi-Finals\"&&'DwellByPavAndDate_alllocations'[Event]<>\"Fifa WC - Third Place Play-off\")",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "ePavilion Wise Details",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Pavilion_Size",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8d61d4df-ee26-4d34-b234-7f7a64c34971",
            "sourceColumn": "Pavilion_Size",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f5de7a4e-ded6-46aa-ac35-81c56c660225",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "126694b0-8ddc-40ba-9bf6-9774452a77d9",
            "sourceColumn": "Location_id",
            "summarizeBy": "none"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b261d50e-243a-4c41-98ab-71e4ccaa3895",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Location Types",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3fdd3344-0fb6-462a-b5af-9220c4b30345",
            "sourceColumn": "Location Types",
            "summarizeBy": "none"
          },
          {
            "name": "Season+Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f7f0f793-0618-4039-b3fe-2b3c7a1820b8",
            "sourceColumn": "Season+Location ID",
            "summarizeBy": "none"
          },
          {
            "name": "No. of Employees",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8b3a47fa-156c-4f90-bdbb-1e5267192011",
            "sourceColumn": "No. of Employees",
            "summarizeBy": "none"
          },
          {
            "name": "Row Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0c4a89cf-d1cb-4bf2-a50a-fd2d66e7b8ce",
            "sourceColumn": "Row Number",
            "summarizeBy": "sum"
          }
        ],
        "excludeFromModelRefresh": true,
        "lineageTag": "dfae5ee8-2f90-4db0-9cf0-72a3481d06f3",
        "partitions": [
          {
            "name": "ePavilion Wise Details-36ed6aee-442a-4a89-91f6-19df111942ce",
            "mode": "import",
            "queryGroup": "Query Errors - 10/31/2022 9:46:04 AM",
            "source": {
              "expression": [
                "let",
                "Source = #\"Pavilion Wise Details\",",
                "  #\"Detected Type Mismatches\" = let",
                "    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),",
                "    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),",
                "    fieldNames = Record.FieldNames(recordTypeFields),",
                "    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),",
                "    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = \"The type of the value does not match the type of the column.\", Detail = v], fieldTypes{i}})",
                "in",
                "    Table.TransformColumns(Source, pairs),",
                "  #\"Added Index\" = Table.AddIndexColumn(#\"Detected Type Mismatches\", \"Row Number\" ,1)",
                "in",
                "    #\"Added Index\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Gates Hourwise Entry",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "bb4533ae-4ce3-421e-95ea-5db53336fbf6",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Entry_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "8ca85b19-cc52-4fe3-8f52-9d9cf8dcdad3",
            "sourceColumn": "Entry_Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_1cfec12f-28ed-43dc-9fd6-16a5dc60e76b"
                },
                "isDefault": true,
                "relationship": "18ad161e-0dd3-4f5e-9e59-bf561ce305d4"
              }
            ]
          },
          {
            "name": "Entry_Hour",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "30c74ace-4955-4c2a-9d14-2d2af72980ef",
            "sourceColumn": "Entry_Hour",
            "summarizeBy": "sum"
          },
          {
            "name": "Hour_String",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5f94283e-569e-44fc-a833-c9ff58b477b9",
            "sourceColumn": "Hour_String",
            "summarizeBy": "none"
          },
          {
            "name": "Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "925a1ce6-61a2-4a86-8ffa-af686b612a93",
            "sourceColumn": "Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6dd28a08-e3fa-4e3f-9289-059441554467",
            "sourceColumn": "GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "Carnaval_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "13de0a0f-5220-41b4-85de-663916b82638",
            "sourceColumn": "Carnaval_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9582ae0c-7c10-40e8-9e0d-800db7a52cf8",
            "sourceColumn": "Fazza_CG",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e68f4fb2-35d3-410d-b6d5-8d7ee05a8481",
            "sourceColumn": "Fazza_GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "HappinessGate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4b2b5599-0331-44b4-acc6-db9009c82844",
            "sourceColumn": "HappinessGate",
            "summarizeBy": "sum"
          },
          {
            "name": "Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b486d7f5-2b44-43a7-a2e3-335e6c04e0bb",
            "sourceColumn": "Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Cumulative",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4a480922-f45e-4576-bc45-c9023354c656",
            "sourceColumn": "Cumulative",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "46fa2456-8521-4e21-abc2-f81ed1c66d7d",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "86f1860a-117b-4a32-8205-37f4437da8ea",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "Peak Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "Return CALCULATE(MAX([Total]),Filter('Gates Hourwise Entry',[Entry_Date]=dates))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "25d5ba88-73a5-40b1-b71d-ce567ae481af",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak Entries Cultural Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "Return CALCULATE(MAX([Cultural_Gate]),Filter('Gates Hourwise Entry',[Entry_Date]=dates))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "343c5d68-521a-4742-b46f-037581f735c2",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak Entries Happines Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "Return CALCULATE(MAX([HappinessGate]),Filter('Gates Hourwise Entry',[Entry_Date]=dates))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "e41fc078-5d1b-4bd3-8647-ad74fa200118",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak Entries Gate of the World",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "Return CALCULATE(MAX([GOW]),Filter('Gates Hourwise Entry',[Entry_Date]=dates))"
            ],
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "902135a2-2aaa-40f6-9b9e-f5dc82564598",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak at Gates",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "VAR peakk=[Peak Entries]",
              "",
              "Return CALCULATE(MAX([Entry_Hour]),Filter('Gates Hourwise Entry',[Entry_Date]=dates && [Total]=peakk))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "71189511-5076-40df-9e9a-11f4a1b6577f",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak at CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "VAR peakk=[Peak Entries Cultural Gate]",
              "",
              "Return CALCULATE(MAX([Entry_Hour]),Filter('Gates Hourwise Entry',[Entry_Date]=dates && [Cultural_Gate]=peakk))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "ac0d5de4-d8ad-4508-a435-bcef52137a7e",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak at GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "VAR peakk=[Peak Entries Gate of the World]",
              "",
              "Return CALCULATE(MAX([Entry_Hour]),Filter('Gates Hourwise Entry',[Entry_Date]=dates && [GOW]=peakk))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "f904a703-8f4a-4118-8963-a05a21efa122",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Peak at HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": [
              "",
              "VAR dates=[Entry_Date]",
              "VAR peakk=[Peak Entries Happines Gate]",
              "",
              "Return IF([Peak Entries Happines Gate] =Blank(),Blank(),CALCULATE(MAX([Entry_Hour]),Filter('Gates Hourwise Entry',[Entry_Date]=dates && [HappinessGate]=peakk)))"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "647ed563-d9ce-4ecc-b750-6f4bc8e9d544",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "day_num_tag_shifted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF ([Entry_Date]>DATE(2022,1,1),[day_num_tag],[day_num_tag]+1)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "b3c42969-d00d-4aea-8aec-bcb7d69a0835",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Work Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "IF(",
              "                [Entry_Date]>Date(2022,1,1),",
              "                    IF(",
              "                        (FORMAT([Entry_Date],\"dddd\")=\"Saturday\" || FORMAT([Entry_Date],\"dddd\")=\"Sunday\"),",
              "                        \"Weekend\",\"Weekday\"),",
              "                     IF(",
              "                        (FORMAT([Entry_Date],\"dddd\")=\"Friday\" || FORMAT([Entry_Date],\"dddd\")=\"Saturday\"),",
              "                        \"Weekend\",\"Weekday\"))",
              "",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "0cec74ef-19a4-4fe4-99a3-47e6ebaadf2c",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "16fb362d-6ef7-4514-a0dd-17be84b3f33b",
        "measures": [
          {
            "name": "Peak Gate Entries Selected Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at Gates]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=selectedseason &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=selectedseason))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "69c8b316-e3ea-4f1a-86c4-472782ddb82c"
          },
          {
            "name": "Measure 3",
            "annotations": [
              {
                "name": "43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c",
                "value": "True"
              }
            ],
            "lineageTag": "2b83ae3a-9ec3-4807-9aac-d340dad55a06"
          },
          {
            "name": "Peak Gate Entries compared Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at Gates]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=compare &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=compare))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "6618796c-da8f-42ac-b3a3-e396d181c42b"
          },
          {
            "name": "Peak GOW compared Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at GOW]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=compare &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=compare))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "f67a4626-2e51-4d11-8518-b483c14c87f5"
          },
          {
            "name": "Peak CG compared Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at CG]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=compare &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=compare))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "3e6ee7fa-c5bf-4128-90e6-c752034459ea"
          },
          {
            "name": "Peak GOW Selected Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at GOW]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=selectedseason &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=selectedseason))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "7aa644aa-1ccc-4ad8-b399-aba256ebc8bf"
          },
          {
            "name": "Peak CG Selected Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at CG]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=selectedseason &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=selectedseason))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "92b72407-6282-4b55-b17c-2a133a3f6d95"
          },
          {
            "name": "Peak HG Selected Season",
            "expression": [
              "",
              "VAR selectedseason = SELECTEDVALUE('Selected Season'[SeasonID])//SELECTEDVALUE('GuestCounts'[Season_id])",
              "VAR compare = SELECTEDVALUE('Compare with'[Value])",
              "VAR like_to_like = \"Same # Of Days\"//SELECTEDVALUE('Like to Like'[Value])",
              "VAR selected_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR selected_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=selectedseason)",
              "VAR compare_park_days=CALCULATE(MAX('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "VAR compare_park_days_min=CALCULATE(MIN('Pav Sensor + Park Footfall 2'[day_num_tag_shifted]),'Pav Sensor + Park Footfall 2'[Season_ID]=compare)",
              "",
              "VAR min_date=MAX(selected_park_days_min, compare_park_days_min)",
              "VAR max_date=IF(compare_park_days<> Blank(),MIN(selected_park_days, compare_park_days),selected_park_days)",
              "",
              "",
              "RETURN ",
              "SWITCH(",
              "MROUND(IF(like_to_like=\"Same # Of Days\",",
              "CALCULATE(",
              "    AVERAGE([Peak at HG]),",
              "    Filter('Gates Hourwise Entry',",
              "    [Season_ID]=selectedseason &&",
              "    [day_num_tag_shifted]<=max_date&&",
              "    [day_num_tag_shifted]>=min_date )),",
              "     CALCULATE(AVERAGE([Peak at Gates]),",
              "      FILTER(('Gates Hourwise Entry'),",
              "   [Season_ID]=selectedseason))",
              " ),1),16,\"4:00pm - 5:00pm\",",
              "16.5,\"4:30 pm\", ",
              "17, \"5:00 pm-6:00pm\",",
              "17.5,\"5:30 pm\", 18, \"6:00 pm-7:00pm\",18.50,\"6:30 pm\", 19, \"7:00 pm-8:00pm\",19.50,\"7:30 pm\" ,20 ,\"8:00 pm-9:00pm\",20.5 ,\"8:30 pm\", 21, \"9:00 pm-10:pm\", 21.5, \"9:30 pm\", 22, \"10:00 pm-11:00pm\",22.5, \"10:30 pm\",23,\"11:00 pm-12:00pm\",23.5, \"11:30 pm\",0,\"12:00 am-01:00am\")",
              " "
            ],
            "lineageTag": "df0f710b-c1cc-4207-9a17-708ad7601c8a"
          }
        ],
        "partitions": [
          {
            "name": "Gates Hourwise Entry-18ce2504-fc0e-4846-8ced-100058185748",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Gates Hourwise Entry1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Gates Hourwise Entry\"]}[Data],",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Gates Hourwise Entry1\",0,24,Replacer.ReplaceValue,{\"Entry_Hour\"})",
                "in",
                "    #\"Replaced Value\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_1cfec12f-28ed-43dc-9fd6-16a5dc60e76b",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "ec759594-c94a-4c45-84f7-f9324068c680",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "ffd876f6-8670-445f-9f85-a5a4e83bb1df",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "9fdbce7a-5a2c-431c-a88b-f9421acfb29e",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "c7ccf5cf-ca4e-43c8-a66d-eb068931043a",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f24d6686-2325-400d-9fce-d78f6d060f55",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "553ea575-84b1-4bd5-bebe-ddc178ee7713",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "4c53e63d-82ea-4b1b-a126-569ef64181a2",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "6b494dd6-f2c8-43d8-986b-98b2f10c1d22",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "f93345f8-88a6-4680-b63f-872200cf5aa7",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "f995a7b2-15d1-4397-8c33-89cad77b148b",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "835aafd5-32c2-4f84-823a-c322d05abd07",
                "ordinal": 3
              }
            ],
            "lineageTag": "c97667e4-3f6c-49e6-83b3-a1f3c5d612f7"
          }
        ],
        "isHidden": true,
        "lineageTag": "871e6f1d-44e5-4435-ad5f-4446773f81e7",
        "partitions": [
          {
            "name": "LocalDateTable_1cfec12f-28ed-43dc-9fd6-16a5dc60e76b-3bcce4db-d256-4942-924f-a9b7f401a4f6",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Gates Hourwise Entry'[Entry_Date])), 1, 1), Date(Year(MAX('Gates Hourwise Entry'[Entry_Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "LocalDateTable_c7c4d261-be9f-4768-b288-545de5fe5221",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "b0ba357e-a9c4-4217-82a7-4319574e29c5",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "85c3840c-9cb7-45ca-9931-74e8cb5b471f",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "8c5455fc-bf27-4a7a-aa77-272ee05d455b",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "5670c8c2-70d7-4d99-988a-551efa0934bc",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "d565ad6e-fc7f-4968-8b97-8d6c55bdf429",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "d482638a-f214-4852-b4db-a6f45f32195d",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "5a5a58c0-84e6-439a-b3bb-6637990eabce",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "1b3c3805-d1d7-4cfd-b3f5-644eedcf7e8b",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "baf59bf5-6bf8-4b7e-bf74-a5ac5682b663",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "8ccdad5c-3a2c-4860-80db-c3dd35737f2e",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "9e3f8168-3a50-4b45-88ba-575c1e7fb65c",
                "ordinal": 3
              }
            ],
            "lineageTag": "1405193c-60d4-476c-84e9-69c55349a87d"
          }
        ],
        "isHidden": true,
        "lineageTag": "86222d00-79c3-4c00-9d3f-2ccf576022b3",
        "partitions": [
          {
            "name": "LocalDateTable_c7c4d261-be9f-4768-b288-545de5fe5221",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Sales Data all Seasons'[Date])), 1, 1), Date(Year(MAX('Sales Data all Seasons'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "GuestCounts (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "240c40ca-b643-4d44-ace7-8480e790af02",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e37d8314-d6f8-4663-9a29-abe8e287b134",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "150827df-7a07-4633-97ac-cefb7a19d5b6",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "e3d7b8d0-abe1-4aab-9ec3-b1b5ebca1c37",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_5ad591bb-daba-44c9-b0e6-88099fdaaaeb"
                },
                "isDefault": true,
                "relationship": "d9c23b0d-b2ea-4aa3-8af8-f02a5cdc1fae"
              }
            ]
          },
          {
            "name": "Total_Park_Attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "300fe531-41ce-43b9-8c5e-8fa220f11f16",
            "sourceColumn": "Total_Park_Attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "770f8cc3-b2c2-49ec-8a15-beaa10af8889",
            "sourceColumn": "VIP-GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "CulturalGate_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "97d2a694-dde8-4e5e-a1cc-1ad8d4bc07ea",
            "sourceColumn": "CulturalGate_CG",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "23b44118-92f1-4bf1-b5dc-d7955b655261",
            "sourceColumn": "Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Emergency_Tickets_and_Gate_5C",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "58b07a4a-500e-47d1-9718-4f12cc0a1de0",
            "sourceColumn": "Emergency_Tickets_and_Gate_5C",
            "summarizeBy": "sum"
          },
          {
            "name": "HG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4a29133c-0fe5-4c7e-854b-22af30bd973d",
            "sourceColumn": "HG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f405f605-b9c1-4f79-b657-adfaa91bdcbe",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3ba7e67c-7dae-464e-9d39-ceed05662c1a",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel_Agents_WEBB2B",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "71f887bb-a381-4af9-9985-502ee8f9a936",
            "sourceColumn": "Travel_Agents_WEBB2B",
            "summarizeBy": "sum"
          },
          {
            "name": "Family_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bf083563-c9d4-4d06-be30-c7b93a04693f",
            "sourceColumn": "Family_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e6f7cd17-f171-42b5-b193-d75eecef0c9f",
            "sourceColumn": "Fazza",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2f5d6a3d-74e3-44a1-ae19-81dbcaefaebb",
            "sourceColumn": "VIP-CG",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e2ffd51a-981f-4eb2-a9d7-0a6df615efc5",
            "sourceColumn": "VIP-HG",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b28e25f2-653f-4a5b-95e7-8fa017abab18",
            "sourceColumn": "Web_Sales_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Main_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f13c08a7-333f-4cd9-9273-3b3e3a5e8b0a",
            "sourceColumn": "VIP_Main_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily_Ticket_Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c7cfe886-4bd5-419c-a35f-f07c9cbd416f",
            "sourceColumn": "Daily_Ticket_Sales",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "8a72fc4f-9f19-4045-94e5-a75c108c1dff",
        "partitions": [
          {
            "name": "GuestCounts (2)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"GuestCounts (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"GuestCounts (2)\"]}[Data]",
                "in",
                "    #\"GuestCounts (2)1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_5ad591bb-daba-44c9-b0e6-88099fdaaaeb",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "c1001716-644d-4a3c-8506-916b033a10f8",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "18d9e04e-82f1-4d99-b3f8-7572d4e1ec62",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "9a42a221-425e-457d-ac09-9b576d2357b2",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "ed5c2dd8-3de8-4161-ac6e-4abcc4fee362",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "d09c5974-ef76-4e65-a89c-1e2f463ef190",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "700daacf-f86a-4b81-8ea7-121664a2eae5",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "12e3f72a-c90f-49e2-b7e7-f312c412a604",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "8156e41c-10fa-413c-b918-6e97d4d24139",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "58bcb0da-d8a5-4898-a8a8-d27b35eeeb72",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "99468384-1d8b-4564-a32b-51f2b9224b7f",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "9c2cd20a-6747-4a9a-add8-883b196360a2",
                "ordinal": 3
              }
            ],
            "lineageTag": "e3b20852-1f66-4c70-ae49-8e7d9d5a7a56"
          }
        ],
        "isHidden": true,
        "lineageTag": "4722af30-b3d3-4a76-b4a3-4b1fd2d16b39",
        "partitions": [
          {
            "name": "LocalDateTable_5ad591bb-daba-44c9-b0e6-88099fdaaaeb",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('GuestCounts (2)'[Date])), 1, 1), Date(Year(MAX('GuestCounts (2)'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "GuestCounts (3)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "69492227-3f34-4c52-969a-c04388f7c862",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "26e5a09f-6ca3-4cf0-ab4e-53cbfb0115c4",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9e05b854-5ca1-4975-b956-79b6ed6e6c93",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "102308b4-8682-4cb5-9d36-89f675e9b8ac",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_3867993e-887a-4975-b63d-bc647f1e0c90"
                },
                "isDefault": true,
                "relationship": "a7f98b78-c817-4898-89f9-27bebabd02ae"
              }
            ]
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "75be30e3-5d38-4e4b-954a-d713e26c544e",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "Gate_Of_The_Word",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "08905898-70ba-43ae-966e-c87971ca8cc5",
            "sourceColumn": "Gate_Of_The_Word",
            "summarizeBy": "sum"
          },
          {
            "name": "Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4ba0adb5-20be-4dbf-ba01-4695e405e6ad",
            "sourceColumn": "Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "501db60e-859f-4945-8d4c-4baa9a640821",
            "sourceColumn": "Happiness Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Carnaval Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9d7a11e8-3a53-4b99-bb62-471c4bcab394",
            "sourceColumn": "Carnaval Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "HG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e44b7290-fc5d-433f-b252-0a67dccce23b",
            "sourceColumn": "HG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "890259c1-e002-485d-9e34-d0eb0d0d7141",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6bdf1cb6-f048-428a-9dee-830067017c7a",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel agents (WEB B2B)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5eacfc56-e4ce-40d5-97be-4d0461aa2f98",
            "sourceColumn": "Travel agents (WEB B2B)",
            "summarizeBy": "sum"
          },
          {
            "name": "Family packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ebf1d038-c30d-4df9-b858-35594083722f",
            "sourceColumn": "Family packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7a117a08-3671-419e-964a-881c5a0c51fd",
            "sourceColumn": "Fazza",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "07800025-d00d-42a5-8a84-a8ffbcdfe287",
            "sourceColumn": "VIP-CG",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6b0410c5-e860-4f76-909c-8e904182d951",
            "sourceColumn": "VIP-HG",
            "summarizeBy": "sum"
          },
          {
            "name": "Web sales Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "056d99b4-06ed-4ff7-b065-ca6f930af870",
            "sourceColumn": "Web sales Total",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP-GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7d5dfc78-9db0-46b9-ba76-3f70f8414be9",
            "sourceColumn": "VIP-GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily ticket sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "19f22e02-f282-4485-8225-5f58db30d6b5",
            "sourceColumn": "Daily ticket sales",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "022b766c-751f-4bc6-9ecf-e6c2481bfe97",
        "partitions": [
          {
            "name": "GuestCounts (3)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"GuestCounts (3)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"GuestCounts (3)\"]}[Data]",
                "in",
                "    #\"GuestCounts (3)1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_3867993e-887a-4975-b63d-bc647f1e0c90",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "2ecbc3ed-0945-429f-8c6d-f943f132b277",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "8fc2f85c-0ba6-4ad7-83ad-63ba072ab82c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "29c57d23-47ef-4923-a11f-bcb331284660",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "60ba196c-517a-49eb-9fbc-ea34ed4b39eb",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "ba746dc9-c6e4-4856-996a-369649b49c80",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "e2411e61-6a29-4da8-b260-832c9050f43a",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "415381bd-dd95-4fe2-80db-0ce0909ad3fe",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "532cf7d9-c0c7-423a-9a10-6ee059360a94",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "fe25fe97-ff22-48dd-a6e3-d4a101bed2b3",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "a9d05a58-2a53-4538-b6c8-4fcd5b746738",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "b8982aeb-0685-4a39-96ad-0e19740bf9df",
                "ordinal": 3
              }
            ],
            "lineageTag": "685e854e-a966-446c-a48b-ac990b957a3a"
          }
        ],
        "isHidden": true,
        "lineageTag": "d63df838-16ec-40e1-8627-2e193abff707",
        "partitions": [
          {
            "name": "LocalDateTable_3867993e-887a-4975-b63d-bc647f1e0c90",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('GuestCounts (3)'[Date])), 1, 1), Date(Year(MAX('GuestCounts (3)'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "Pav Sensor + Park Footfall 2 (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "027457c8-46cc-486d-a917-404a5f446d9a",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "7a567e6b-af48-4847-a02f-1ffdb9aa8991",
            "sourceColumn": "Operation_Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_d46aa641-184a-47aa-b53d-e70f423e2c27"
                },
                "isDefault": true,
                "relationship": "29798ccf-5732-4fee-9995-b8ba328e38f1"
              }
            ]
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ffd3601e-507b-4fad-8960-1411078c7cc1",
            "sourceColumn": "Location_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b087a5c9-08e7-4422-8144-36001e5ace70",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Sensor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ea0148fb-c7d2-42d2-b920-3b822b6a6026",
            "sourceColumn": "Sensor",
            "summarizeBy": "none"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b2611ab7-0696-4b8f-889d-abd8e1da9773",
            "sourceColumn": "Total_Entries",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "acac31ce-8a2d-4b57-939e-ef5a3c2901b4",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "GOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4b1130b4-3be2-4136-ad30-bc8850123ce7",
            "sourceColumn": "GOW",
            "summarizeBy": "sum"
          },
          {
            "name": "GOW & CG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5235eb82-8202-4274-8da7-b5a342ac0cf6",
            "sourceColumn": "GOW & CG TVM",
            "summarizeBy": "sum"
          },
          {
            "name": "CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "50a54a77-7035-429d-bf23-86929f830b83",
            "sourceColumn": "CG",
            "summarizeBy": "sum"
          },
          {
            "name": "HG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "720bf6d4-735d-4e78-9b76-7597dfd3ea0d",
            "sourceColumn": "HG",
            "summarizeBy": "sum"
          },
          {
            "name": "HG TVM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "41590981-748d-4b59-9766-e3d762a35a9c",
            "sourceColumn": "HG TVM",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e3914286-a531-4121-9cde-4553513475a5",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9d2f7235-30af-4dfc-83a2-9234584d72d8",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "60779a0c-f913-4356-876c-463fb48b1cfa",
        "partitions": [
          {
            "name": "Pav Sensor + Park Footfall 2 (2)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Pav Sensor + Park Footfall 2 (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Pav Sensor + Park Footfall 2 (2)\"]}[Data]",
                "in",
                "    #\"Pav Sensor + Park Footfall 2 (2)1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_d46aa641-184a-47aa-b53d-e70f423e2c27",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "b956bce0-f785-401f-bf43-9277c7b54032",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "0cfb10f1-0560-443b-a253-c69844c0f33c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "64700fc2-811d-4334-99a9-e56bc706cfd0",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "3cf6c5ae-024e-49ba-8c68-eb44f887bb7d",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "73764199-c265-408f-aefb-d30dcb0598be",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "80786ae8-b837-433c-866e-20db542e0819",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "746d42da-5db8-4c2c-b4e0-04b09501ab10",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "be80b67a-abdd-4577-875c-6b3a520aa83e",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "9d4afea4-9287-4012-8fb8-91be583339df",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "54533d79-bd02-46f8-a257-f4d6b39917c2",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "36fcd48b-192a-4f20-9d27-a59e99dc85c9",
                "ordinal": 3
              }
            ],
            "lineageTag": "bc7b6e39-8327-4291-9556-7815169465d6"
          }
        ],
        "isHidden": true,
        "lineageTag": "00731b92-323e-40ea-9170-f3e12f7a6df3",
        "partitions": [
          {
            "name": "LocalDateTable_d46aa641-184a-47aa-b53d-e70f423e2c27",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Pav Sensor + Park Footfall 2 (2)'[Operation_Date])), 1, 1), Date(Year(MAX('Pav Sensor + Park Footfall 2 (2)'[Operation_Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "Pav Sensor Footfall by Hour (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Season_ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "dab3e4af-a00c-48c4-b205-333b63ef3d61",
            "sourceColumn": "Season_ID",
            "summarizeBy": "count"
          },
          {
            "name": "Operation_Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "74336d94-0916-4b7d-9616-a5299a3799e3",
            "sourceColumn": "Operation_Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_c6b3be0f-2b2c-4a1c-9f42-416831735a37"
                },
                "isDefault": true,
                "relationship": "78faac29-88c5-4008-ab84-45d28ad58242"
              }
            ]
          },
          {
            "name": "Location_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "05f1d8b7-f0c8-4140-b0f4-6a6e576a6ab9",
            "sourceColumn": "Location_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Location",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0a207b50-9d82-4c15-ab81-7c5f5ee9ab04",
            "sourceColumn": "Location",
            "summarizeBy": "none"
          },
          {
            "name": "Entry_Hour",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "36c50d80-5881-4f85-b63e-455577389310",
            "sourceColumn": "Entry_Hour",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Entries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7ca5bc84-3f88-409e-808d-c036ad5f792f",
            "sourceColumn": "Total_Entries",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendence",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c1575f6f-1f5e-4595-87d5-7ee2adbcf2af",
            "sourceColumn": "Total_Park_Attendence",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3128fb42-cba3-4eed-a8a2-5ff7ac6b18e3",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1cac6fa1-3de7-4053-9b83-b23a19ab5bce",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "9ea48522-276e-412a-bb34-809535a533bf",
        "partitions": [
          {
            "name": "Pav Sensor Footfall by Hour (2)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Pav Sensor Footfall by Hour (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Pav Sensor Footfall by Hour (2)\"]}[Data]",
                "in",
                "    #\"Pav Sensor Footfall by Hour (2)1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_c6b3be0f-2b2c-4a1c-9f42-416831735a37",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "cd834a4b-2386-4eaa-b628-9580ef9b961b",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "abc7f043-5b08-4442-8b62-5ce8f8d55b15",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "507477b7-8e5b-4ecb-9d22-da4dd89c7718",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "0b1b6acf-fa80-4500-bee6-0d40a3df314e",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "912dd164-e8d6-4987-bbe9-7ae158cd32d8",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "be5fd91e-9c74-412f-9bcf-b0dc7499c710",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "37a326af-a0a4-4af2-b70b-4e292a6bebb1",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "c17d5681-4fc3-45ca-b827-88e2dd915f25",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "bd7ce372-bbf9-4d1f-bd3e-7ab5b6e35921",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "4471226a-40dd-45ed-aa3a-e87ccc8c6af1",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "84a06d4b-9438-487b-9fb9-2e01b33e5de2",
                "ordinal": 3
              }
            ],
            "lineageTag": "4329024e-5174-4f80-8e7e-d3c6bb42218d"
          }
        ],
        "isHidden": true,
        "lineageTag": "cb6b0f90-b628-40a4-a484-e60a4846b0e3",
        "partitions": [
          {
            "name": "LocalDateTable_c6b3be0f-2b2c-4a1c-9f42-416831735a37",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Pav Sensor Footfall by Hour (2)'[Operation_Date])), 1, 1), Date(Year(MAX('Pav Sensor Footfall by Hour (2)'[Operation_Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "S27_GuestCounts_2",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "332614ad-d9b6-43d7-8edc-30fa2327f908",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_5c1cdbb3-6770-4400-9b16-989b283421d7"
                },
                "isDefault": true,
                "relationship": "6d74822c-87de-45aa-924c-c7250c1920e9"
              }
            ]
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7b2fbc31-450c-46ee-b8a0-fd4fee12fa00",
            "sourceColumn": "Day",
            "summarizeBy": "none"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "91023a30-6414-4f37-84a7-14deedf29f01",
            "sourceColumn": "Day_Type",
            "summarizeBy": "none"
          },
          {
            "name": "Gate_of_the_World_GOTWA",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0d8d53e6-57e8-4ff7-ad53-87966d9cfdd4",
            "sourceColumn": "Gate_of_the_World_GOTWA",
            "summarizeBy": "sum"
          },
          {
            "name": "CulturalGate_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "48a2f09f-5646-453b-a3ac-904f74871315",
            "sourceColumn": "CulturalGate_CG",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a10089b9-ac93-470d-9c1f-449f86a3fc30",
            "sourceColumn": "Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4a73dfae-9dce-49bb-922d-141f448480bc",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "HG_Self_Vending_Kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6b72034b-73b4-449e-86b3-514825e4bb57",
            "sourceColumn": "HG_Self_Vending_Kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Ticket_Printing_Error",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9c94cbd0-0b2b-4d16-8d0e-4ea986aebe6b",
            "sourceColumn": "Ticket_Printing_Error",
            "summarizeBy": "sum"
          },
          {
            "name": "Emergency_Tickets_and_Gate_5C",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "af53d530-3d87-4aad-a58f-d501694192bd",
            "sourceColumn": "Emergency_Tickets_and_Gate_5C",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily_Ticket_Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ae91fdae-ada7-40f8-a526-a225ed26572e",
            "sourceColumn": "Daily_Ticket_Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Main_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3e9d3803-9347-4f0c-bc37-32d3d7e1cd78",
            "sourceColumn": "VIP_Main_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5092841d-ca4f-4ea8-9363-7df8d05dc8b3",
            "sourceColumn": "VIP_Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d7e25feb-0a65-4627-b8fd-d4a3f962c33d",
            "sourceColumn": "VIP_Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Main_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d908b57c-d8ee-4360-9101-5e7d8b3d9a29",
            "sourceColumn": "Fazza_Main_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "42a7329e-b61f-42ec-b234-5789382fb510",
            "sourceColumn": "Fazza_Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ec9bdc47-6003-43f3-80fa-55744f7e7de3",
            "sourceColumn": "Fazza_Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Family_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3eeeebfe-d735-4d86-972f-0f85778640bb",
            "sourceColumn": "Family_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre_Sales_Group_Discount_and_Corporate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ab85e5e7-53f8-44fa-b6a3-55beba8fe97b",
            "sourceColumn": "Pre_Sales_Group_Discount_and_Corporate",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel_Agents_WEBB2B",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b185524b-6463-4b57-856e-f9ca22f35a0e",
            "sourceColumn": "Travel_Agents_WEBB2B",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "61901a18-aad4-4aa9-aa34-526513ee2152",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b373de79-28c2-4c55-898e-2cd8a6c3019c",
            "sourceColumn": "Web_Sales_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_B2C_AnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "df6dd43e-2881-4409-a454-10248a358348",
            "sourceColumn": "Web_Sales_B2C_AnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f9b92e15-4d98-4470-bee7-3bf60c714862",
            "sourceColumn": "Web_Sales_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c5d21856-6ead-492a-a82e-ba8e0187fb4e",
            "sourceColumn": "Esaad_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8becdb19-fd0c-461f-b894-78313fc8842f",
            "sourceColumn": "Esaad_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "AlSaada_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f65644fc-9abb-4cdb-9dbb-ada2478b15e8",
            "sourceColumn": "AlSaada_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "AlSaada_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f34a31ea-d428-4021-8c9d-06c87bdaf71f",
            "sourceColumn": "AlSaada_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6087b25e-f5fb-400c-82e3-38e74064d23a",
            "sourceColumn": "Homat_Al_Watan_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6a72340b-ab53-4d9d-b577-5d4b7379299c",
            "sourceColumn": "Homat_Al_Watan_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_from_pre_Sold_Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "46e48fb5-b48e-418f-8d6d-b431ae113d37",
            "sourceColumn": "Entries_from_pre_Sold_Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Comps_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "736a72da-3c52-4c6e-8c7d-49406825b27b",
            "sourceColumn": "VIP_Comps_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4d733489-9bba-4b28-a907-3ad7347f81a9",
            "sourceColumn": "VIP_General_Admission_Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Mini",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3d1d84e1-5716-4b29-855d-5b45369bec9f",
            "sourceColumn": "VIP_General_Admission_Mini",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Media",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "77b796fe-4ceb-447f-b7ba-8d9179ad39dd",
            "sourceColumn": "VIP_General_Admission_Media",
            "summarizeBy": "sum"
          },
          {
            "name": "Family_Packs_Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1acd3eb0-e7f2-484c-8190-2d1aba23d3cc",
            "sourceColumn": "Family_Packs_Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "Employee_and_Other_comps_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b0815d5d-4632-4f92-850f-998a92f774b3",
            "sourceColumn": "Employee_and_Other_comps_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary_A_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9589fd5c-af16-444d-9d49-c96c6ef23642",
            "sourceColumn": "Complimentary_A_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GovtAuthority_Complimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "dcc66a8b-7519-4f93-a6f3-71088f622796",
            "sourceColumn": "GovtAuthority_Complimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GVCEOComplimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "17f67b41-8583-4e65-8eac-7ed1ba63705d",
            "sourceColumn": "GVCEOComplimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GV_Entertainment _Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "564d8ff1-b409-428a-b85f-2d5562236e93",
            "sourceColumn": "GV_Entertainment _Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Media_Pass",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "620c018f-7617-4bab-a6ad-c9e2bc607510",
            "sourceColumn": "Media_Pass",
            "summarizeBy": "sum"
          },
          {
            "name": "Mystery_Shopper_Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "88ebcc18-cdcc-4040-ac21-acca7797a00c",
            "sourceColumn": "Mystery_Shopper_Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "Security_Complimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "68557f5f-1d46-4e3e-94fe-c3f699ef73f9",
            "sourceColumn": "Security_Complimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Emirates_Airline_Promotion_Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5ba1994c-9e76-4133-98d3-8b78ebda7f9c",
            "sourceColumn": "Emirates_Airline_Promotion_Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "DHE_Family_Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "eeb095da-d000-4700-9747-60ecd1b82c3f",
            "sourceColumn": "DHE_Family_Day",
            "summarizeBy": "sum"
          },
          {
            "name": "B2CAnyDay_General_Admission_DPRPromotion",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9544a219-f6f0-48b7-ab78-7d9d4cdaa3cf",
            "sourceColumn": "B2CAnyDay_General_Admission_DPRPromotion",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary_Ticket_E",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "35987b30-80b7-41b4-97c1-a0d530267012",
            "sourceColumn": "Complimentary_Ticket_E",
            "summarizeBy": "sum"
          },
          {
            "name": "Others",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "89902e28-376c-422a-b35b-c5c3828eff10",
            "sourceColumn": "Others",
            "summarizeBy": "sum"
          },
          {
            "name": "Child_Under_3_years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "76c90233-9e0d-4923-8ac8-6cd8dc97d562",
            "sourceColumn": "Child_Under_3_years",
            "summarizeBy": "sum"
          },
          {
            "name": "People_of_Determination_Plus_Assistant",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "76a3d376-1153-46cd-b9a7-0e69f318caa9",
            "sourceColumn": "People_of_Determination_Plus_Assistant",
            "summarizeBy": "sum"
          },
          {
            "name": "Senior_citizen_Over_65years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e2dd2b75-c649-44b2-a60f-79a180b433fc",
            "sourceColumn": "Senior_citizen_Over_65years",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel_Agents_Comp_B2B_EntryTicket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e90d8ed1-c828-4f66-aefa-9f5dabc7d170",
            "sourceColumn": "Travel_Agents_Comp_B2B_EntryTicket",
            "summarizeBy": "sum"
          },
          {
            "name": "Not_Used",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f6400174-7841-46f4-8911-1d1dc2def687",
            "sourceColumn": "Not_Used",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_from_Complimentaries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fe7fe120-87f6-4509-8aaa-f46c2c1baba2",
            "sourceColumn": "Entries_from_Complimentaries",
            "summarizeBy": "sum"
          },
          {
            "name": "Special_Edition_Silver_Entry",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1c6c9e1e-5248-4f9e-ad4c-510e009169e2",
            "sourceColumn": "Special_Edition_Silver_Entry",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_Gov_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4fc5c1aa-cd74-48a4-a9b0-3dd0bcb38975",
            "sourceColumn": "Homat_Al_Watan_Gov_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Al_Sadaa_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "94f47f74-5472-4a9e-93c6-f5804612bedf",
            "sourceColumn": "Entries_Al_Sadaa_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Esaad_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0b635a39-57c8-4533-bc09-b3113da055a6",
            "sourceColumn": "Entries_Esaad_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7c333e71-ae08-4ed7-8182-648d69eff263",
            "sourceColumn": "Total_Park_Attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_Id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a2c28849-c853-458d-babe-5d28e2664a81",
            "sourceColumn": "Season_Id",
            "summarizeBy": "count"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e5d8d5a8-8a3a-4e8e-89e4-0d01c2e99035",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5c3b9859-9753-40f4-b269-3b4e6435226e",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fffe04e3-3b17-48d3-bbf9-b5f0b7e95f3d",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e4238bc9-5cde-4242-8b28-ce48e98e21cc",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "de656704-7d08-4cc5-9a61-9f249c40825a",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "none"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0cec8896-64b0-4d23-839d-d93214f2badc",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "aceff8c3-aad0-4730-8166-3ae84f0802c2",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ff1b33be-4cfe-4831-a2a0-07ff64902fa8",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "Complimentary Tickets2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f457db70-98f0-4a05-8746-57eb9039570e",
            "sourceColumn": "Complimentary Tickets2",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "5bdac55f-c823-438c-ba98-70cd750bee45",
        "partitions": [
          {
            "name": "S27_GuestCounts_2",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"S27_GuestCounts (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"S27_GuestCounts (2)\"]}[Data]",
                "in",
                "    #\"S27_GuestCounts (2)1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_5c1cdbb3-6770-4400-9b16-989b283421d7",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "a6d6acd9-ae0a-402a-b62d-1cdba37c0763",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "f2faa28a-19ba-40eb-9a6e-f37c3d50cb37",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "0d100dfc-c380-4b6e-add0-638667668596",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "46b2c318-9544-486c-96d1-8aaafff5a673",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "7f7ad5ab-8f77-4420-8492-b840553fe4ea",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "1edce5f3-483f-4c02-9cfb-60d3b2b6d9f3",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "9e92383b-61f8-4f3b-ac0b-c34cb71f0d9f",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "6cc3ffa6-4ec2-4dc6-88dc-34cf88e6a421",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "118f2efa-63ed-40cf-a0af-034bb0c037fd",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "dbeb0d0a-7868-4fc2-ab9b-b3162436f47f",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "0d806cd6-e185-432e-902b-57e876fbf4f2",
                "ordinal": 3
              }
            ],
            "lineageTag": "fd5502b8-42ea-4a6f-bada-c207bf1bbd30"
          }
        ],
        "isHidden": true,
        "lineageTag": "85aab597-2dd9-48cb-bb85-c6f48ad43bef",
        "partitions": [
          {
            "name": "LocalDateTable_5c1cdbb3-6770-4400-9b16-989b283421d7",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('S27_GuestCounts_2'[Date])), 1, 1), Date(Year(MAX('S27_GuestCounts_2'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "Sales Data all Seasons (2)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "955d5edc-ec58-472c-956a-1386f143e073",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_59e8f417-c748-435c-9fbb-2ce850437c8c"
                },
                "isDefault": true,
                "relationship": "0fae6f8e-6a9d-40a6-8982-7d6b36878e91"
              }
            ]
          },
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d8bf5ded-837a-41ce-9a19-5125cae3b353",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c703e4cd-538c-4933-9503-b919a5730729",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "34e418ef-33dc-4044-bf3b-ce6371813caa",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "df598688-384f-4650-a0bc-02a45c99fc0f",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4e81fc9c-173e-48ca-879e-916449acaa79",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "000a219a-a7bc-4722-85dd-6bf65cafed66",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "Total park attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c2a9bf7b-a568-4e5e-9f00-646f838d768b",
            "sourceColumn": "Total park attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5efac0e9-f306-4531-8ce2-696b8dc0b646",
            "sourceColumn": "B2C : Gate Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "90365c76-b44a-4dc4-871f-14c44ca0bc07",
            "sourceColumn": "B2C : Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C : Gate and Online Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0a7889da-24f2-47af-a129-33a4dc75176f",
            "sourceColumn": "B2C : Gate and Online Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2B : Corporate and Travel Agents Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "08659f76-0d71-4629-9990-1f894ae27004",
            "sourceColumn": "B2B : Corporate and Travel Agents Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "B2C + B2B Ticket Revenue 2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "89de3255-1036-4a83-9904-1fb40d9c981a",
            "sourceColumn": "B2C + B2B Ticket Revenue 2",
            "summarizeBy": "sum"
          },
          {
            "name": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f5f035a0-2cbc-415a-8d4e-28bfae7dc593",
            "sourceColumn": "CARNAVAL : GV Rides + 3rd Party Games 3",
            "summarizeBy": "sum"
          },
          {
            "name": "STUNT SHOW",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2a7f5eb7-32c2-418e-9957-972ab0cab08f",
            "sourceColumn": "STUNT SHOW",
            "summarizeBy": "sum"
          },
          {
            "name": "RIPLEYS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "540a4df0-d9e1-4996-96d0-7934b7e4589a",
            "sourceColumn": "RIPLEYS",
            "summarizeBy": "sum"
          },
          {
            "name": "PETER RABBIT 4",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e465ead7-e565-452c-9526-db548d9b7fc6",
            "sourceColumn": "PETER RABBIT 4",
            "summarizeBy": "sum"
          },
          {
            "name": "VALET AND VIP PARKING",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "53ca255f-a46a-4f60-b2b1-6caef316f8e2",
            "sourceColumn": "VALET AND VIP PARKING",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Operating Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "92b68e5d-7c02-422d-a223-0b1f1925b826",
            "sourceColumn": "Total Operating Revenue",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4bf8e370-523c-4b85-9ddd-11b7ae2bc554",
            "sourceColumn": "Season_id",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e8f76378-5d3e-43e6-b510-718a0f002f97",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "da8e1687-b54c-49a9-bdba-101b6101e631",
            "sourceColumn": "Homat_Al_Watan_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5a2b6b16-405d-4952-8808-3ee73ad574e1",
            "sourceColumn": "Homat_Al_Watan_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "B2CAnyDay_General_Admission_DPRPromotion",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9d98a7af-823b-42e8-9800-622672717c2d",
            "sourceColumn": "B2CAnyDay_General_Admission_DPRPromotion",
            "summarizeBy": "sum"
          },
          {
            "name": "Special_Edition_Silver_Entry",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "be47a6be-7025-4aef-9678-89f442352a04",
            "sourceColumn": "Special_Edition_Silver_Entry",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_Gov_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cd57d28d-a48a-4c36-ad1a-dbd0416809f1",
            "sourceColumn": "Homat_Al_Watan_Gov_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Al_Sadaa_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1e474931-27ce-4b31-8020-49cdb1d1aaf8",
            "sourceColumn": "Entries_Al_Sadaa_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Esaad_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "13fc501e-0fa0-49cf-adab-b2e75c14e3a8",
            "sourceColumn": "Entries_Esaad_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4e8e2c28-f321-4d65-9da8-2ce7501d3e06",
            "sourceColumn": "Total_Park_Attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1823c7aa-fc02-4ee4-a7f3-c2461d407ee4",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d0e0c8d8-e7de-41b4-80c9-225272f677b3",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "Complimentry Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0add4970-085a-4881-ba04-0b9d444e83ca",
            "sourceColumn": "Complimentry Tickets",
            "summarizeBy": "sum"
          }
        ],
        "excludeFromModelRefresh": true,
        "lineageTag": "2cbf85a0-8f2a-4e42-9cda-704dcea32af3",
        "partitions": [
          {
            "name": "Sales Data all Seasons (2)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = PowerBI.Dataflows(null),",
                "    #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\" = Source{[workspaceId=\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"]}[Data],",
                "    #\"a671d159-a017-4946-8f8f-c6a5b637746a\" = #\"900de5b0-2f7b-4d94-a465-ee52acdc5d72\"{[dataflowId=\"a671d159-a017-4946-8f8f-c6a5b637746a\"]}[Data],",
                "    #\"Sales Data all Seasons (2)1\" = #\"a671d159-a017-4946-8f8f-c6a5b637746a\"{[entity=\"Sales Data all Seasons\"]}[Data],",
                "    #\"Sorted Rows1\" = Table.Sort(#\"Sales Data all Seasons (2)1\",{{\"Date\", Order.Descending}}),",
                "    #\"Appended Query\" = Table.Combine({#\"Sorted Rows1\", S27_GuestCounts_3}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Appended Query\",{\"CulturalGate_CG\", \"Happiness_Gate\", \"GOTW & CG self vending kiosks\", \"HG_Self_Vending_Kiosks\", \"Ticket_Printing_Error\", \"Emergency_Tickets_and_Gate_5C\", \"Daily_Ticket_Sales\", \"VIP_Main_Gate\", \"VIP_Cultural_Gate\", \"VIP_Happiness_Gate\", \"Fazza_Main_Gate\", \"Fazza_Cultural_Gate\", \"Fazza_Happiness_Gate\", \"Family_Packs\", \"Pre_Sales_Group_Discount_and_Corporate\", \"Travel_Agents_WEBB2B\", \"Web_Sales_Total\", \"Web_Sales_B2C_AnyDay\", \"Web_Sales_B2CValue\", \"Esaad_B2CAnyDay\", \"Esaad_B2CValue\", \"AlSaada_B2CAnyDay\", \"AlSaada_B2CValue\", \"Entries_from_pre_Sold_Tickets\", \"VIP_Comps_Total\", \"VIP_General_Admission_Complimentary\", \"VIP_General_Admission_Mini\", \"VIP_General_Admission_Media\", \"Family_Packs_Comp\", \"Employee_and_Other_comps_Total\", \"Complimentary_A_Ticket\", \"GovtAuthority_Complimentary_Ticket\", \"GVCEOComplimentary_Ticket\", \"GV_Entertainment _Ticket\", \"Media_Pass\", \"Mystery_Shopper_Complimentary\", \"Security_Complimentary_Ticket\", \"Emirates_Airline_Promotion_Comp\", \"DHE_Family_Day\", \"Complimentary_Ticket_E\", \"Others\", \"Child_Under_3_years\", \"People_of_Determination_Plus_Assistant\", \"Senior_citizen_Over_65years\", \"Travel_Agents_Comp_B2B_EntryTicket\", \"Not_Used\", \"Entries_from_Complimentaries\", \"Gate_of_the_World_GOTWA\", \"Day_Type\", \"Day\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",null,0,Replacer.ReplaceValue,{\"Fazaa/DXB\"}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Replaced Value\",{{\"Date\", Order.Descending}}),",
                "    #\"Merged Columns\" = Table.CombineColumns(Table.TransformColumnTypes(#\"Sorted Rows\", {{\"Complimentary Tickets\", type text}, {\"Complimentary Tickets2\", type text}}, \"en-US\"),{\"Complimentary Tickets\", \"Complimentary Tickets2\"},Combiner.CombineTextByDelimiter(\"\", QuoteStyle.None),\"Complimentry Tickets\"),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Merged Columns\",{{\"B2C : Gate Tickets\", Int64.Type}, {\"B2C : Online Tickets\", Int64.Type}, {\"B2C : Gate and Online\", Int64.Type}, {\"B2B : Corporate and Travel Agents Tickets\", Int64.Type}, {\"B2C + B2B Tickets\", Int64.Type}, {\"Pre-purchased Pack Tickets\", Int64.Type}, {\"Total park attendance\", Int64.Type}, {\"Complimentry Tickets\", Int64.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_59e8f417-c748-435c-9fbb-2ce850437c8c",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "0c9040be-992e-450f-8ccf-c350653812ff",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "0d02e818-2c96-46f8-abab-1082cf6e4bdb",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "b5e7d47c-a5cf-446e-b4e1-90f31424558d",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "6c5da69f-1f85-42b1-a22e-6b9ad3c05392",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "01916a90-7cd2-4e12-937f-57eb8ab2c6ef",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "8686c85d-9fe4-4d00-926a-bf21c03525ee",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "9c2985a3-d7e3-46a0-bcb5-6a3796b482d3",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "78ed85fc-17ce-4a0f-be7c-6aeafe4b1c57",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "8359ba95-810a-4e8c-a494-20e8627840e5",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "af117352-f1a0-4346-ba3f-17c21bd81fac",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "b7a4c556-746f-4e19-930e-04a76d1d1ea9",
                "ordinal": 3
              }
            ],
            "lineageTag": "2a372d6d-2725-424b-b924-010dfcf8d372"
          }
        ],
        "isHidden": true,
        "lineageTag": "a489da52-e08d-4885-9280-f2a7a35c8d87",
        "partitions": [
          {
            "name": "LocalDateTable_59e8f417-c748-435c-9fbb-2ce850437c8c",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Sales Data all Seasons (2)'[Date])), 1, 1), Date(Year(MAX('Sales Data all Seasons (2)'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "S27_GuestCounts_3",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "3ab455d0-61c4-467e-b7ce-fe786dcd97e9",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_2137d3e5-07f3-42f4-b94e-cb20af52a0f6"
                },
                "isDefault": true,
                "relationship": "4bd520cb-0569-4b90-94b4-36f254538a0d"
              }
            ]
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "786a77db-6944-41e4-88e7-e34616f98174",
            "sourceColumn": "Day",
            "summarizeBy": "none"
          },
          {
            "name": "Day_Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "af96cde3-6b2b-4a8a-b879-6321316bb83c",
            "sourceColumn": "Day_Type",
            "summarizeBy": "none"
          },
          {
            "name": "Gate_of_the_World_GOTWA",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b24545ad-6f0c-4991-b2a9-3efab4ded41f",
            "sourceColumn": "Gate_of_the_World_GOTWA",
            "summarizeBy": "sum"
          },
          {
            "name": "CulturalGate_CG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3ab7c95c-d34f-4f2f-b0aa-8d5bde0df491",
            "sourceColumn": "CulturalGate_CG",
            "summarizeBy": "sum"
          },
          {
            "name": "Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9cde8bce-84c4-4ba3-9cc2-4c2d7b55cdd2",
            "sourceColumn": "Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "GOTW & CG self vending kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f2f385fd-5b41-492a-bb85-6966a9a33f4b",
            "sourceColumn": "GOTW & CG self vending kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "HG_Self_Vending_Kiosks",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3ed587f2-5bce-4e05-bd92-e0ab4276907f",
            "sourceColumn": "HG_Self_Vending_Kiosks",
            "summarizeBy": "sum"
          },
          {
            "name": "Ticket_Printing_Error",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fcc42dc3-89ca-4cc7-89c0-37435e4224a1",
            "sourceColumn": "Ticket_Printing_Error",
            "summarizeBy": "sum"
          },
          {
            "name": "Emergency_Tickets_and_Gate_5C",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "60d67dfb-be07-41b9-97a0-7cbb6ee600b1",
            "sourceColumn": "Emergency_Tickets_and_Gate_5C",
            "summarizeBy": "sum"
          },
          {
            "name": "Daily_Ticket_Sales",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "424fc634-f37d-4046-85a9-43965ecdd509",
            "sourceColumn": "Daily_Ticket_Sales",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Main_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "03d38075-cfbf-42ca-8bf1-0742a70a5de5",
            "sourceColumn": "VIP_Main_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "10e6d1c2-ff1f-4978-9179-616402c3cc2f",
            "sourceColumn": "VIP_Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e119d907-3d11-4569-a9b6-073d830ef86d",
            "sourceColumn": "VIP_Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Main_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6de24d65-0ce0-4e15-96f4-20e413540cc3",
            "sourceColumn": "Fazza_Main_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Cultural_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "82d9de25-7e49-41dc-99b6-e10fe07d5394",
            "sourceColumn": "Fazza_Cultural_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazza_Happiness_Gate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3fc52a45-6e61-4b8b-af92-9cc8e21cfe80",
            "sourceColumn": "Fazza_Happiness_Gate",
            "summarizeBy": "sum"
          },
          {
            "name": "Family_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ae0ea7dd-d371-4cc9-97d8-3750d9df89c6",
            "sourceColumn": "Family_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Pre_Sales_Group_Discount_and_Corporate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8c4f01df-9eb5-476b-8912-88d226ce14f3",
            "sourceColumn": "Pre_Sales_Group_Discount_and_Corporate",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel_Agents_WEBB2B",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e2f4ff24-0bad-47de-ab0d-abe6302497f4",
            "sourceColumn": "Travel_Agents_WEBB2B",
            "summarizeBy": "sum"
          },
          {
            "name": "Fazaa/DXB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a3e32e06-7059-45f3-8569-c4a7c8716bfc",
            "sourceColumn": "Fazaa/DXB",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d630c7e3-10c7-432f-9fe1-f8fb71a1e080",
            "sourceColumn": "Web_Sales_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_B2C_AnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b4b69f35-6ab3-4383-ab62-57cf5c7e9947",
            "sourceColumn": "Web_Sales_B2C_AnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Web_Sales_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3fddb95d-489f-4ead-88cb-cce58371947c",
            "sourceColumn": "Web_Sales_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1e74b737-951c-46d9-b1b2-9a1e69355318",
            "sourceColumn": "Esaad_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Esaad_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "cbf9af89-162b-4186-aae1-ca1a886eb033",
            "sourceColumn": "Esaad_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "AlSaada_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7656dbff-dd31-4e69-a09c-548a34429979",
            "sourceColumn": "AlSaada_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "AlSaada_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "aafb5683-bbf4-4fd4-a429-e3d00e606199",
            "sourceColumn": "AlSaada_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CAnyDay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9861b4f9-5503-4a25-8e7e-f9b2f9e6d384",
            "sourceColumn": "Homat_Al_Watan_B2CAnyDay",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_B2CValue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d49bfc92-9bb0-46c4-8d27-cb6052478306",
            "sourceColumn": "Homat_Al_Watan_B2CValue",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_from_pre_Sold_Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "05b6f54e-3e5e-4466-b244-23f6280232e6",
            "sourceColumn": "Entries_from_pre_Sold_Tickets",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_Comps_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a0b4258c-8f02-453e-947a-1ec86e59c788",
            "sourceColumn": "VIP_Comps_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "7aca66d8-e687-4aaa-8272-669cacc24d04",
            "sourceColumn": "VIP_General_Admission_Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Mini",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bf4a1c70-2152-4463-a0fd-5a35cd64347d",
            "sourceColumn": "VIP_General_Admission_Mini",
            "summarizeBy": "sum"
          },
          {
            "name": "VIP_General_Admission_Media",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "33cc9542-b33f-412c-a318-a9413e0605f8",
            "sourceColumn": "VIP_General_Admission_Media",
            "summarizeBy": "sum"
          },
          {
            "name": "Family_Packs_Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2fd026d8-4596-4d21-b8d0-1896c6d78500",
            "sourceColumn": "Family_Packs_Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "Employee_and_Other_comps_Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9abcd9f7-3d25-426f-9f51-0dcb815c44dd",
            "sourceColumn": "Employee_and_Other_comps_Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary_A_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "915a850a-197c-47e1-a32a-4d59370ccab1",
            "sourceColumn": "Complimentary_A_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GovtAuthority_Complimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0122e1f9-8633-459f-96c5-7f7e170e3f9c",
            "sourceColumn": "GovtAuthority_Complimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GVCEOComplimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b6def8b5-20c7-4f01-8e05-0351516f0b80",
            "sourceColumn": "GVCEOComplimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "GV_Entertainment _Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9948cfc9-955c-4a9a-a1a2-d002a2c78c47",
            "sourceColumn": "GV_Entertainment _Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Media_Pass",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9aeabc49-be19-4c75-aa6c-ce463235336f",
            "sourceColumn": "Media_Pass",
            "summarizeBy": "sum"
          },
          {
            "name": "Mystery_Shopper_Complimentary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "41be0c05-6ce1-439c-87a7-8634416944d1",
            "sourceColumn": "Mystery_Shopper_Complimentary",
            "summarizeBy": "sum"
          },
          {
            "name": "Security_Complimentary_Ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9feaf83a-ba42-4d78-99da-950dee248889",
            "sourceColumn": "Security_Complimentary_Ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "Emirates_Airline_Promotion_Comp",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "dc226182-6368-4454-a6ac-063e87a737ca",
            "sourceColumn": "Emirates_Airline_Promotion_Comp",
            "summarizeBy": "sum"
          },
          {
            "name": "DHE_Family_Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "41787997-6b13-46cc-93b4-66d8357b3900",
            "sourceColumn": "DHE_Family_Day",
            "summarizeBy": "sum"
          },
          {
            "name": "B2CAnyDay_General_Admission_DPRPromotion",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9cbe4e03-603d-4a8f-86fb-55dac15690a8",
            "sourceColumn": "B2CAnyDay_General_Admission_DPRPromotion",
            "summarizeBy": "sum"
          },
          {
            "name": "Complimentary_Ticket_E",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a5a31b1f-e4a7-4ccf-98ac-4f7059c0367a",
            "sourceColumn": "Complimentary_Ticket_E",
            "summarizeBy": "sum"
          },
          {
            "name": "Others",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4ba1b800-20a4-47cd-b9b1-751ea92efc42",
            "sourceColumn": "Others",
            "summarizeBy": "sum"
          },
          {
            "name": "Child_Under_3_years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a21520fa-8d90-4420-878b-da340cb56659",
            "sourceColumn": "Child_Under_3_years",
            "summarizeBy": "sum"
          },
          {
            "name": "People_of_Determination_Plus_Assistant",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8cd1b722-bfe5-4b1d-9569-44d6c939dbf1",
            "sourceColumn": "People_of_Determination_Plus_Assistant",
            "summarizeBy": "sum"
          },
          {
            "name": "Senior_citizen_Over_65years",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "00cb2435-85f4-4811-ab8b-bf27cbc10973",
            "sourceColumn": "Senior_citizen_Over_65years",
            "summarizeBy": "sum"
          },
          {
            "name": "Travel_Agents_Comp_B2B_EntryTicket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "b296b36b-b1cb-451f-8e53-80616ebe4031",
            "sourceColumn": "Travel_Agents_Comp_B2B_EntryTicket",
            "summarizeBy": "sum"
          },
          {
            "name": "Not_Used",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "63cb35fc-2bed-4380-8886-2b1efded3b7d",
            "sourceColumn": "Not_Used",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_from_Complimentaries",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c65593d5-f2f0-48ef-b92d-6c3bcdcce5ff",
            "sourceColumn": "Entries_from_Complimentaries",
            "summarizeBy": "sum"
          },
          {
            "name": "Special_Edition_Silver_Entry",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d971668a-7af2-4803-96ec-d2b94db25caf",
            "sourceColumn": "Special_Edition_Silver_Entry",
            "summarizeBy": "sum"
          },
          {
            "name": "Homat_Al_Watan_Gov_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "532bd172-e82d-4698-aea6-84616f129e27",
            "sourceColumn": "Homat_Al_Watan_Gov_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Al_Sadaa_Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a505bd8b-a869-47a3-bbd8-aed93f723e55",
            "sourceColumn": "Entries_Al_Sadaa_Pack",
            "summarizeBy": "sum"
          },
          {
            "name": "Entries_Esaad_Packs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6afc1f5f-f719-48a3-bdc8-687ddae4028d",
            "sourceColumn": "Entries_Esaad_Packs",
            "summarizeBy": "sum"
          },
          {
            "name": "Total_Park_Attendance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "86555f49-4d9b-4a76-9bfe-ff1a466074c9",
            "sourceColumn": "Total_Park_Attendance",
            "summarizeBy": "sum"
          },
          {
            "name": "Season_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ba000837-247c-4024-bffe-27a6d55a3dbd",
            "sourceColumn": "Season_id",
            "summarizeBy": "sum"
          },
          {
            "name": "week_num",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "001ceef9-7287-432e-a9c8-284728f6a387",
            "sourceColumn": "week_num",
            "summarizeBy": "sum"
          },
          {
            "name": "day_num_tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c1f4f595-5e40-449c-bfbf-8e4867b817d3",
            "sourceColumn": "day_num_tag",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b6885837-3c9e-4742-a791-d8508cb73390",
            "sourceColumn": "B2C : Gate Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Online Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8a1d9336-5e18-41d5-a32d-e36fdd1306ab",
            "sourceColumn": "B2C : Online Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C : Gate and Online",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c479c983-7ff0-4f29-9364-1d6e516110b2",
            "sourceColumn": "B2C : Gate and Online",
            "summarizeBy": "none"
          },
          {
            "name": "B2B : Corporate and Travel Agents Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bea8407a-f187-4515-92bc-666b02a3fa1c",
            "sourceColumn": "B2B : Corporate and Travel Agents Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "B2C + B2B Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8c9bc782-d2b9-48e9-8bab-076230ed75fc",
            "sourceColumn": "B2C + B2B Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "Pre-purchased Pack Tickets",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0c11d77d-26b1-44df-abbe-ca2a34024c64",
            "sourceColumn": "Pre-purchased Pack Tickets",
            "summarizeBy": "none"
          },
          {
            "name": "Complimentary Tickets2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a520eb8f-39c1-445c-ac72-d1424dca07fb",
            "sourceColumn": "Complimentary Tickets2",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "0dcc31ee-c0aa-4f05-867a-f85c276e88ba",
        "partitions": [
          {
            "name": "S27_GuestCounts_3",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = S27_GuestCounts_2,",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"Season_Id\", \"Season_id\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_2137d3e5-07f3-42f4-b94e-cb20af52a0f6",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "8bf6bbfa-1d4a-445c-ab65-2d6dbb519c40",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isHidden": true,
            "lineageTag": "a9e7586e-e6c5-44c6-8f63-fa0fcb9a5c99",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isHidden": true,
            "lineageTag": "0407e42b-b98d-462a-9309-759a12afbe14",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isHidden": true,
            "lineageTag": "07b6f7b5-6114-4262-ad0d-d037ba0769d4",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isHidden": true,
            "lineageTag": "4b3f6373-5ddc-4b53-9fdb-7f6700b8c73d",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isHidden": true,
            "lineageTag": "f008bd60-cf27-404f-aa41-927a05224ae5",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isHidden": true,
            "lineageTag": "03824a48-373c-4d4d-9121-a7c5fafe930c",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "6ff871c7-c712-448e-9c90-6bccb892819a",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "e6e13ad0-4dd2-4b0d-aaf6-3ca4cc6bb297",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "7e73a003-246a-4e60-a655-d2a73a809104",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "6d2579a5-8f62-46f8-9f58-cb4d066b1bc4",
                "ordinal": 3
              }
            ],
            "lineageTag": "83c003dc-e0d6-4110-90de-13c834cb4322"
          }
        ],
        "isHidden": true,
        "lineageTag": "e23739d9-0f50-4863-842a-dab0b597ea4b",
        "partitions": [
          {
            "name": "LocalDateTable_2137d3e5-07f3-42f4-b94e-cb20af52a0f6",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('S27_GuestCounts_3'[Date])), 1, 1), Date(Year(MAX('S27_GuestCounts_3'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      }
    ]
  }
}